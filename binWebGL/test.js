// Generated by Haxe 4.0.0-rc.2+1dc93a3
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var htmlHelper_webgl_WebGLSetup = function(width_,height_,autoChild) {
	if(autoChild == null) {
		autoChild = true;
	}
	this.colors = [];
	this.indices = [];
	this.vertices = [];
	this.matrix32Array = new Float32Array([1.0,0.0,0.0,0.0,0.0,1.1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0]);
	this.BACK = true;
	this.CULL_FACE = true;
	this.DEPTH_TEST = true;
	this.bgAlpha = 1.;
	this.bgBlue = 1.;
	this.bgGreen = 1.;
	this.bgRed = 1.;
	this.width = width_;
	this.height = height_;
	this.canvas = window.document.createElement("canvas");
	this.canvas.width = this.width;
	this.canvas.height = this.height;
	var dom = this.canvas;
	var style = dom.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = Std.string(0 + "px");
	style.top = Std.string(0 + "px");
	style.position = "absolute";
	if(autoChild) {
		window.document.body.appendChild(this.canvas);
	}
	this.gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.canvas,null);
};
htmlHelper_webgl_WebGLSetup.__name__ = true;
htmlHelper_webgl_WebGLSetup.createVertexShader = function(gl,str) {
	var vertexShader = gl.createShader(35633);
	gl.shaderSource(vertexShader,str);
	gl.compileShader(vertexShader);
	return vertexShader;
};
htmlHelper_webgl_WebGLSetup.createFragmentShader = function(gl,str) {
	var fragmentShader = gl.createShader(35632);
	gl.shaderSource(fragmentShader,str);
	gl.compileShader(fragmentShader);
	return fragmentShader;
};
htmlHelper_webgl_WebGLSetup.createShaderProgram = function(gl,vertex,fragment) {
	var program = gl.createProgram();
	gl.attachShader(program,vertex);
	gl.attachShader(program,fragment);
	gl.linkProgram(program);
	gl.useProgram(program);
	return program;
};
htmlHelper_webgl_WebGLSetup.uploadTriangleDataToBuffers = function(gl,program,vertices,indices) {
	var vertexBuffer = gl.createBuffer();
	gl.bindBuffer(34962,vertexBuffer);
	gl.bufferData(34962,new Float32Array(vertices),35044);
	var position = gl.getAttribLocation(program,"pos");
	gl.vertexAttribPointer(position,3,5126,false,0,0);
	gl.enableVertexAttribArray(position);
	gl.bindBuffer(34962,null);
};
htmlHelper_webgl_WebGLSetup.uploadDataToBuffers = function(gl,program,vertices,colors,indices) {
	var vertexBuffer = gl.createBuffer();
	gl.bindBuffer(34962,vertexBuffer);
	gl.bufferData(34962,new Float32Array(vertices),35044);
	var position = gl.getAttribLocation(program,"pos");
	gl.vertexAttribPointer(position,3,5126,false,0,0);
	gl.enableVertexAttribArray(position);
	gl.bindBuffer(34962,null);
	var colorBuffer = gl.createBuffer();
	gl.bindBuffer(34962,colorBuffer);
	gl.bufferData(34962,new Float32Array(colors),35044);
	var col = gl.getAttribLocation(program,"color");
	gl.vertexAttribPointer(col,4,5126,false,0,0);
	gl.enableVertexAttribArray(col);
	gl.bindBuffer(34962,null);
};
htmlHelper_webgl_WebGLSetup.uploadFloatToBuffers = function(gl,program,name,att,arr) {
	var floatBuffer = gl.createBuffer();
	gl.bindBuffer(34962,floatBuffer);
	gl.bufferData(34962,new Float32Array(arr),35044);
	var flo = gl.getAttribLocation(program,name);
	gl.vertexAttribPointer(flo,att,5126,false,0,0);
	gl.enableVertexAttribArray(flo);
	gl.bindBuffer(34962,null);
};
htmlHelper_webgl_WebGLSetup.uploadSimpleColorToBuffers = function(gl,program,colors) {
	var colorBuffer = gl.createBuffer();
	gl.bindBuffer(34962,colorBuffer);
	gl.bufferData(34962,new Float32Array(colors),35044);
	var col = gl.getAttribLocation(program,"color");
	gl.vertexAttribPointer(col,4,5126,false,0,0);
	gl.enableVertexAttribArray(col);
	gl.bindBuffer(34962,null);
};
htmlHelper_webgl_WebGLSetup.toRGB = function(int) {
	return { r : (int >> 16 & 255) / 255, g : (int >> 8 & 255) / 255, b : (int & 255) / 255};
};
htmlHelper_webgl_WebGLSetup.ident = function() {
	return [1.0,0.0,0.0,0.0,0.0,1.1,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0];
};
htmlHelper_webgl_WebGLSetup.prototype = {
	setupProgram: function(vertexString,fragmentString) {
		var gl = this.gl;
		var vertexShader = gl.createShader(35633);
		gl.shaderSource(vertexShader,vertexString);
		gl.compileShader(vertexShader);
		var vertex = vertexShader;
		var gl1 = this.gl;
		var fragmentShader = gl1.createShader(35632);
		gl1.shaderSource(fragmentShader,fragmentString);
		gl1.compileShader(fragmentShader);
		var fragment = fragmentShader;
		var gl2 = this.gl;
		var program = gl2.createProgram();
		gl2.attachShader(program,vertex);
		gl2.attachShader(program,fragment);
		gl2.linkProgram(program);
		gl2.useProgram(program);
		this.program = program;
		return this.program;
	}
	,clearVerticesAndColors: function() {
		this.vertices = [];
		this.indices = [];
		this.colors = [];
	}
	,setVerticesAndColors: function(vertices,triangleColors) {
		var rgb_r;
		var rgb_g;
		var rgb_b;
		var colorAlpha = 1.0;
		var _g = 0;
		var _g1 = vertices.length / 3 | 0;
		while(_g < _g1) {
			var i = _g++;
			var int = triangleColors[i];
			rgb_r = (int >> 16 & 255) / 255;
			rgb_g = (int >> 8 & 255) / 255;
			rgb_b = (int & 255) / 255;
			this.colors.push(rgb_r);
			this.colors.push(rgb_g);
			this.colors.push(rgb_b);
			this.colors.push(colorAlpha);
			this.colors.push(rgb_r);
			this.colors.push(rgb_g);
			this.colors.push(rgb_b);
			this.colors.push(colorAlpha);
			this.colors.push(rgb_r);
			this.colors.push(rgb_g);
			this.colors.push(rgb_b);
			this.colors.push(colorAlpha);
			this.indices.push(i);
		}
		var gl = this.gl;
		var program = this.program;
		var colors = this.colors;
		var indices = this.indices;
		var vertexBuffer = gl.createBuffer();
		gl.bindBuffer(34962,vertexBuffer);
		gl.bufferData(34962,new Float32Array(vertices),35044);
		var position = gl.getAttribLocation(program,"pos");
		gl.vertexAttribPointer(position,3,5126,false,0,0);
		gl.enableVertexAttribArray(position);
		gl.bindBuffer(34962,null);
		var colorBuffer = gl.createBuffer();
		gl.bindBuffer(34962,colorBuffer);
		gl.bufferData(34962,new Float32Array(colors),35044);
		var col = gl.getAttribLocation(program,"color");
		gl.vertexAttribPointer(col,4,5126,false,0,0);
		gl.enableVertexAttribArray(col);
		gl.bindBuffer(34962,null);
	}
	,render: function() {
		this.gl.clearColor(this.bgRed,this.bgGreen,this.bgBlue,this.bgAlpha);
		if(this.DEPTH_TEST) {
			this.gl.enable(2929);
		}
		this.gl.disable(2884);
		this.gl.clear(16384);
		this.gl.viewport(0,0,this.canvas.width,this.canvas.height);
		var modelViewProjectionID = this.gl.getUniformLocation(this.program,"modelViewProjection");
		this.gl.uniformMatrix4fv(modelViewProjectionID,false,this.matrix32Array);
		this.gl.drawArrays(4,0,this.indices.length);
	}
};
var Main = function() {
	this.omegaY = Math.PI / 2;
	this.omegaX = 0.;
	htmlHelper_webgl_WebGLSetup.call(this,600,600);
	this.DEPTH_TEST = false;
	this.BACK = false;
	this.scale = 0.00166666666666666677;
	this.darkBackground();
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	this.modelViewProjection = this1;
	this.setupProgram("attribute vec3 pos;" + "attribute vec4 color;" + "varying vec4 vcol;" + "uniform mat4 modelViewProjection;" + "void main(void) {" + " gl_Position = modelViewProjection * vec4(pos, 1.0);" + " vcol = color;" + "}","precision mediump float;" + "varying vec4 vcol;" + "void main(void) {" + " gl_FragColor = vcol;" + "}");
	this.trilateralTest = new TrilateralTest(600);
	this.trilateralTest.setup();
	var triangles = this.trilateralTest.triangles;
	var triangleColors = this.trilateralTest.appColors;
	var rgb;
	var colorAlpha = 1.;
	var tri;
	var count = 0;
	var i = 0;
	var c = 0;
	var j = 0;
	var ox = -1.0;
	var oy = 1.0;
	var no = 0;
	var _g = 0;
	while(_g < triangles.length) {
		var tri1 = triangles[_g];
		++_g;
		this.vertices[i++] = tri1.ax * this.scale + ox;
		this.vertices[i++] = -tri1.ay * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		this.vertices[i++] = tri1.bx * this.scale + ox;
		this.vertices[i++] = -tri1.by * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		this.vertices[i++] = tri1.cx * this.scale + ox;
		this.vertices[i++] = -tri1.cy * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		if(tri1.mark != 0) {
			var int = triangleColors[tri1.mark];
			rgb = { r : (int >> 16 & 255) / 255, g : (int >> 8 & 255) / 255, b : (int & 255) / 255};
		} else {
			var int1 = triangleColors[tri1.colorID];
			rgb = { r : (int1 >> 16 & 255) / 255, g : (int1 >> 8 & 255) / 255, b : (int1 & 255) / 255};
		}
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
		this.vertices[i++] = tri1.ax * this.scale + ox;
		this.vertices[i++] = -tri1.ay * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		this.vertices[i++] = tri1.cx * this.scale + ox;
		this.vertices[i++] = -tri1.cy * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		this.vertices[i++] = tri1.bx * this.scale + ox;
		this.vertices[i++] = -tri1.by * this.scale + oy;
		this.vertices[i++] = tri1.depth;
		if(tri1.mark != 0) {
			var int2 = triangleColors[tri1.mark];
			rgb = { r : (int2 >> 16 & 255) / 255, g : (int2 >> 8 & 255) / 255, b : (int2 & 255) / 255};
		} else {
			var int3 = triangleColors[tri1.colorID];
			rgb = { r : (int3 >> 16 & 255) / 255, g : (int3 >> 8 & 255) / 255, b : (int3 & 255) / 255};
		}
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
		this.colors[c++] = rgb.r;
		this.colors[c++] = rgb.g;
		this.colors[c++] = rgb.b;
		this.colors[c++] = colorAlpha;
		this.indices[j++] = count++;
	}
	var gl = this.gl;
	var program = this.program;
	var vertices = this.vertices;
	var colors = this.colors;
	var indices = this.indices;
	var vertexBuffer = gl.createBuffer();
	gl.bindBuffer(34962,vertexBuffer);
	gl.bufferData(34962,new Float32Array(vertices),35044);
	var position = gl.getAttribLocation(program,"pos");
	gl.vertexAttribPointer(position,3,5126,false,0,0);
	gl.enableVertexAttribArray(position);
	gl.bindBuffer(34962,null);
	var colorBuffer = gl.createBuffer();
	gl.bindBuffer(34962,colorBuffer);
	gl.bufferData(34962,new Float32Array(colors),35044);
	var col = gl.getAttribLocation(program,"color");
	gl.vertexAttribPointer(col,4,5126,false,0,0);
	gl.enableVertexAttribArray(col);
	gl.bindBuffer(34962,null);
	if(htmlHelper_tools_AnimateTimer.s == null) {
		htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
		htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
		window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
		htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
		htmlHelper_tools_AnimateTimer.loop(60.0);
	}
	htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render_);
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.__super__ = htmlHelper_webgl_WebGLSetup;
Main.prototype = $extend(htmlHelper_webgl_WebGLSetup.prototype,{
	setAnimate: function() {
		if(htmlHelper_tools_AnimateTimer.s == null) {
			htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
			htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
			window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
			htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
			htmlHelper_tools_AnimateTimer.loop(60.0);
		}
		htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render_);
	}
	,darkBackground: function() {
		var dark = 0.09375;
		this.bgRed = dark;
		this.bgGreen = dark;
		this.bgBlue = dark;
	}
	,setTriangles: function(triangles,triangleColors) {
		var rgb;
		var colorAlpha = 1.;
		var tri;
		var count = 0;
		var i = 0;
		var c = 0;
		var j = 0;
		var ox = -1.0;
		var oy = 1.0;
		var no = 0;
		var _g = 0;
		while(_g < triangles.length) {
			var tri1 = triangles[_g];
			++_g;
			this.vertices[i++] = tri1.ax * this.scale + ox;
			this.vertices[i++] = -tri1.ay * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			this.vertices[i++] = tri1.bx * this.scale + ox;
			this.vertices[i++] = -tri1.by * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			this.vertices[i++] = tri1.cx * this.scale + ox;
			this.vertices[i++] = -tri1.cy * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			if(tri1.mark != 0) {
				var int = triangleColors[tri1.mark];
				rgb = { r : (int >> 16 & 255) / 255, g : (int >> 8 & 255) / 255, b : (int & 255) / 255};
			} else {
				var int1 = triangleColors[tri1.colorID];
				rgb = { r : (int1 >> 16 & 255) / 255, g : (int1 >> 8 & 255) / 255, b : (int1 & 255) / 255};
			}
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
			this.vertices[i++] = tri1.ax * this.scale + ox;
			this.vertices[i++] = -tri1.ay * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			this.vertices[i++] = tri1.cx * this.scale + ox;
			this.vertices[i++] = -tri1.cy * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			this.vertices[i++] = tri1.bx * this.scale + ox;
			this.vertices[i++] = -tri1.by * this.scale + oy;
			this.vertices[i++] = tri1.depth;
			if(tri1.mark != 0) {
				var int2 = triangleColors[tri1.mark];
				rgb = { r : (int2 >> 16 & 255) / 255, g : (int2 >> 8 & 255) / 255, b : (int2 & 255) / 255};
			} else {
				var int3 = triangleColors[tri1.colorID];
				rgb = { r : (int3 >> 16 & 255) / 255, g : (int3 >> 8 & 255) / 255, b : (int3 & 255) / 255};
			}
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
			this.colors[c++] = rgb.r;
			this.colors[c++] = rgb.g;
			this.colors[c++] = rgb.b;
			this.colors[c++] = colorAlpha;
			this.indices[j++] = count++;
		}
		var gl = this.gl;
		var program = this.program;
		var vertices = this.vertices;
		var colors = this.colors;
		var indices = this.indices;
		var vertexBuffer = gl.createBuffer();
		gl.bindBuffer(34962,vertexBuffer);
		gl.bufferData(34962,new Float32Array(vertices),35044);
		var position = gl.getAttribLocation(program,"pos");
		gl.vertexAttribPointer(position,3,5126,false,0,0);
		gl.enableVertexAttribArray(position);
		gl.bindBuffer(34962,null);
		var colorBuffer = gl.createBuffer();
		gl.bindBuffer(34962,colorBuffer);
		gl.bufferData(34962,new Float32Array(colors),35044);
		var col = gl.getAttribLocation(program,"color");
		gl.vertexAttribPointer(col,4,5126,false,0,0);
		gl.enableVertexAttribArray(col);
		gl.bindBuffer(34962,null);
	}
	,render_: function(i) {
		this.omegaX += Math.PI / 100;
		var theta = this.omegaX - Math.PI / 2;
		var c = Math.cos(theta);
		var s = Math.sin(theta);
		var this1 = new geom_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
		var rz = this1;
		var theta1 = this.omegaX - Math.PI / 2;
		var c1 = Math.cos(theta1);
		var s1 = Math.sin(theta1);
		var this2 = new geom_Mat4x3(c1,0.,s1,0.,0.,1.,0.,0.,-s1,0.,c1,0.);
		var ry = this2;
		var theta2 = this.omegaX - Math.PI / 2;
		var c2 = Math.cos(theta2);
		var s2 = Math.sin(theta2);
		var this3 = new geom_Mat4x3(1.,0.,0.,0.,0.,c2,-s2,0.,0.,s2,c2,0.);
		var rx = this3;
		var this4 = new geom_Mat4x3(rx.a * ry.a + rx.b * ry.e + rx.c * ry.i,rx.a * ry.b + rx.b * ry.f + rx.c * ry.j,rx.a * ry.c + rx.b * ry.g + rx.c + ry.k,rx.a * ry.d + rx.b * ry.h + rx.c * ry.l + rx.d,rx.e * ry.a + rx.f * ry.e + rx.g * ry.i,rx.e * ry.b + rx.f * ry.f + rx.g * ry.j,rx.e * ry.c + rx.f * ry.g + rx.g * ry.k,rx.e * ry.d + rx.f * ry.h + rx.g * ry.l + rx.h,rx.i * ry.a + rx.j * ry.e + rx.k * ry.i,rx.i * ry.b + rx.j * ry.f + rx.k * ry.j,rx.i * ry.c + rx.j * ry.g + rx.k * ry.k,rx.i * ry.d + rx.j * ry.h + rx.k * ry.l + rx.l);
		var r = this4;
		var this5 = new geom_Mat4x3(r.a * rz.a + r.b * rz.e + r.c * rz.i,r.a * rz.b + r.b * rz.f + r.c * rz.j,r.a * rz.c + r.b * rz.g + r.c + rz.k,r.a * rz.d + r.b * rz.h + r.c * rz.l + r.d,r.e * rz.a + r.f * rz.e + r.g * rz.i,r.e * rz.b + r.f * rz.f + r.g * rz.j,r.e * rz.c + r.f * rz.g + r.g * rz.k,r.e * rz.d + r.f * rz.h + r.g * rz.l + r.h,r.i * rz.a + r.j * rz.e + r.k * rz.i,r.i * rz.b + r.j * rz.f + r.k * rz.j,r.i * rz.c + r.j * rz.g + r.k * rz.k,r.i * rz.d + r.j * rz.h + r.k * rz.l + r.l);
		var modelViewProjection = this5;
		var arr = this.matrix32Array;
		arr.set([modelViewProjection.a,modelViewProjection.b,modelViewProjection.c,modelViewProjection.d,modelViewProjection.e,modelViewProjection.f,modelViewProjection.g,modelViewProjection.h,modelViewProjection.i,modelViewProjection.j,modelViewProjection.k,modelViewProjection.l,0.,0.,0.,1.]);
		this.render();
	}
	,render: function() {
		htmlHelper_webgl_WebGLSetup.prototype.render.call(this);
	}
	,spin: function() {
		this.omegaX += Math.PI / 100;
		var theta = this.omegaX - Math.PI / 2;
		var c = Math.cos(theta);
		var s = Math.sin(theta);
		var this1 = new geom_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
		var rz = this1;
		var theta1 = this.omegaX - Math.PI / 2;
		var c1 = Math.cos(theta1);
		var s1 = Math.sin(theta1);
		var this2 = new geom_Mat4x3(c1,0.,s1,0.,0.,1.,0.,0.,-s1,0.,c1,0.);
		var ry = this2;
		var theta2 = this.omegaX - Math.PI / 2;
		var c2 = Math.cos(theta2);
		var s2 = Math.sin(theta2);
		var this3 = new geom_Mat4x3(1.,0.,0.,0.,0.,c2,-s2,0.,0.,s2,c2,0.);
		var rx = this3;
		var this4 = new geom_Mat4x3(rx.a * ry.a + rx.b * ry.e + rx.c * ry.i,rx.a * ry.b + rx.b * ry.f + rx.c * ry.j,rx.a * ry.c + rx.b * ry.g + rx.c + ry.k,rx.a * ry.d + rx.b * ry.h + rx.c * ry.l + rx.d,rx.e * ry.a + rx.f * ry.e + rx.g * ry.i,rx.e * ry.b + rx.f * ry.f + rx.g * ry.j,rx.e * ry.c + rx.f * ry.g + rx.g * ry.k,rx.e * ry.d + rx.f * ry.h + rx.g * ry.l + rx.h,rx.i * ry.a + rx.j * ry.e + rx.k * ry.i,rx.i * ry.b + rx.j * ry.f + rx.k * ry.j,rx.i * ry.c + rx.j * ry.g + rx.k * ry.k,rx.i * ry.d + rx.j * ry.h + rx.k * ry.l + rx.l);
		var r = this4;
		var this5 = new geom_Mat4x3(r.a * rz.a + r.b * rz.e + r.c * rz.i,r.a * rz.b + r.b * rz.f + r.c * rz.j,r.a * rz.c + r.b * rz.g + r.c + rz.k,r.a * rz.d + r.b * rz.h + r.c * rz.l + r.d,r.e * rz.a + r.f * rz.e + r.g * rz.i,r.e * rz.b + r.f * rz.f + r.g * rz.j,r.e * rz.c + r.f * rz.g + r.g * rz.k,r.e * rz.d + r.f * rz.h + r.g * rz.l + r.h,r.i * rz.a + r.j * rz.e + r.k * rz.i,r.i * rz.b + r.j * rz.f + r.k * rz.j,r.i * rz.c + r.j * rz.g + r.k * rz.k,r.i * rz.d + r.j * rz.h + r.k * rz.l + r.l);
		return this5;
	}
});
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var TrilateralTest = function(stageRadius_) {
	this.bird_d = "M210.333,65.331C104.367,66.105-12.349,150.637,1.056,276.449c4.303,40.393,18.533,63.704,52.171,79.03c36.307,16.544,57.022,54.556,50.406,112.954c-9.935,4.88-17.405,11.031-19.132,20.015c7.531-0.17,14.943-0.312,22.59,4.341c20.333,12.375,31.296,27.363,42.979,51.72c1.714,3.572,8.192,2.849,8.312-3.078c0.17-8.467-1.856-17.454-5.226-26.933c-2.955-8.313,3.059-7.985,6.917-6.106c6.399,3.115,16.334,9.43,30.39,13.098c5.392,1.407,5.995-3.877,5.224-6.991c-1.864-7.522-11.009-10.862-24.519-19.229c-4.82-2.984-0.927-9.736,5.168-8.351l20.234,2.415c3.359,0.763,4.555-6.114,0.882-7.875c-14.198-6.804-28.897-10.098-53.864-7.799c-11.617-29.265-29.811-61.617-15.674-81.681c12.639-17.938,31.216-20.74,39.147,43.489c-5.002,3.107-11.215,5.031-11.332,13.024c7.201-2.845,11.207-1.399,14.791,0c17.912,6.998,35.462,21.826,52.982,37.309c3.739,3.303,8.413-1.718,6.991-6.034c-2.138-6.494-8.053-10.659-14.791-20.016c-3.239-4.495,5.03-7.045,10.886-6.876c13.849,0.396,22.886,8.268,35.177,11.218c4.483,1.076,9.741-1.964,6.917-6.917c-3.472-6.085-13.015-9.124-19.18-13.413c-4.357-3.029-3.025-7.132,2.697-6.602c3.905,0.361,8.478,2.271,13.908,1.767c9.946-0.925,7.717-7.169-0.883-9.566c-19.036-5.304-39.891-6.311-61.665-5.225c-43.837-8.358-31.554-84.887,0-90.363c29.571-5.132,62.966-13.339,99.928-32.156c32.668-5.429,64.835-12.446,92.939-33.85c48.106-14.469,111.903,16.113,204.241,149.695c3.926,5.681,15.819,9.94,9.524-6.351c-15.893-41.125-68.176-93.328-92.13-132.085c-24.581-39.774-14.34-61.243-39.957-91.247c-21.326-24.978-47.502-25.803-77.339-17.365c-23.461,6.634-39.234-7.117-52.98-31.273C318.42,87.525,265.838,64.927,210.333,65.331zM445.731,203.01c6.12,0,11.112,4.919,11.112,11.038c0,6.119-4.994,11.111-11.112,11.111s-11.038-4.994-11.038-11.111C434.693,207.929,439.613,203.01,445.731,203.01z";
	this.cubictest_d = "M100,200 C100,100 250,100 250,200S400,300 400,200";
	this.quadtest_d = "M200,300 Q400,50 600,300 T1000,300";
	this.theta = 0;
	this.appColors = [0,16711680,16744192,16776960,65280,255,4915330,9699539,4473924,3355443,789516,1118481,16777215,255,65280,16711680];
	this.stageRadius = stageRadius_;
};
TrilateralTest.__name__ = true;
TrilateralTest.prototype = {
	setup: function() {
		this.centre = { x : this.stageRadius, y : this.stageRadius};
		this.quarter = this.stageRadius / 2;
		this.bottomLeft = { x : this.stageRadius - this.quarter, y : this.stageRadius + this.quarter};
		this.bottomRight = { x : this.stageRadius + this.quarter, y : this.stageRadius + this.quarter};
		this.topLeft = { x : this.stageRadius - this.quarter, y : this.stageRadius - this.quarter};
		this.topRight = { x : this.stageRadius + this.quarter, y : this.stageRadius - this.quarter};
		this.draw();
	}
	,draw: function() {
		var t = [];
		var this1 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
		var this2 = this1;
		this.triangles = this2;
		this.addPaths();
		this.pieTests();
		this.pieArc();
		this.addShapes();
		this.addJoinTestForwards();
	}
	,findColorID: function(col) {
		return this.appColors.indexOf(col);
	}
	,addShapes: function() {
		var size = 80;
		var shapes = new trilateral_polys_Shapes(this.triangles,this.appColors);
		var x = (this.bottomLeft.x + this.centre.x) / 2;
		var y = (this.bottomLeft.y + this.centre.y) / 2;
		var color = this.findColorID(16744192);
		var this1 = shapes.triangles;
		var id = shapes.refCount++;
		var pi = Math.PI;
		var omega = -pi;
		var a0x = x + size * Math.sin(omega);
		var a0y = y + size * Math.cos(omega);
		omega += pi / 3;
		var a1x = x + size * Math.sin(omega);
		var a1y = y + size * Math.cos(omega);
		omega += pi / 3;
		var b0x = x + size * Math.sin(omega);
		var b0y = y + size * Math.cos(omega);
		omega += pi / 3;
		var b1x = x + size * Math.sin(omega);
		var b1y = y + size * Math.cos(omega);
		omega += pi / 3;
		var c0x = x + size * Math.sin(omega);
		var c0y = y + size * Math.cos(omega);
		omega += pi / 3;
		var c1x = x + size * Math.sin(omega);
		var c1y = y + size * Math.cos(omega);
		var tri_t0 = new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y);
		var tri_t1 = new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y);
		var tri = tri_t0;
		var t = Object.create(trilateral_tri_Triangle.prototype);
		t.id = id;
		t.ax = tri.ax;
		t.ay = tri.ay;
		t.bx = tri.bx;
		t.by = tri.by;
		t.cx = tri.cx;
		t.cy = tri.cy;
		t.mark = tri.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = color;
		t.colorA = color;
		t.colorB = color;
		t.colorC = color;
		t.windingAdjusted = tri.windingAdjusted;
		var tri0 = t;
		this1[this1.length] = tri0;
		var tri1 = tri_t1;
		var t1 = Object.create(trilateral_tri_Triangle.prototype);
		t1.id = id;
		t1.ax = tri1.ax;
		t1.ay = tri1.ay;
		t1.bx = tri1.bx;
		t1.by = tri1.by;
		t1.cx = tri1.cx;
		t1.cy = tri1.cy;
		t1.mark = tri1.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = color;
		t1.colorA = color;
		t1.colorB = color;
		t1.colorC = color;
		t1.windingAdjusted = tri1.windingAdjusted;
		var tri11 = t1;
		this1[this1.length] = tri11;
		var x1 = (this.topLeft.x + this.centre.x) / 2;
		var y1 = (this.topLeft.y + this.centre.y) / 2;
		var radius = 0.7 * size;
		var color1 = this.findColorID(16776960);
		var this2 = shapes.triangles;
		var id1 = shapes.refCount++;
		var theta = Math.PI / 4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		if(theta != 0) {
			var pi1 = Math.PI;
			var pi4 = pi1 / 4;
			var pi2 = pi1 / 2;
			var sqrt2 = Math.sqrt(2);
			var r = radius * sqrt2;
			var aTheta = -pi1 + theta - pi4;
			var dTheta = -pi1 + theta + pi1 / 2 - pi1 / 4;
			var cTheta = theta - pi4;
			var bTheta = -pi1 + theta - pi2 - pi4;
			ax = x1 + r * Math.sin(aTheta);
			ay = y1 + r * Math.cos(aTheta);
			bx = x1 + r * Math.sin(bTheta);
			by = y1 + r * Math.cos(bTheta);
			cx = x1 + r * Math.sin(cTheta);
			cy = y1 + r * Math.cos(cTheta);
			dx = x1 + r * Math.sin(dTheta);
			dy = y1 + r * Math.cos(dTheta);
		} else {
			ax = x1 - radius;
			ay = y1 - radius;
			var lx = radius * 2;
			var ly = lx;
			bx = ax + lx;
			by = ay;
			cx = bx;
			cy = ay + ly;
			dx = ax;
			dy = cy;
		}
		var tri_t01 = new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy);
		var tri_t11 = new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy);
		var tri2 = tri_t01;
		var t2 = Object.create(trilateral_tri_Triangle.prototype);
		t2.id = id1;
		t2.ax = tri2.ax;
		t2.ay = tri2.ay;
		t2.bx = tri2.bx;
		t2.by = tri2.by;
		t2.cx = tri2.cx;
		t2.cy = tri2.cy;
		t2.mark = tri2.mark;
		t2.depth = 0;
		t2.alpha = 1.;
		t2.colorID = color1;
		t2.colorA = color1;
		t2.colorB = color1;
		t2.colorC = color1;
		t2.windingAdjusted = tri2.windingAdjusted;
		var tri01 = t2;
		this2[this2.length] = tri01;
		var tri3 = tri_t11;
		var t3 = Object.create(trilateral_tri_Triangle.prototype);
		t3.id = id1;
		t3.ax = tri3.ax;
		t3.ay = tri3.ay;
		t3.bx = tri3.bx;
		t3.by = tri3.by;
		t3.cx = tri3.cx;
		t3.cy = tri3.cy;
		t3.mark = tri3.mark;
		t3.depth = 0;
		t3.alpha = 1.;
		t3.colorID = color1;
		t3.colorA = color1;
		t3.colorB = color1;
		t3.colorC = color1;
		t3.windingAdjusted = tri3.windingAdjusted;
		var tri12 = t3;
		this2[this2.length] = tri12;
		var x2 = (this.topLeft.x + this.centre.x) / 2;
		var y2 = (this.topLeft.y + this.centre.y) / 2;
		var radius1 = 0.7 * size;
		var color2 = this.findColorID(3355443);
		var this3 = shapes.triangles;
		var id2 = shapes.refCount++;
		var theta1 = Math.PI / 4;
		var t4 = [];
		var this4;
		if(t4 == null) {
			var t5 = [];
			var this5 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
			this4 = this5;
		} else {
			this4 = t4;
		}
		var this6 = this4;
		var out = this6;
		var ax1 = 0.;
		var ay1 = 0.;
		var bx1 = 0.;
		var by1 = 0.;
		var cx1 = 0.;
		var cy1 = 0.;
		var dx1 = 0.;
		var dy1 = 0.;
		var a0x1 = 0.;
		var a0y1 = 0.;
		var b0x1 = 0.;
		var b0y1 = 0.;
		var c0x1 = 0.;
		var c0y1 = 0.;
		var d0x = 0.;
		var d0y = 0.;
		if(theta1 != 0) {
			var pi3 = Math.PI;
			var pi41 = pi3 / 4;
			var pi21 = pi3 / 2;
			var sqrt21 = Math.sqrt(2);
			var r1 = radius1 * sqrt21;
			var aTheta1 = -pi3 + theta1 - pi41;
			var dTheta1 = -pi3 + theta1 + pi3 / 2 - pi3 / 4;
			var cTheta1 = theta1 - pi41;
			var bTheta1 = -pi3 + theta1 - pi21 - pi41;
			var as = Math.sin(aTheta1);
			var ac = Math.cos(aTheta1);
			var bs = Math.sin(bTheta1);
			var bc = Math.cos(bTheta1);
			var cs = Math.sin(cTheta1);
			var cc = Math.cos(cTheta1);
			var ds = Math.sin(dTheta1);
			var dc = Math.cos(dTheta1);
			var r0 = r1 - 6;
			ax1 = x2 + r1 * as;
			ay1 = y2 + r1 * ac;
			bx1 = x2 + r1 * bs;
			by1 = y2 + r1 * bc;
			cx1 = x2 + r1 * cs;
			cy1 = y2 + r1 * cc;
			dx1 = x2 + r1 * ds;
			dy1 = y2 + r1 * dc;
			a0x1 = x2 + r0 * as;
			a0y1 = y2 + r0 * ac;
			b0x1 = x2 + r0 * bs;
			b0y1 = y2 + r0 * bc;
			c0x1 = x2 + r0 * cs;
			c0y1 = y2 + r0 * cc;
			d0x = x2 + r0 * ds;
			d0y = y2 + r0 * dc;
		} else {
			ax1 = x2 - radius1;
			ay1 = y2 - radius1;
			var lx1 = radius1 * 2;
			var ly1 = lx1;
			bx1 = ax1 + lx1;
			by1 = ay1;
			cx1 = bx1;
			cy1 = ay1 + ly1;
			dx1 = ax1;
			dy1 = cy1;
			var radius0 = radius1 - 6;
			a0x1 = x2 - radius0;
			a0y1 = y2 - radius0;
			var l0x = radius0 * 2;
			var l0y = l0x;
			b0x1 = a0x1 + l0x;
			b0y1 = a0y1;
			c0x1 = b0x1;
			c0y1 = a0y1 + l0y;
			d0x = a0x1;
			d0y = c0y1;
		}
		var tri4 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,a0x1,a0y1);
		out[out.length] = tri4;
		var tri5 = new trilateral_tri_Trilateral(bx1,by1,b0x1,b0y1,a0x1,a0y1);
		out[out.length] = tri5;
		var tri6 = new trilateral_tri_Trilateral(d0x,d0y,c0x1,c0y1,dx1,dy1);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(c0x1,c0y1,cx1,cy1,dx1,dy1);
		out[out.length] = tri7;
		var tri8 = new trilateral_tri_Trilateral(ax1,ay1,a0x1,a0y1,d0x,d0y);
		out[out.length] = tri8;
		var tri9 = new trilateral_tri_Trilateral(ax1,ay1,d0x,d0y,dx1,dy1);
		out[out.length] = tri9;
		var tri10 = new trilateral_tri_Trilateral(b0x1,b0y1,bx1,by1,c0x1,c0y1);
		out[out.length] = tri10;
		var tri13 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,c0x1,c0y1);
		out[out.length] = tri13;
		var triArr = out;
		var tri14;
		var _g = 0;
		while(_g < triArr.length) {
			var t6 = triArr[_g];
			++_g;
			if(t6 != null) {
				var t7 = Object.create(trilateral_tri_Triangle.prototype);
				t7.id = id2;
				t7.ax = t6.ax;
				t7.ay = t6.ay;
				t7.bx = t6.bx;
				t7.by = t6.by;
				t7.cx = t6.cx;
				t7.cy = t6.cy;
				t7.mark = t6.mark;
				t7.depth = 0;
				t7.alpha = 1.;
				t7.colorID = color2;
				t7.colorA = color2;
				t7.colorB = color2;
				t7.colorC = color2;
				t7.windingAdjusted = t6.windingAdjusted;
				tri14 = t7;
				this3[this3.length] = tri14;
			}
		}
		var x3 = (this.bottomRight.x + this.centre.x) / 2;
		var y3 = (this.bottomRight.y + this.centre.y) / 2;
		var radius2 = 0.7 * size;
		var color3 = this.findColorID(65280);
		var this7 = shapes.triangles;
		var id3 = shapes.refCount++;
		var ax2 = 0.;
		var ay2 = 0.;
		var bx2 = 0.;
		var by2 = 0.;
		var cx2 = 0.;
		var cy2 = 0.;
		var dx2 = 0.;
		var dy2 = 0.;
		ax2 = x3 - radius2;
		ay2 = y3 - radius2;
		var lx2 = radius2 * 2;
		var ly2 = lx2;
		bx2 = ax2 + lx2;
		by2 = ay2;
		cx2 = bx2;
		cy2 = ay2 + ly2;
		dx2 = ax2;
		dy2 = cy2;
		var tri_t02 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
		var tri_t12 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
		var tri15 = tri_t02;
		var t8 = Object.create(trilateral_tri_Triangle.prototype);
		t8.id = id3;
		t8.ax = tri15.ax;
		t8.ay = tri15.ay;
		t8.bx = tri15.bx;
		t8.by = tri15.by;
		t8.cx = tri15.cx;
		t8.cy = tri15.cy;
		t8.mark = tri15.mark;
		t8.depth = 0;
		t8.alpha = 1.;
		t8.colorID = color3;
		t8.colorA = color3;
		t8.colorB = color3;
		t8.colorC = color3;
		t8.windingAdjusted = tri15.windingAdjusted;
		var tri02 = t8;
		this7[this7.length] = tri02;
		var tri16 = tri_t12;
		var t9 = Object.create(trilateral_tri_Triangle.prototype);
		t9.id = id3;
		t9.ax = tri16.ax;
		t9.ay = tri16.ay;
		t9.bx = tri16.bx;
		t9.by = tri16.by;
		t9.cx = tri16.cx;
		t9.cy = tri16.cy;
		t9.mark = tri16.mark;
		t9.depth = 0;
		t9.alpha = 1.;
		t9.colorID = color3;
		t9.colorA = color3;
		t9.colorB = color3;
		t9.colorC = color3;
		t9.windingAdjusted = tri16.windingAdjusted;
		var tri17 = t9;
		this7[this7.length] = tri17;
		var x4 = (this.bottomRight.x + this.centre.x) / 2;
		var y4 = (this.bottomRight.y + this.centre.y) / 2;
		var radius3 = 0.7 * size;
		var color4 = this.findColorID(3355443);
		var this8 = shapes.triangles;
		var id4 = shapes.refCount++;
		var t10 = [];
		var this9;
		if(t10 == null) {
			var t11 = [];
			var this10 = t11 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t11;
			this9 = this10;
		} else {
			this9 = t10;
		}
		var this11 = this9;
		var out1 = this11;
		var ax3 = 0.;
		var ay3 = 0.;
		var bx3 = 0.;
		var by3 = 0.;
		var cx3 = 0.;
		var cy3 = 0.;
		var dx3 = 0.;
		var dy3 = 0.;
		var a0x2 = 0.;
		var a0y2 = 0.;
		var b0x2 = 0.;
		var b0y2 = 0.;
		var c0x2 = 0.;
		var c0y2 = 0.;
		var d0x1 = 0.;
		var d0y1 = 0.;
		ax3 = x4 - radius3;
		ay3 = y4 - radius3;
		var lx3 = radius3 * 2;
		var ly3 = lx3;
		bx3 = ax3 + lx3;
		by3 = ay3;
		cx3 = bx3;
		cy3 = ay3 + ly3;
		dx3 = ax3;
		dy3 = cy3;
		var radius01 = radius3 - 6;
		a0x2 = x4 - radius01;
		a0y2 = y4 - radius01;
		var l0x1 = radius01 * 2;
		var l0y1 = l0x1;
		b0x2 = a0x2 + l0x1;
		b0y2 = a0y2;
		c0x2 = b0x2;
		c0y2 = a0y2 + l0y1;
		d0x1 = a0x2;
		d0y1 = c0y2;
		var tri18 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,a0x2,a0y2);
		out1[out1.length] = tri18;
		var tri19 = new trilateral_tri_Trilateral(bx3,by3,b0x2,b0y2,a0x2,a0y2);
		out1[out1.length] = tri19;
		var tri20 = new trilateral_tri_Trilateral(d0x1,d0y1,c0x2,c0y2,dx3,dy3);
		out1[out1.length] = tri20;
		var tri21 = new trilateral_tri_Trilateral(c0x2,c0y2,cx3,cy3,dx3,dy3);
		out1[out1.length] = tri21;
		var tri22 = new trilateral_tri_Trilateral(ax3,ay3,a0x2,a0y2,d0x1,d0y1);
		out1[out1.length] = tri22;
		var tri23 = new trilateral_tri_Trilateral(ax3,ay3,d0x1,d0y1,dx3,dy3);
		out1[out1.length] = tri23;
		var tri24 = new trilateral_tri_Trilateral(b0x2,b0y2,bx3,by3,c0x2,c0y2);
		out1[out1.length] = tri24;
		var tri25 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,c0x2,c0y2);
		out1[out1.length] = tri25;
		var triArr1 = out1;
		var tri26;
		var _g1 = 0;
		while(_g1 < triArr1.length) {
			var t12 = triArr1[_g1];
			++_g1;
			if(t12 != null) {
				var t13 = Object.create(trilateral_tri_Triangle.prototype);
				t13.id = id4;
				t13.ax = t12.ax;
				t13.ay = t12.ay;
				t13.bx = t12.bx;
				t13.by = t12.by;
				t13.cx = t12.cx;
				t13.cy = t12.cy;
				t13.mark = t12.mark;
				t13.depth = 0;
				t13.alpha = 1.;
				t13.colorID = color4;
				t13.colorA = color4;
				t13.colorB = color4;
				t13.colorC = color4;
				t13.windingAdjusted = t12.windingAdjusted;
				tri26 = t13;
				this8[this8.length] = tri26;
			}
		}
		var x5 = this.centre.x - 100;
		var y5 = this.centre.y - 50;
		var color5 = this.findColorID(255);
		var this12 = shapes.triangles;
		var id5 = shapes.refCount++;
		var ax4 = x5;
		var ay4 = y5;
		var bx4 = x5 + size * 2;
		var by4 = ay4;
		var cx4 = bx4;
		var cy4 = ay4 + size;
		var dx4 = x5;
		var dy4 = cy4;
		var tri_t03 = new trilateral_tri_Trilateral(ax4,ay4,bx4,by4,dx4,dy4);
		var tri_t13 = new trilateral_tri_Trilateral(bx4,by4,cx4,cy4,dx4,dy4);
		var tri27 = tri_t03;
		var t14 = Object.create(trilateral_tri_Triangle.prototype);
		t14.id = id5;
		t14.ax = tri27.ax;
		t14.ay = tri27.ay;
		t14.bx = tri27.bx;
		t14.by = tri27.by;
		t14.cx = tri27.cx;
		t14.cy = tri27.cy;
		t14.mark = tri27.mark;
		t14.depth = 0;
		t14.alpha = 1.;
		t14.colorID = color5;
		t14.colorA = color5;
		t14.colorB = color5;
		t14.colorC = color5;
		t14.windingAdjusted = tri27.windingAdjusted;
		var tri03 = t14;
		this12[this12.length] = tri03;
		var tri28 = tri_t13;
		var t15 = Object.create(trilateral_tri_Triangle.prototype);
		t15.id = id5;
		t15.ax = tri28.ax;
		t15.ay = tri28.ay;
		t15.bx = tri28.bx;
		t15.by = tri28.by;
		t15.cx = tri28.cx;
		t15.cy = tri28.cy;
		t15.mark = tri28.mark;
		t15.depth = 0;
		t15.alpha = 1.;
		t15.colorID = color5;
		t15.colorA = color5;
		t15.colorB = color5;
		t15.colorC = color5;
		t15.windingAdjusted = tri28.windingAdjusted;
		var tri110 = t15;
		this12[this12.length] = tri110;
		var x6 = (this.topRight.x + this.centre.x) / 2;
		var y6 = (this.topRight.y + this.centre.y) / 2;
		var color6 = this.findColorID(4915330);
		var this13 = shapes.triangles;
		var id6 = shapes.refCount++;
		var t16 = [];
		var this14;
		if(t16 == null) {
			var t17 = [];
			var this15 = t17 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t17;
			this14 = this15;
		} else {
			this14 = t16;
		}
		var this16 = this14;
		var out2 = this16;
		var pi5 = Math.PI;
		var theta2 = pi5 / 2;
		var step = pi5 * 2 / 36;
		var bx5;
		var by5;
		var cx5;
		var cy5;
		var _g2 = 0;
		var _g11 = 36;
		while(_g2 < _g11) {
			var i = _g2++;
			bx5 = x6 + size * Math.sin(theta2);
			by5 = y6 + size * Math.cos(theta2);
			theta2 += step;
			cx5 = x6 + size * Math.sin(theta2);
			cy5 = y6 + size * Math.cos(theta2);
			var tri29 = new trilateral_tri_Trilateral(x6,y6,bx5,by5,cx5,cy5);
			out2[out2.length] = tri29;
		}
		var triArr2 = out2;
		var tri30;
		var _g3 = 0;
		while(_g3 < triArr2.length) {
			var t18 = triArr2[_g3];
			++_g3;
			if(t18 != null) {
				var t19 = Object.create(trilateral_tri_Triangle.prototype);
				t19.id = id6;
				t19.ax = t18.ax;
				t19.ay = t18.ay;
				t19.bx = t18.bx;
				t19.by = t18.by;
				t19.cx = t18.cx;
				t19.cy = t18.cy;
				t19.mark = t18.mark;
				t19.depth = 0;
				t19.alpha = 1.;
				t19.colorID = color6;
				t19.colorA = color6;
				t19.colorB = color6;
				t19.colorC = color6;
				t19.windingAdjusted = t18.windingAdjusted;
				tri30 = t19;
				this13[this13.length] = tri30;
			}
		}
		var x7 = this.centre.x;
		var y7 = this.centre.y;
		var color7 = this.findColorID(16711680);
		var theta3 = 0.;
		var line;
		var wid = 0.08;
		var _g4 = 0;
		var _g12 = 60;
		while(_g4 < _g12) {
			var i1 = _g4++;
			var p0_x = x7;
			var p0_y = y7;
			var p1_x = x7 + 15 * Math.sin(theta3);
			var p1_y = y7 + 15 * Math.cos(theta3);
			theta3 += Math.PI * 2 / 60;
			var width = wid += 0.05;
			var dx5 = p0_x - p1_x;
			var dy5 = p0_y - p1_y;
			var P_x = p0_x - width / 2;
			var P_y = p0_y;
			var omega1 = Math.atan2(dy5,dx5);
			var dim_x = width;
			var dim_y = dx5 * dx5 + dy5 * dy5;
			var pivotX = p0_x + width / 2;
			var pivotY = p0_y;
			var px = P_x;
			var py = P_y;
			var dx6 = dim_x;
			var dy6 = dim_y;
			var A_ = { x : px, y : py};
			var B_ = { x : px + dx6, y : py};
			var C_ = { x : px + dx6, y : py + dy6};
			var D_ = { x : px, y : py + dy6};
			if(omega1 != 0.) {
				var sin = Math.sin(omega1);
				var cos = Math.cos(omega1);
				var px1 = A_.x - pivotX;
				var py1 = A_.y - pivotY;
				var px2 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				A_ = { x : px2 + pivotX, y : py1 + pivotY};
				var px3 = B_.x - pivotX;
				var py2 = B_.y - pivotY;
				var px21 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				B_ = { x : px21 + pivotX, y : py2 + pivotY};
				var px4 = C_.x - pivotX;
				var py3 = C_.y - pivotY;
				var px22 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				C_ = { x : px22 + pivotX, y : py3 + pivotY};
				var px5 = D_.x - pivotX;
				var py4 = D_.y - pivotY;
				var px23 = px5 * cos - py4 * sin;
				py4 = py4 * cos + px5 * sin;
				D_ = { x : px23 + pivotX, y : py4 + pivotY};
			}
			var q_A = A_;
			var q_B = B_;
			var q_C = C_;
			var q_D = D_;
			line = { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
			var this17 = shapes.triangles;
			var id7 = shapes.refCount;
			var tri31 = line.t0;
			var t20 = Object.create(trilateral_tri_Triangle.prototype);
			t20.id = id7;
			t20.ax = tri31.ax;
			t20.ay = tri31.ay;
			t20.bx = tri31.bx;
			t20.by = tri31.by;
			t20.cx = tri31.cx;
			t20.cy = tri31.cy;
			t20.mark = tri31.mark;
			t20.depth = 0;
			t20.alpha = 1.;
			t20.colorID = color7;
			t20.colorA = color7;
			t20.colorB = color7;
			t20.colorC = color7;
			t20.windingAdjusted = tri31.windingAdjusted;
			var tri04 = t20;
			this17[this17.length] = tri04;
			var tri32 = line.t1;
			var t21 = Object.create(trilateral_tri_Triangle.prototype);
			t21.id = id7;
			t21.ax = tri32.ax;
			t21.ay = tri32.ay;
			t21.bx = tri32.bx;
			t21.by = tri32.by;
			t21.cx = tri32.cx;
			t21.cy = tri32.cy;
			t21.mark = tri32.mark;
			t21.depth = 0;
			t21.alpha = 1.;
			t21.colorID = color7;
			t21.colorA = color7;
			t21.colorB = color7;
			t21.colorC = color7;
			t21.windingAdjusted = tri32.windingAdjusted;
			var tri111 = t21;
			this17[this17.length] = tri111;
		}
		shapes.refCount++;
		var x8 = this.topLeft.x - size;
		var y8 = (this.topLeft.y + this.bottomLeft.y) / 2 - size / 2;
		var width1 = size * 2;
		var color8 = this.findColorID(9699539);
		var this18 = shapes.triangles;
		var id8 = shapes.refCount++;
		var t22 = [];
		var this19;
		if(t22 == null) {
			var t23 = [];
			var this20 = t23 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t23;
			this19 = this20;
		} else {
			this19 = t22;
		}
		var this21 = this19;
		var out3 = this21;
		var pi6 = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax5 = x8 + 30;
		var ay5 = y8 + 30;
		var bx6 = x8 + width1 - 30;
		var by6 = y8 + 30;
		var cx6 = bx6;
		var cy6 = y8 + size - 30;
		var dx7 = ax5;
		var dy7 = cy6;
		var ax6 = ax5;
		var ay6 = y8;
		var bx7 = ax5 + (width1 - 60);
		var by7 = ay6;
		var cx7 = bx7;
		var cy7 = ay6 + size;
		var dx8 = ax5;
		var dy8 = cy7;
		var tp_t0 = new trilateral_tri_Trilateral(ax6,ay6,bx7,by7,dx8,dy8);
		var tp_t1 = new trilateral_tri_Trilateral(bx7,by7,cx7,cy7,dx8,dy8);
		out3[out3.length] = tp_t0;
		out3[out3.length] = tp_t1;
		var dimY = size - 60;
		var ax7 = x8;
		var ay7 = ay5;
		var bx8 = x8 + 30;
		var by8 = ay7;
		var cx8 = bx8;
		var cy8 = ay7 + dimY;
		var dx9 = x8;
		var dy9 = cy8;
		var tp_t01 = new trilateral_tri_Trilateral(ax7,ay7,bx8,by8,dx9,dy9);
		var tp_t11 = new trilateral_tri_Trilateral(bx8,by8,cx8,cy8,dx9,dy9);
		out3[out3.length] = tp_t01;
		out3[out3.length] = tp_t11;
		var ax8 = bx6;
		var ay8 = by6;
		var bx9 = bx6 + 30;
		var by9 = ay8;
		var cx9 = bx9;
		var cy9 = ay8 + dimY;
		var dx10 = bx6;
		var dy10 = cy9;
		var tp_t02 = new trilateral_tri_Trilateral(ax8,ay8,bx9,by9,dx10,dy10);
		var tp_t12 = new trilateral_tri_Trilateral(bx9,by9,cx9,cy9,dx10,dy10);
		out3[out3.length] = tp_t02;
		out3[out3.length] = tp_t12;
		var beta = -pi6;
		var gamma = -pi_2;
		var t24 = [];
		var this22;
		if(t24 == null) {
			var t25 = [];
			var this23;
			if(t25 == null) {
				var t26 = [];
				var this24 = t26 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t26;
				this23 = this24;
			} else {
				this23 = t25;
			}
			this22 = this23;
		} else {
			this22 = t24;
		}
		var this25 = this22;
		var out4 = this25;
		var pi7 = Math.PI;
		var step1 = pi7 * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this26 = f;
			var za = this26;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this27 = f1;
			var zb = this27;
			var fa = za;
			var fb = zb;
			var theta4 = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta4 : -theta4;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this28 = f2;
			var za1 = this28;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this29 = f3;
			var zb1 = this29;
			var fa1 = za1;
			var fb1 = zb1;
			var theta5 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta5 : -theta5;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this30 = f4;
			var za2 = this30;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this31 = f5;
			var zb2 = this31;
			var fa2 = za2;
			var fb2 = zb2;
			var theta6 = Math.abs(fa2 - fb2);
			var smallest = theta6 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta6 : -theta6;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this32 = f6;
			var za3 = this32;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this33 = f7;
			var zb3 = this33;
			var fa3 = za3;
			var fb3 = zb3;
			var theta7 = Math.abs(fa3 - fb3);
			var largest = theta7 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta7 : -theta7;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step1);
		var step2 = dif / totalSteps;
		var angle = beta;
		var cx10;
		var cy10;
		var bx10 = 0;
		var by10 = 0;
		var _g5 = 0;
		var _g13 = totalSteps + 1;
		while(_g5 < _g13) {
			var i2 = _g5++;
			cx10 = ax5 + 30 * Math.sin(angle);
			cy10 = ay5 + 30 * Math.cos(angle);
			if(i2 != 0) {
				var t27 = new trilateral_tri_Trilateral(ax5,ay5,bx10,by10,cx10,cy10);
				out4[out4.length] = t27;
			}
			angle += step2;
			bx10 = cx10;
			by10 = cy10;
		}
		var triArr3 = out4;
		var _g6 = 0;
		while(_g6 < triArr3.length) {
			var t28 = triArr3[_g6];
			++_g6;
			out3[out3.length] = t28;
		}
		var t29 = [];
		var this34;
		if(t29 == null) {
			var t30 = [];
			var this35;
			if(t30 == null) {
				var t31 = [];
				var this36 = t31 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t31;
				this35 = this36;
			} else {
				this35 = t30;
			}
			this34 = this35;
		} else {
			this34 = t29;
		}
		var this37 = this34;
		var out5 = this37;
		var pi8 = Math.PI;
		var step3 = pi8 * 2 / 36;
		var dif5;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f8;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f8 = pi_2;
			} else {
				var a8 = pi_2 % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
			}
			var this38 = f8;
			var za4 = this38;
			var f9;
			if(pi6 >= 0 && pi6 > Math.PI) {
				f9 = pi6;
			} else {
				var a9 = pi6 % (2 * Math.PI);
				f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
			}
			var this39 = f9;
			var zb4 = this39;
			var fa4 = za4;
			var fb4 = zb4;
			var theta8 = Math.abs(fa4 - fb4);
			var clockwise4 = pi_2 < pi6;
			var dif6 = clockwise4 ? theta8 : -theta8;
			dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
			break;
		case 1:
			var f10;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f10 = pi_2;
			} else {
				var a10 = pi_2 % (2 * Math.PI);
				f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
			}
			var this40 = f10;
			var za5 = this40;
			var f11;
			if(pi6 >= 0 && pi6 > Math.PI) {
				f11 = pi6;
			} else {
				var a11 = pi6 % (2 * Math.PI);
				f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
			}
			var this41 = f11;
			var zb5 = this41;
			var fa5 = za5;
			var fb5 = zb5;
			var theta9 = Math.abs(fa5 - fb5);
			var clockwise5 = pi_2 < pi6;
			var dif7 = clockwise5 ? theta9 : -theta9;
			dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
			break;
		case 2:
			var f12;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f12 = pi_2;
			} else {
				var a12 = pi_2 % (2 * Math.PI);
				f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
			}
			var this42 = f12;
			var za6 = this42;
			var f13;
			if(pi6 >= 0 && pi6 > Math.PI) {
				f13 = pi6;
			} else {
				var a13 = pi6 % (2 * Math.PI);
				f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
			}
			var this43 = f13;
			var zb6 = this43;
			var fa6 = za6;
			var fb6 = zb6;
			var theta10 = Math.abs(fa6 - fb6);
			var smallest1 = theta10 <= Math.PI;
			var clockwise6 = pi_2 < pi6;
			var dif8 = clockwise6 ? theta10 : -theta10;
			dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
			break;
		case 3:
			var f14;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f14 = pi_2;
			} else {
				var a14 = pi_2 % (2 * Math.PI);
				f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
			}
			var this44 = f14;
			var za7 = this44;
			var f15;
			if(pi6 >= 0 && pi6 > Math.PI) {
				f15 = pi6;
			} else {
				var a15 = pi6 % (2 * Math.PI);
				f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
			}
			var this45 = f15;
			var zb7 = this45;
			var fa7 = za7;
			var fb7 = zb7;
			var theta11 = Math.abs(fa7 - fb7);
			var largest1 = theta11 > Math.PI;
			var clockwise7 = pi_2 < pi6;
			var dif9 = clockwise7 ? theta11 : -theta11;
			dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
			break;
		}
		var positive1 = dif5 >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif5) / step3);
		var step4 = dif5 / totalSteps1;
		var angle1 = pi_2;
		var cx11;
		var cy11;
		var bx11 = 0;
		var by11 = 0;
		var _g7 = 0;
		var _g14 = totalSteps1 + 1;
		while(_g7 < _g14) {
			var i3 = _g7++;
			cx11 = bx6 + 30 * Math.sin(angle1);
			cy11 = by6 + 30 * Math.cos(angle1);
			if(i3 != 0) {
				var t32 = new trilateral_tri_Trilateral(bx6,by6,bx11,by11,cx11,cy11);
				out5[out5.length] = t32;
			}
			angle1 += step4;
			bx11 = cx11;
			by11 = cy11;
		}
		var triArr4 = out5;
		var _g8 = 0;
		while(_g8 < triArr4.length) {
			var t33 = triArr4[_g8];
			++_g8;
			out3[out3.length] = t33;
		}
		var t34 = [];
		var this46;
		if(t34 == null) {
			var t35 = [];
			var this47;
			if(t35 == null) {
				var t36 = [];
				var this48 = t36 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t36;
				this47 = this48;
			} else {
				this47 = t35;
			}
			this46 = this47;
		} else {
			this46 = t34;
		}
		var this49 = this46;
		var out6 = this49;
		var pi9 = Math.PI;
		var step5 = pi9 * 2 / 36;
		var dif10;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f16;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f16 = pi_2;
			} else {
				var a16 = pi_2 % (2 * Math.PI);
				f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
			}
			var this50 = f16;
			var za8 = this50;
			var f17;
			if(0 > Math.PI) {
				f17 = 0;
			} else {
				var a17 = 0 % (2 * Math.PI);
				f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
			}
			var this51 = f17;
			var zb8 = this51;
			var fa8 = za8;
			var fb8 = zb8;
			var theta12 = Math.abs(fa8 - fb8);
			var clockwise8 = pi_2 < 0;
			var dif11 = clockwise8 ? theta12 : -theta12;
			dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
			break;
		case 1:
			var f18;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f18 = pi_2;
			} else {
				var a18 = pi_2 % (2 * Math.PI);
				f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
			}
			var this52 = f18;
			var za9 = this52;
			var f19;
			if(0 > Math.PI) {
				f19 = 0;
			} else {
				var a19 = 0 % (2 * Math.PI);
				f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
			}
			var this53 = f19;
			var zb9 = this53;
			var fa9 = za9;
			var fb9 = zb9;
			var theta13 = Math.abs(fa9 - fb9);
			var clockwise9 = pi_2 < 0;
			var dif12 = clockwise9 ? theta13 : -theta13;
			dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
			break;
		case 2:
			var f20;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f20 = pi_2;
			} else {
				var a20 = pi_2 % (2 * Math.PI);
				f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
			}
			var this54 = f20;
			var za10 = this54;
			var f21;
			if(0 > Math.PI) {
				f21 = 0;
			} else {
				var a21 = 0 % (2 * Math.PI);
				f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
			}
			var this55 = f21;
			var zb10 = this55;
			var fa10 = za10;
			var fb10 = zb10;
			var theta14 = Math.abs(fa10 - fb10);
			var smallest2 = theta14 <= Math.PI;
			var clockwise10 = pi_2 < 0;
			var dif13 = clockwise10 ? theta14 : -theta14;
			dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
			break;
		case 3:
			var f22;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f22 = pi_2;
			} else {
				var a22 = pi_2 % (2 * Math.PI);
				f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
			}
			var this56 = f22;
			var za11 = this56;
			var f23;
			if(0 > Math.PI) {
				f23 = 0;
			} else {
				var a23 = 0 % (2 * Math.PI);
				f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
			}
			var this57 = f23;
			var zb11 = this57;
			var fa11 = za11;
			var fb11 = zb11;
			var theta15 = Math.abs(fa11 - fb11);
			var largest2 = theta15 > Math.PI;
			var clockwise11 = pi_2 < 0;
			var dif14 = clockwise11 ? theta15 : -theta15;
			dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
			break;
		}
		var positive2 = dif10 >= 0;
		var totalSteps2 = Math.ceil(Math.abs(dif10) / step5);
		var step6 = dif10 / totalSteps2;
		var angle2 = pi_2;
		var cx12;
		var cy12;
		var bx12 = 0;
		var by12 = 0;
		var _g9 = 0;
		var _g15 = totalSteps2 + 1;
		while(_g9 < _g15) {
			var i4 = _g9++;
			cx12 = cx6 + 30 * Math.sin(angle2);
			cy12 = cy6 + 30 * Math.cos(angle2);
			if(i4 != 0) {
				var t37 = new trilateral_tri_Trilateral(cx6,cy6,bx12,by12,cx12,cy12);
				out6[out6.length] = t37;
			}
			angle2 += step6;
			bx12 = cx12;
			by12 = cy12;
		}
		var triArr5 = out6;
		var _g10 = 0;
		while(_g10 < triArr5.length) {
			var t38 = triArr5[_g10];
			++_g10;
			out3[out3.length] = t38;
		}
		var gamma1 = -pi_2;
		var t39 = [];
		var this58;
		if(t39 == null) {
			var t40 = [];
			var this59;
			if(t40 == null) {
				var t41 = [];
				var this60 = t41 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t41;
				this59 = this60;
			} else {
				this59 = t40;
			}
			this58 = this59;
		} else {
			this58 = t39;
		}
		var this61 = this58;
		var out7 = this61;
		var pi10 = Math.PI;
		var step7 = pi10 * 2 / 36;
		var dif15;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f24;
			if(0 > Math.PI) {
				f24 = 0;
			} else {
				var a24 = 0 % (2 * Math.PI);
				f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
			}
			var this62 = f24;
			var za12 = this62;
			var f25;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f25 = gamma1;
			} else {
				var a25 = gamma1 % (2 * Math.PI);
				f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
			}
			var this63 = f25;
			var zb12 = this63;
			var fa12 = za12;
			var fb12 = zb12;
			var theta16 = Math.abs(fa12 - fb12);
			var clockwise12 = 0 < gamma1;
			var dif16 = clockwise12 ? theta16 : -theta16;
			dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
			break;
		case 1:
			var f26;
			if(0 > Math.PI) {
				f26 = 0;
			} else {
				var a26 = 0 % (2 * Math.PI);
				f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
			}
			var this64 = f26;
			var za13 = this64;
			var f27;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f27 = gamma1;
			} else {
				var a27 = gamma1 % (2 * Math.PI);
				f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
			}
			var this65 = f27;
			var zb13 = this65;
			var fa13 = za13;
			var fb13 = zb13;
			var theta17 = Math.abs(fa13 - fb13);
			var clockwise13 = 0 < gamma1;
			var dif17 = clockwise13 ? theta17 : -theta17;
			dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
			break;
		case 2:
			var f28;
			if(0 > Math.PI) {
				f28 = 0;
			} else {
				var a28 = 0 % (2 * Math.PI);
				f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
			}
			var this66 = f28;
			var za14 = this66;
			var f29;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f29 = gamma1;
			} else {
				var a29 = gamma1 % (2 * Math.PI);
				f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
			}
			var this67 = f29;
			var zb14 = this67;
			var fa14 = za14;
			var fb14 = zb14;
			var theta18 = Math.abs(fa14 - fb14);
			var smallest3 = theta18 <= Math.PI;
			var clockwise14 = 0 < gamma1;
			var dif18 = clockwise14 ? theta18 : -theta18;
			dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta18) : 2 * Math.PI - theta18;
			break;
		case 3:
			var f30;
			if(0 > Math.PI) {
				f30 = 0;
			} else {
				var a30 = 0 % (2 * Math.PI);
				f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
			}
			var this68 = f30;
			var za15 = this68;
			var f31;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f31 = gamma1;
			} else {
				var a31 = gamma1 % (2 * Math.PI);
				f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
			}
			var this69 = f31;
			var zb15 = this69;
			var fa15 = za15;
			var fb15 = zb15;
			var theta19 = Math.abs(fa15 - fb15);
			var largest3 = theta19 > Math.PI;
			var clockwise15 = 0 < gamma1;
			var dif19 = clockwise15 ? theta19 : -theta19;
			dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta19) : 2 * Math.PI - theta19;
			break;
		}
		var positive3 = dif15 >= 0;
		var totalSteps3 = Math.ceil(Math.abs(dif15) / step7);
		var step8 = dif15 / totalSteps3;
		var angle3 = 0;
		var cx13;
		var cy13;
		var bx13 = 0;
		var by13 = 0;
		var _g16 = 0;
		var _g17 = totalSteps3 + 1;
		while(_g16 < _g17) {
			var i5 = _g16++;
			cx13 = dx7 + 30 * Math.sin(angle3);
			cy13 = dy7 + 30 * Math.cos(angle3);
			if(i5 != 0) {
				var t42 = new trilateral_tri_Trilateral(dx7,dy7,bx13,by13,cx13,cy13);
				out7[out7.length] = t42;
			}
			angle3 += step8;
			bx13 = cx13;
			by13 = cy13;
		}
		var triArr6 = out7;
		var _g18 = 0;
		while(_g18 < triArr6.length) {
			var t43 = triArr6[_g18];
			++_g18;
			out3[out3.length] = t43;
		}
		var triArr7 = out3;
		var tri33;
		var _g19 = 0;
		while(_g19 < triArr7.length) {
			var t44 = triArr7[_g19];
			++_g19;
			if(t44 != null) {
				var t45 = Object.create(trilateral_tri_Triangle.prototype);
				t45.id = id8;
				t45.ax = t44.ax;
				t45.ay = t44.ay;
				t45.bx = t44.bx;
				t45.by = t44.by;
				t45.cx = t44.cx;
				t45.cy = t44.cy;
				t45.mark = t44.mark;
				t45.depth = 0;
				t45.alpha = 1.;
				t45.colorID = color8;
				t45.colorA = color8;
				t45.colorB = color8;
				t45.colorC = color8;
				t45.windingAdjusted = t44.windingAdjusted;
				tri33 = t45;
				this18[this18.length] = tri33;
			}
		}
		var x9 = this.topLeft.x - size;
		var y9 = (this.topLeft.y + this.bottomLeft.y) / 2 - size / 2;
		var width2 = size * 2;
		var color9 = this.findColorID(3355443);
		var this70 = shapes.triangles;
		var id9 = shapes.refCount++;
		var t46 = [];
		var this71;
		if(t46 == null) {
			var t47 = [];
			var this72 = t47 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t47;
			this71 = this72;
		} else {
			this71 = t46;
		}
		var this73 = this71;
		var out8 = this73;
		var pi11 = Math.PI;
		var pi_21 = Math.PI / 2;
		var ax9 = x9 + 30;
		var ay9 = y9 + 30;
		var bx14 = x9 + width2 - 30;
		var by14 = y9 + 30;
		var cx14 = bx14;
		var cy14 = y9 + size - 30;
		var dx11 = ax9;
		var dy11 = cy14;
		var ax10 = ax9;
		var ay10 = y9;
		var bx15 = ax9 + (width2 - 60);
		var by15 = ay10;
		var cx15 = bx15;
		var cy15 = ay10 + 6;
		var dx12 = ax9;
		var dy12 = cy15;
		var tp_t03 = new trilateral_tri_Trilateral(ax10,ay10,bx15,by15,dx12,dy12);
		var tp_t13 = new trilateral_tri_Trilateral(bx15,by15,cx15,cy15,dx12,dy12);
		out8[out8.length] = tp_t03;
		out8[out8.length] = tp_t13;
		var ax11 = ax9;
		var ay11 = y9 + size - 6;
		var bx16 = ax9 + (width2 - 60);
		var by16 = ay11;
		var cx16 = bx16;
		var cy16 = ay11 + 6;
		var dx13 = ax9;
		var dy13 = cy16;
		var tp_t04 = new trilateral_tri_Trilateral(ax11,ay11,bx16,by16,dx13,dy13);
		var tp_t14 = new trilateral_tri_Trilateral(bx16,by16,cx16,cy16,dx13,dy13);
		out8[out8.length] = tp_t04;
		out8[out8.length] = tp_t14;
		var dimY1 = size - 60;
		var ax12 = x9;
		var ay12 = ay9;
		var bx17 = x9 + 6;
		var by17 = ay12;
		var cx17 = bx17;
		var cy17 = ay12 + dimY1;
		var dx14 = x9;
		var dy14 = cy17;
		var tp_t05 = new trilateral_tri_Trilateral(ax12,ay12,bx17,by17,dx14,dy14);
		var tp_t15 = new trilateral_tri_Trilateral(bx17,by17,cx17,cy17,dx14,dy14);
		out8[out8.length] = tp_t05;
		out8[out8.length] = tp_t15;
		var x10 = x9 + width2 - 6;
		var ax13 = x10;
		var ay13 = by14;
		var bx18 = x10 + 6;
		var by18 = ay13;
		var cx18 = bx18;
		var cy18 = ay13 + dimY1;
		var dx15 = x10;
		var dy15 = cy18;
		var tp_t06 = new trilateral_tri_Trilateral(ax13,ay13,bx18,by18,dx15,dy15);
		var tp_t16 = new trilateral_tri_Trilateral(bx18,by18,cx18,cy18,dx15,dy15);
		out8[out8.length] = tp_t06;
		out8[out8.length] = tp_t16;
		var beta1 = -pi11;
		var gamma2 = -pi_21;
		var t48 = [];
		var this74;
		if(t48 == null) {
			var t49 = [];
			var this75;
			if(t49 == null) {
				var t50 = [];
				var this76 = t50 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t50;
				this75 = this76;
			} else {
				this75 = t49;
			}
			this74 = this75;
		} else {
			this74 = t48;
		}
		var this77 = this74;
		var out9 = this77;
		var pi12 = Math.PI;
		var step9 = pi12 * 2 / 36;
		var dif20;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f32;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f32 = beta1;
			} else {
				var a32 = beta1 % (2 * Math.PI);
				f32 = a32 >= 0 ? a32 : a32 + 2 * Math.PI;
			}
			var this78 = f32;
			var za16 = this78;
			var f33;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f33 = gamma2;
			} else {
				var a33 = gamma2 % (2 * Math.PI);
				f33 = a33 >= 0 ? a33 : a33 + 2 * Math.PI;
			}
			var this79 = f33;
			var zb16 = this79;
			var fa16 = za16;
			var fb16 = zb16;
			var theta20 = Math.abs(fa16 - fb16);
			var clockwise16 = beta1 < gamma2;
			var dif21 = clockwise16 ? theta20 : -theta20;
			dif20 = dif21 > 0 ? dif21 : 2 * Math.PI + dif21;
			break;
		case 1:
			var f34;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f34 = beta1;
			} else {
				var a34 = beta1 % (2 * Math.PI);
				f34 = a34 >= 0 ? a34 : a34 + 2 * Math.PI;
			}
			var this80 = f34;
			var za17 = this80;
			var f35;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f35 = gamma2;
			} else {
				var a35 = gamma2 % (2 * Math.PI);
				f35 = a35 >= 0 ? a35 : a35 + 2 * Math.PI;
			}
			var this81 = f35;
			var zb17 = this81;
			var fa17 = za17;
			var fb17 = zb17;
			var theta21 = Math.abs(fa17 - fb17);
			var clockwise17 = beta1 < gamma2;
			var dif22 = clockwise17 ? theta21 : -theta21;
			dif20 = dif22 < 0 ? dif22 : -2 * Math.PI + dif22;
			break;
		case 2:
			var f36;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f36 = beta1;
			} else {
				var a36 = beta1 % (2 * Math.PI);
				f36 = a36 >= 0 ? a36 : a36 + 2 * Math.PI;
			}
			var this82 = f36;
			var za18 = this82;
			var f37;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f37 = gamma2;
			} else {
				var a37 = gamma2 % (2 * Math.PI);
				f37 = a37 >= 0 ? a37 : a37 + 2 * Math.PI;
			}
			var this83 = f37;
			var zb18 = this83;
			var fa18 = za18;
			var fb18 = zb18;
			var theta22 = Math.abs(fa18 - fb18);
			var smallest4 = theta22 <= Math.PI;
			var clockwise18 = beta1 < gamma2;
			var dif23 = clockwise18 ? theta22 : -theta22;
			dif20 = smallest4 ? dif23 : clockwise18 ? -(2 * Math.PI - theta22) : 2 * Math.PI - theta22;
			break;
		case 3:
			var f38;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f38 = beta1;
			} else {
				var a38 = beta1 % (2 * Math.PI);
				f38 = a38 >= 0 ? a38 : a38 + 2 * Math.PI;
			}
			var this84 = f38;
			var za19 = this84;
			var f39;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f39 = gamma2;
			} else {
				var a39 = gamma2 % (2 * Math.PI);
				f39 = a39 >= 0 ? a39 : a39 + 2 * Math.PI;
			}
			var this85 = f39;
			var zb19 = this85;
			var fa19 = za19;
			var fb19 = zb19;
			var theta23 = Math.abs(fa19 - fb19);
			var largest4 = theta23 > Math.PI;
			var clockwise19 = beta1 < gamma2;
			var dif24 = clockwise19 ? theta23 : -theta23;
			dif20 = largest4 ? dif24 : clockwise19 ? -(2 * Math.PI - theta23) : 2 * Math.PI - theta23;
			break;
		}
		var positive4 = dif20 >= 0;
		var totalSteps4 = Math.ceil(Math.abs(dif20) / step9);
		var step10 = dif20 / totalSteps4;
		var angle4 = beta1;
		var cx19;
		var cy19;
		var bx19 = 0;
		var by19 = 0;
		var dx16 = 0;
		var dy16 = 0;
		var ex = 0;
		var ey = 0;
		var r2 = 24;
		var _g20 = 0;
		var _g110 = totalSteps4 + 1;
		while(_g20 < _g110) {
			var i6 = _g20++;
			cx19 = ax9 + 30 * Math.sin(angle4);
			cy19 = ay9 + 30 * Math.cos(angle4);
			ex = ax9 + r2 * Math.sin(angle4);
			ey = ay9 + r2 * Math.cos(angle4);
			if(i6 != 0) {
				var t0 = new trilateral_tri_Trilateral(dx16,dy16,bx19,by19,cx19,cy19);
				var t110 = new trilateral_tri_Trilateral(dx16,dy16,cx19,cy19,ex,ey);
				out9[out9.length] = t0;
				out9[out9.length] = t110;
			}
			angle4 += step10;
			bx19 = cx19;
			by19 = cy19;
			dx16 = ex;
			dy16 = ey;
		}
		var triArr8 = out9;
		var _g21 = 0;
		while(_g21 < triArr8.length) {
			var t51 = triArr8[_g21];
			++_g21;
			out8[out8.length] = t51;
		}
		var t52 = [];
		var this86;
		if(t52 == null) {
			var t53 = [];
			var this87;
			if(t53 == null) {
				var t54 = [];
				var this88 = t54 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t54;
				this87 = this88;
			} else {
				this87 = t53;
			}
			this86 = this87;
		} else {
			this86 = t52;
		}
		var this89 = this86;
		var out10 = this89;
		var pi13 = Math.PI;
		var step11 = pi13 * 2 / 36;
		var dif25;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f40;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f40 = pi_21;
			} else {
				var a40 = pi_21 % (2 * Math.PI);
				f40 = a40 >= 0 ? a40 : a40 + 2 * Math.PI;
			}
			var this90 = f40;
			var za20 = this90;
			var f41;
			if(pi11 >= 0 && pi11 > Math.PI) {
				f41 = pi11;
			} else {
				var a41 = pi11 % (2 * Math.PI);
				f41 = a41 >= 0 ? a41 : a41 + 2 * Math.PI;
			}
			var this91 = f41;
			var zb20 = this91;
			var fa20 = za20;
			var fb20 = zb20;
			var theta24 = Math.abs(fa20 - fb20);
			var clockwise20 = pi_21 < pi11;
			var dif26 = clockwise20 ? theta24 : -theta24;
			dif25 = dif26 > 0 ? dif26 : 2 * Math.PI + dif26;
			break;
		case 1:
			var f42;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f42 = pi_21;
			} else {
				var a42 = pi_21 % (2 * Math.PI);
				f42 = a42 >= 0 ? a42 : a42 + 2 * Math.PI;
			}
			var this92 = f42;
			var za21 = this92;
			var f43;
			if(pi11 >= 0 && pi11 > Math.PI) {
				f43 = pi11;
			} else {
				var a43 = pi11 % (2 * Math.PI);
				f43 = a43 >= 0 ? a43 : a43 + 2 * Math.PI;
			}
			var this93 = f43;
			var zb21 = this93;
			var fa21 = za21;
			var fb21 = zb21;
			var theta25 = Math.abs(fa21 - fb21);
			var clockwise21 = pi_21 < pi11;
			var dif27 = clockwise21 ? theta25 : -theta25;
			dif25 = dif27 < 0 ? dif27 : -2 * Math.PI + dif27;
			break;
		case 2:
			var f44;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f44 = pi_21;
			} else {
				var a44 = pi_21 % (2 * Math.PI);
				f44 = a44 >= 0 ? a44 : a44 + 2 * Math.PI;
			}
			var this94 = f44;
			var za22 = this94;
			var f45;
			if(pi11 >= 0 && pi11 > Math.PI) {
				f45 = pi11;
			} else {
				var a45 = pi11 % (2 * Math.PI);
				f45 = a45 >= 0 ? a45 : a45 + 2 * Math.PI;
			}
			var this95 = f45;
			var zb22 = this95;
			var fa22 = za22;
			var fb22 = zb22;
			var theta26 = Math.abs(fa22 - fb22);
			var smallest5 = theta26 <= Math.PI;
			var clockwise22 = pi_21 < pi11;
			var dif28 = clockwise22 ? theta26 : -theta26;
			dif25 = smallest5 ? dif28 : clockwise22 ? -(2 * Math.PI - theta26) : 2 * Math.PI - theta26;
			break;
		case 3:
			var f46;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f46 = pi_21;
			} else {
				var a46 = pi_21 % (2 * Math.PI);
				f46 = a46 >= 0 ? a46 : a46 + 2 * Math.PI;
			}
			var this96 = f46;
			var za23 = this96;
			var f47;
			if(pi11 >= 0 && pi11 > Math.PI) {
				f47 = pi11;
			} else {
				var a47 = pi11 % (2 * Math.PI);
				f47 = a47 >= 0 ? a47 : a47 + 2 * Math.PI;
			}
			var this97 = f47;
			var zb23 = this97;
			var fa23 = za23;
			var fb23 = zb23;
			var theta27 = Math.abs(fa23 - fb23);
			var largest5 = theta27 > Math.PI;
			var clockwise23 = pi_21 < pi11;
			var dif29 = clockwise23 ? theta27 : -theta27;
			dif25 = largest5 ? dif29 : clockwise23 ? -(2 * Math.PI - theta27) : 2 * Math.PI - theta27;
			break;
		}
		var positive5 = dif25 >= 0;
		var totalSteps5 = Math.ceil(Math.abs(dif25) / step11);
		var step12 = dif25 / totalSteps5;
		var angle5 = pi_21;
		var cx20;
		var cy20;
		var bx20 = 0;
		var by20 = 0;
		var dx17 = 0;
		var dy17 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = 24;
		var _g22 = 0;
		var _g111 = totalSteps5 + 1;
		while(_g22 < _g111) {
			var i7 = _g22++;
			cx20 = bx14 + 30 * Math.sin(angle5);
			cy20 = by14 + 30 * Math.cos(angle5);
			ex1 = bx14 + r21 * Math.sin(angle5);
			ey1 = by14 + r21 * Math.cos(angle5);
			if(i7 != 0) {
				var t01 = new trilateral_tri_Trilateral(dx17,dy17,bx20,by20,cx20,cy20);
				var t111 = new trilateral_tri_Trilateral(dx17,dy17,cx20,cy20,ex1,ey1);
				out10[out10.length] = t01;
				out10[out10.length] = t111;
			}
			angle5 += step12;
			bx20 = cx20;
			by20 = cy20;
			dx17 = ex1;
			dy17 = ey1;
		}
		var triArr9 = out10;
		var _g23 = 0;
		while(_g23 < triArr9.length) {
			var t55 = triArr9[_g23];
			++_g23;
			out8[out8.length] = t55;
		}
		var t56 = [];
		var this98;
		if(t56 == null) {
			var t57 = [];
			var this99;
			if(t57 == null) {
				var t58 = [];
				var this100 = t58 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t58;
				this99 = this100;
			} else {
				this99 = t57;
			}
			this98 = this99;
		} else {
			this98 = t56;
		}
		var this101 = this98;
		var out11 = this101;
		var pi14 = Math.PI;
		var step13 = pi14 * 2 / 36;
		var dif30;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f48;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f48 = pi_21;
			} else {
				var a48 = pi_21 % (2 * Math.PI);
				f48 = a48 >= 0 ? a48 : a48 + 2 * Math.PI;
			}
			var this102 = f48;
			var za24 = this102;
			var f49;
			if(0 > Math.PI) {
				f49 = 0;
			} else {
				var a49 = 0 % (2 * Math.PI);
				f49 = a49 >= 0 ? a49 : a49 + 2 * Math.PI;
			}
			var this103 = f49;
			var zb24 = this103;
			var fa24 = za24;
			var fb24 = zb24;
			var theta28 = Math.abs(fa24 - fb24);
			var clockwise24 = pi_21 < 0;
			var dif31 = clockwise24 ? theta28 : -theta28;
			dif30 = dif31 > 0 ? dif31 : 2 * Math.PI + dif31;
			break;
		case 1:
			var f50;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f50 = pi_21;
			} else {
				var a50 = pi_21 % (2 * Math.PI);
				f50 = a50 >= 0 ? a50 : a50 + 2 * Math.PI;
			}
			var this104 = f50;
			var za25 = this104;
			var f51;
			if(0 > Math.PI) {
				f51 = 0;
			} else {
				var a51 = 0 % (2 * Math.PI);
				f51 = a51 >= 0 ? a51 : a51 + 2 * Math.PI;
			}
			var this105 = f51;
			var zb25 = this105;
			var fa25 = za25;
			var fb25 = zb25;
			var theta29 = Math.abs(fa25 - fb25);
			var clockwise25 = pi_21 < 0;
			var dif32 = clockwise25 ? theta29 : -theta29;
			dif30 = dif32 < 0 ? dif32 : -2 * Math.PI + dif32;
			break;
		case 2:
			var f52;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f52 = pi_21;
			} else {
				var a52 = pi_21 % (2 * Math.PI);
				f52 = a52 >= 0 ? a52 : a52 + 2 * Math.PI;
			}
			var this106 = f52;
			var za26 = this106;
			var f53;
			if(0 > Math.PI) {
				f53 = 0;
			} else {
				var a53 = 0 % (2 * Math.PI);
				f53 = a53 >= 0 ? a53 : a53 + 2 * Math.PI;
			}
			var this107 = f53;
			var zb26 = this107;
			var fa26 = za26;
			var fb26 = zb26;
			var theta30 = Math.abs(fa26 - fb26);
			var smallest6 = theta30 <= Math.PI;
			var clockwise26 = pi_21 < 0;
			var dif33 = clockwise26 ? theta30 : -theta30;
			dif30 = smallest6 ? dif33 : clockwise26 ? -(2 * Math.PI - theta30) : 2 * Math.PI - theta30;
			break;
		case 3:
			var f54;
			if(pi_21 >= 0 && pi_21 > Math.PI) {
				f54 = pi_21;
			} else {
				var a54 = pi_21 % (2 * Math.PI);
				f54 = a54 >= 0 ? a54 : a54 + 2 * Math.PI;
			}
			var this108 = f54;
			var za27 = this108;
			var f55;
			if(0 > Math.PI) {
				f55 = 0;
			} else {
				var a55 = 0 % (2 * Math.PI);
				f55 = a55 >= 0 ? a55 : a55 + 2 * Math.PI;
			}
			var this109 = f55;
			var zb27 = this109;
			var fa27 = za27;
			var fb27 = zb27;
			var theta31 = Math.abs(fa27 - fb27);
			var largest6 = theta31 > Math.PI;
			var clockwise27 = pi_21 < 0;
			var dif34 = clockwise27 ? theta31 : -theta31;
			dif30 = largest6 ? dif34 : clockwise27 ? -(2 * Math.PI - theta31) : 2 * Math.PI - theta31;
			break;
		}
		var positive6 = dif30 >= 0;
		var totalSteps6 = Math.ceil(Math.abs(dif30) / step13);
		var step14 = dif30 / totalSteps6;
		var angle6 = pi_21;
		var cx21;
		var cy21;
		var bx21 = 0;
		var by21 = 0;
		var dx18 = 0;
		var dy18 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = 24;
		var _g24 = 0;
		var _g112 = totalSteps6 + 1;
		while(_g24 < _g112) {
			var i8 = _g24++;
			cx21 = cx14 + 30 * Math.sin(angle6);
			cy21 = cy14 + 30 * Math.cos(angle6);
			ex2 = cx14 + r22 * Math.sin(angle6);
			ey2 = cy14 + r22 * Math.cos(angle6);
			if(i8 != 0) {
				var t02 = new trilateral_tri_Trilateral(dx18,dy18,bx21,by21,cx21,cy21);
				var t112 = new trilateral_tri_Trilateral(dx18,dy18,cx21,cy21,ex2,ey2);
				out11[out11.length] = t02;
				out11[out11.length] = t112;
			}
			angle6 += step14;
			bx21 = cx21;
			by21 = cy21;
			dx18 = ex2;
			dy18 = ey2;
		}
		var triArr10 = out11;
		var _g25 = 0;
		while(_g25 < triArr10.length) {
			var t59 = triArr10[_g25];
			++_g25;
			out8[out8.length] = t59;
		}
		var gamma3 = -pi_21;
		var t60 = [];
		var this110;
		if(t60 == null) {
			var t61 = [];
			var this111;
			if(t61 == null) {
				var t62 = [];
				var this112 = t62 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t62;
				this111 = this112;
			} else {
				this111 = t61;
			}
			this110 = this111;
		} else {
			this110 = t60;
		}
		var this113 = this110;
		var out12 = this113;
		var pi15 = Math.PI;
		var step15 = pi15 * 2 / 36;
		var dif35;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f56;
			if(0 > Math.PI) {
				f56 = 0;
			} else {
				var a56 = 0 % (2 * Math.PI);
				f56 = a56 >= 0 ? a56 : a56 + 2 * Math.PI;
			}
			var this114 = f56;
			var za28 = this114;
			var f57;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f57 = gamma3;
			} else {
				var a57 = gamma3 % (2 * Math.PI);
				f57 = a57 >= 0 ? a57 : a57 + 2 * Math.PI;
			}
			var this115 = f57;
			var zb28 = this115;
			var fa28 = za28;
			var fb28 = zb28;
			var theta32 = Math.abs(fa28 - fb28);
			var clockwise28 = 0 < gamma3;
			var dif36 = clockwise28 ? theta32 : -theta32;
			dif35 = dif36 > 0 ? dif36 : 2 * Math.PI + dif36;
			break;
		case 1:
			var f58;
			if(0 > Math.PI) {
				f58 = 0;
			} else {
				var a58 = 0 % (2 * Math.PI);
				f58 = a58 >= 0 ? a58 : a58 + 2 * Math.PI;
			}
			var this116 = f58;
			var za29 = this116;
			var f59;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f59 = gamma3;
			} else {
				var a59 = gamma3 % (2 * Math.PI);
				f59 = a59 >= 0 ? a59 : a59 + 2 * Math.PI;
			}
			var this117 = f59;
			var zb29 = this117;
			var fa29 = za29;
			var fb29 = zb29;
			var theta33 = Math.abs(fa29 - fb29);
			var clockwise29 = 0 < gamma3;
			var dif37 = clockwise29 ? theta33 : -theta33;
			dif35 = dif37 < 0 ? dif37 : -2 * Math.PI + dif37;
			break;
		case 2:
			var f60;
			if(0 > Math.PI) {
				f60 = 0;
			} else {
				var a60 = 0 % (2 * Math.PI);
				f60 = a60 >= 0 ? a60 : a60 + 2 * Math.PI;
			}
			var this118 = f60;
			var za30 = this118;
			var f61;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f61 = gamma3;
			} else {
				var a61 = gamma3 % (2 * Math.PI);
				f61 = a61 >= 0 ? a61 : a61 + 2 * Math.PI;
			}
			var this119 = f61;
			var zb30 = this119;
			var fa30 = za30;
			var fb30 = zb30;
			var theta34 = Math.abs(fa30 - fb30);
			var smallest7 = theta34 <= Math.PI;
			var clockwise30 = 0 < gamma3;
			var dif38 = clockwise30 ? theta34 : -theta34;
			dif35 = smallest7 ? dif38 : clockwise30 ? -(2 * Math.PI - theta34) : 2 * Math.PI - theta34;
			break;
		case 3:
			var f62;
			if(0 > Math.PI) {
				f62 = 0;
			} else {
				var a62 = 0 % (2 * Math.PI);
				f62 = a62 >= 0 ? a62 : a62 + 2 * Math.PI;
			}
			var this120 = f62;
			var za31 = this120;
			var f63;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f63 = gamma3;
			} else {
				var a63 = gamma3 % (2 * Math.PI);
				f63 = a63 >= 0 ? a63 : a63 + 2 * Math.PI;
			}
			var this121 = f63;
			var zb31 = this121;
			var fa31 = za31;
			var fb31 = zb31;
			var theta35 = Math.abs(fa31 - fb31);
			var largest7 = theta35 > Math.PI;
			var clockwise31 = 0 < gamma3;
			var dif39 = clockwise31 ? theta35 : -theta35;
			dif35 = largest7 ? dif39 : clockwise31 ? -(2 * Math.PI - theta35) : 2 * Math.PI - theta35;
			break;
		}
		var positive7 = dif35 >= 0;
		var totalSteps7 = Math.ceil(Math.abs(dif35) / step15);
		var step16 = dif35 / totalSteps7;
		var angle7 = 0;
		var cx22;
		var cy22;
		var bx22 = 0;
		var by22 = 0;
		var dx19 = 0;
		var dy19 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = 24;
		var _g26 = 0;
		var _g113 = totalSteps7 + 1;
		while(_g26 < _g113) {
			var i9 = _g26++;
			cx22 = dx11 + 30 * Math.sin(angle7);
			cy22 = dy11 + 30 * Math.cos(angle7);
			ex3 = dx11 + r23 * Math.sin(angle7);
			ey3 = dy11 + r23 * Math.cos(angle7);
			if(i9 != 0) {
				var t03 = new trilateral_tri_Trilateral(dx19,dy19,bx22,by22,cx22,cy22);
				var t113 = new trilateral_tri_Trilateral(dx19,dy19,cx22,cy22,ex3,ey3);
				out12[out12.length] = t03;
				out12[out12.length] = t113;
			}
			angle7 += step16;
			bx22 = cx22;
			by22 = cy22;
			dx19 = ex3;
			dy19 = ey3;
		}
		var triArr11 = out12;
		var _g27 = 0;
		while(_g27 < triArr11.length) {
			var t63 = triArr11[_g27];
			++_g27;
			out8[out8.length] = t63;
		}
		var triArr12 = out8;
		var tri34;
		var _g28 = 0;
		while(_g28 < triArr12.length) {
			var t64 = triArr12[_g28];
			++_g28;
			if(t64 != null) {
				var t65 = Object.create(trilateral_tri_Triangle.prototype);
				t65.id = id9;
				t65.ax = t64.ax;
				t65.ay = t64.ay;
				t65.bx = t64.bx;
				t65.by = t64.by;
				t65.cx = t64.cx;
				t65.cy = t64.cy;
				t65.mark = t64.mark;
				t65.depth = 0;
				t65.alpha = 1.;
				t65.colorID = color9;
				t65.colorA = color9;
				t65.colorB = color9;
				t65.colorC = color9;
				t65.windingAdjusted = t64.windingAdjusted;
				tri34 = t65;
				this70[this70.length] = tri34;
			}
		}
	}
	,addBird: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 1;
		var scaleContext = new trilateral_justPath_transform_ScaleContext(path,1.5,1.5);
		var p = new trilateral_justPath_SvgPath(scaleContext);
		p.parse(this.bird_d);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var colorID = this.appColors.indexOf(16777215);
		var tri;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Object.create(trilateral_tri_Triangle.prototype);
				t1.id = 6;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = colorID;
				t1.colorA = colorID;
				t1.colorB = colorID;
				t1.colorC = colorID;
				t1.windingAdjusted = t.windingAdjusted;
				tri = t1;
				this1[this1.length] = tri;
			}
		}
	}
	,addQuadCurve: function() {
		var path = new trilateral_path_FineOverlap(null,null,3);
		path.width = 2;
		path.widthFunction = function(width,x,y,x_,y_) {
			return width + 0.008;
		};
		var translateContext = new trilateral_justPath_transform_TranslationContext(path,-100,300);
		var p = new trilateral_justPath_SvgPath(translateContext);
		p.parse(this.quadtest_d);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var tri;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Object.create(trilateral_tri_Triangle.prototype);
				t1.id = 7;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = 1;
				t1.colorA = 1;
				t1.colorB = 1;
				t1.colorC = 1;
				t1.windingAdjusted = t.windingAdjusted;
				tri = t1;
				this1[this1.length] = tri;
			}
		}
	}
	,addCubicCurve: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 1;
		path.widthFunction = function(width,x,y,x_,y_) {
			return width + 0.008;
		};
		var translateContext = new trilateral_justPath_transform_TranslationContext(path,-50,500);
		var p = new trilateral_justPath_SvgPath(translateContext);
		p.parse(this.cubictest_d);
		var this1 = this.triangles;
		var triArr = path.trilateralArray;
		var tri;
		var _g = 0;
		while(_g < triArr.length) {
			var t = triArr[_g];
			++_g;
			if(t != null) {
				var t1 = Object.create(trilateral_tri_Triangle.prototype);
				t1.id = 7;
				t1.ax = t.ax;
				t1.ay = t.ay;
				t1.bx = t.bx;
				t1.by = t.by;
				t1.cx = t.cx;
				t1.cy = t.cy;
				t1.mark = t.mark;
				t1.depth = 0;
				t1.alpha = 1.;
				t1.colorID = 5;
				t1.colorA = 5;
				t1.colorB = 5;
				t1.colorC = 5;
				t1.windingAdjusted = t.windingAdjusted;
				tri = t1;
				this1[this1.length] = tri;
			}
		}
	}
	,addPaths: function() {
		this.addBird();
		this.addQuadCurve();
		this.addCubicCurve();
	}
	,addJoinTestForwards: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 20;
		path.moveTo(200,450);
		var repeat = path.x == 700 && path.y == 450;
		if(!repeat) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,700,450);
			}
			var _this = path.contour;
			var ax_ = path.x;
			var ay_ = path.y;
			var width_ = path.width;
			var oldAngle = _this.dx != null ? _this.angle1 : null;
			_this.halfA = Math.PI / 2;
			_this.ax = 700;
			_this.ay = 450;
			_this.bx = ax_;
			_this.by = ay_;
			_this.beta = Math.PI / 2 - _this.halfA;
			_this.r = width_ / 2 * Math.cos(_this.beta);
			_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
			if(_this.theta > 0) {
				if(_this.halfA < 0) {
					_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
					_this.angle1 = _this.theta - _this.halfA;
				} else {
					_this.angle1 = _this.theta + _this.halfA - Math.PI;
					_this.angle2 = _this.theta + _this.halfA;
				}
			} else if(_this.halfA > 0) {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			} else {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			}
			if(_this.dxPrev != null) {
				_this.dxOld = _this.dxPrev;
			}
			if(_this.dyPrev != null) {
				_this.dyOld = _this.dyPrev;
			}
			if(_this.exPrev != null) {
				_this.exOld = _this.exPrev;
			}
			if(_this.eyPrev != null) {
				_this.eyOld = _this.eyPrev;
			}
			if(_this.dx != null) {
				_this.dxPrev = _this.dx;
			}
			if(_this.dy != null) {
				_this.dyPrev = _this.dy;
			}
			if(_this.ex != null) {
				_this.exPrev = _this.ex;
			}
			if(_this.ey != null) {
				_this.eyPrev = _this.ey;
			}
			_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
			_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
			_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
			_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
			_this.ax = ax_;
			_this.ay = ay_;
			_this.bx = 700;
			_this.by = 450;
			_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
			if(_this.theta > 0) {
				if(_this.halfA < 0) {
					_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
					_this.angle1 = _this.theta - _this.halfA;
				} else {
					_this.angle1 = _this.theta + _this.halfA - Math.PI;
					_this.angle2 = _this.theta + _this.halfA;
				}
			} else if(_this.halfA > 0) {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			} else {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			}
			if(_this.dxPrev != null) {
				_this.dxOld = _this.dxPrev;
			}
			if(_this.dyPrev != null) {
				_this.dyOld = _this.dyPrev;
			}
			if(_this.exPrev != null) {
				_this.exOld = _this.exPrev;
			}
			if(_this.eyPrev != null) {
				_this.eyOld = _this.eyPrev;
			}
			if(_this.dx != null) {
				_this.dxPrev = _this.dx;
			}
			if(_this.dy != null) {
				_this.dyPrev = _this.dy;
			}
			if(_this.ex != null) {
				_this.exPrev = _this.ex;
			}
			if(_this.ey != null) {
				_this.eyPrev = _this.ey;
			}
			_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
			_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
			_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
			_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
			var x = _this.dxOld - 700;
			var y = _this.dyOld - 450;
			var x1 = _this.exOld - 700;
			var y1 = _this.eyOld - 450;
			var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
			var theta0;
			var theta1;
			if(clockWise) {
				theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
				theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
			} else {
				theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
				theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
			}
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f = theta0;
				} else {
					var a = theta0 % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this1 = f;
				var za = this1;
				var f1;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f1 = theta1;
				} else {
					var a1 = theta1 % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this2 = f1;
				var zb = this2;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(fa - fb);
				var clockwise = theta0 < theta1;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f2 = theta0;
				} else {
					var a2 = theta0 % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this3 = f2;
				var za1 = this3;
				var f3;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f3 = theta1;
				} else {
					var a3 = theta1 % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this4 = f3;
				var zb1 = this4;
				var fa1 = za1;
				var fb1 = zb1;
				var theta2 = Math.abs(fa1 - fb1);
				var clockwise1 = theta0 < theta1;
				var dif2 = clockwise1 ? theta2 : -theta2;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f4 = theta0;
				} else {
					var a4 = theta0 % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this5 = f4;
				var za2 = this5;
				var f5;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f5 = theta1;
				} else {
					var a5 = theta1 % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this6 = f5;
				var zb2 = this6;
				var fa2 = za2;
				var fb2 = zb2;
				var theta3 = Math.abs(fa2 - fb2);
				var smallest = theta3 <= Math.PI;
				var clockwise2 = theta0 < theta1;
				var dif3 = clockwise2 ? theta3 : -theta3;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			case 3:
				var f6;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f6 = theta0;
				} else {
					var a6 = theta0 % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this7 = f6;
				var za3 = this7;
				var f7;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f7 = theta1;
				} else {
					var a7 = theta1 % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this8 = f7;
				var zb3 = this8;
				var fa3 = za3;
				var fb3 = zb3;
				var theta4 = Math.abs(fa3 - fb3);
				var largest = theta4 > Math.PI;
				var clockwise3 = theta0 < theta1;
				var dif4 = clockwise3 ? theta4 : -theta4;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
				break;
			}
			if(_this.count != 0) {
				var gamma = Math.abs(dif) / 2;
				var h = width_ / 2 / Math.cos(gamma);
				var f8;
				if(theta0 <= Math.PI && theta0 > -Math.PI) {
					f8 = theta0;
				} else {
					var a8 = (theta0 + Math.PI) % (2 * Math.PI);
					f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
				}
				var this9 = f8;
				var start = this9;
				var start2 = start;
				var delta = start2 + dif / 2 + Math.PI;
				_this.jx = _this.ax + h * Math.sin(delta);
				_this.jy = _this.ay + h * Math.cos(delta);
			}
			if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
				var ax = _this.ax;
				var ay = _this.ay;
				var radius = width_ / 2;
				var beta = -_this.angle1 - Math.PI / 2;
				var gamma1 = -_this.angle1 - Math.PI / 2 + Math.PI;
				var temp = [];
				var this10 = _this.triArr;
				var t = [];
				var this11;
				if(t == null) {
					var t1 = [];
					var this12 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
					this11 = this12;
				} else {
					this11 = t;
				}
				var this13 = this11;
				var out = this13;
				var pi = Math.PI;
				var step = pi * 2 / 36;
				var dif5;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f9;
					if(beta >= 0 && beta > Math.PI) {
						f9 = beta;
					} else {
						var a9 = beta % (2 * Math.PI);
						f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
					}
					var this14 = f9;
					var za4 = this14;
					var f10;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f10 = gamma1;
					} else {
						var a10 = gamma1 % (2 * Math.PI);
						f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
					}
					var this15 = f10;
					var zb4 = this15;
					var fa4 = za4;
					var fb4 = zb4;
					var theta5 = Math.abs(fa4 - fb4);
					var clockwise4 = beta < gamma1;
					var dif6 = clockwise4 ? theta5 : -theta5;
					dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
					break;
				case 1:
					var f11;
					if(beta >= 0 && beta > Math.PI) {
						f11 = beta;
					} else {
						var a11 = beta % (2 * Math.PI);
						f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
					}
					var this16 = f11;
					var za5 = this16;
					var f12;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f12 = gamma1;
					} else {
						var a12 = gamma1 % (2 * Math.PI);
						f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
					}
					var this17 = f12;
					var zb5 = this17;
					var fa5 = za5;
					var fb5 = zb5;
					var theta6 = Math.abs(fa5 - fb5);
					var clockwise5 = beta < gamma1;
					var dif7 = clockwise5 ? theta6 : -theta6;
					dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
					break;
				case 2:
					var f13;
					if(beta >= 0 && beta > Math.PI) {
						f13 = beta;
					} else {
						var a13 = beta % (2 * Math.PI);
						f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
					}
					var this18 = f13;
					var za6 = this18;
					var f14;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f14 = gamma1;
					} else {
						var a14 = gamma1 % (2 * Math.PI);
						f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
					}
					var this19 = f14;
					var zb6 = this19;
					var fa6 = za6;
					var fb6 = zb6;
					var theta7 = Math.abs(fa6 - fb6);
					var smallest1 = theta7 <= Math.PI;
					var clockwise6 = beta < gamma1;
					var dif8 = clockwise6 ? theta7 : -theta7;
					dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
					break;
				case 3:
					var f15;
					if(beta >= 0 && beta > Math.PI) {
						f15 = beta;
					} else {
						var a15 = beta % (2 * Math.PI);
						f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
					}
					var this20 = f15;
					var za7 = this20;
					var f16;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f16 = gamma1;
					} else {
						var a16 = gamma1 % (2 * Math.PI);
						f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
					}
					var this21 = f16;
					var zb7 = this21;
					var fa7 = za7;
					var fb7 = zb7;
					var theta8 = Math.abs(fa7 - fb7);
					var largest1 = theta8 > Math.PI;
					var clockwise7 = beta < gamma1;
					var dif9 = clockwise7 ? theta8 : -theta8;
					dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
					break;
				}
				var positive = dif5 >= 0;
				var totalSteps = Math.ceil(Math.abs(dif5) / step);
				var step1 = dif5 / totalSteps;
				var angle = beta;
				var cx;
				var cy;
				var bx = 0;
				var by = 0;
				var p2 = temp.length;
				var _g = 0;
				var _g1 = totalSteps + 1;
				while(_g < _g1) {
					var i = _g++;
					cx = ax + radius * Math.sin(angle);
					cy = ay + radius * Math.cos(angle);
					temp[p2++] = cx;
					temp[p2++] = cy;
					if(i != 0) {
						var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
						out[out.length] = t2;
					}
					angle += step1;
					bx = cx;
					by = cy;
				}
				var triArr = out;
				var _g2 = 0;
				while(_g2 < triArr.length) {
					var t3 = triArr[_g2];
					++_g2;
					this10[this10.length] = t3;
				}
				var pA = _this.pointsAnti.length;
				var len = temp.length / 2 | 0;
				var p4 = temp.length / 4 | 0;
				var _g3 = 0;
				var _g11 = p4;
				while(_g3 < _g11) {
					var i1 = _g3++;
					_this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
					_this.pointsAnti[pA++] = temp[len - 2 * i1];
				}
				var pC = _this.pointsClock.length;
				var _g21 = 0;
				var _g31 = p4;
				while(_g21 < _g31) {
					var i2 = _g21++;
					_this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
					_this.pointsClock[pC++] = temp[i2 * 2 + len];
				}
			}
			if(_this.count != 0) {
				_this.addQuads(clockWise,width_);
			}
			_this.quadIndex = _this.triArr.length;
			if(_this.count == 0) {
				_this.penultimateAX = _this.dxPrev;
				_this.penultimateAY = _this.dyPrev;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				_this.penultimateCX = _this.dx;
				_this.penultimateCY = _this.dy;
				_this.lastClockX = _this.exPrev;
				_this.lastClockY = _this.eyPrev;
				var this22 = _this.triArr;
				var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this22[this22.length] = tri;
				var this23 = _this.triArr;
				var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this23[this23.length] = tri1;
			} else {
				if(clockWise && !_this.lastClock) {
					_this.penultimateAX = _this.jx;
					_this.penultimateAY = _this.jy;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.exPrev;
					_this.lastClockY = _this.eyPrev;
					var this24 = _this.triArr;
					var tri2 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this24[this24.length] = tri2;
					var this25 = _this.triArr;
					var tri3 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
					this25[this25.length] = tri3;
				}
				if(clockWise && _this.lastClock) {
					_this.penultimateAX = _this.jx;
					_this.penultimateAY = _this.jy;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.exPrev;
					_this.lastClockY = _this.eyPrev;
					var this26 = _this.triArr;
					var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this26[this26.length] = tri4;
					var this27 = _this.triArr;
					var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
					this27[this27.length] = tri5;
				}
				if(!clockWise && !_this.lastClock) {
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.jx;
					_this.lastClockY = _this.jy;
					_this.penultimateAX = _this.dxPrev;
					_this.penultimateAY = _this.dyPrev;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					var this28 = _this.triArr;
					var tri6 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
					this28[this28.length] = tri6;
					var this29 = _this.triArr;
					var tri7 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this29[this29.length] = tri7;
				}
				if(!clockWise && _this.lastClock) {
					_this.penultimateAX = _this.dxPrev;
					_this.penultimateAY = _this.dyPrev;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.jx;
					_this.penultimateCY = _this.jy;
					_this.lastClockX = _this.dx;
					_this.lastClockY = _this.dy;
					var this30 = _this.triArr;
					var tri8 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this30[this30.length] = tri8;
					var this31 = _this.triArr;
					var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
					this31[this31.length] = tri9;
				}
			}
			if(clockWise) {
				var radius1 = width_ / 2;
				var edgePoly = _this.pointsClock;
				var t4 = [];
				var this32;
				if(t4 == null) {
					var t5 = [];
					var this33 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
					this32 = this33;
				} else {
					this32 = t4;
				}
				var this34 = this32;
				var out1 = this34;
				var pi1 = Math.PI;
				var step2 = pi1 * 2 / 36;
				var positive1 = dif >= 0;
				var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
				var step3 = dif / totalSteps1;
				var angle1 = theta0;
				var cx1;
				var cy1;
				var bx1 = 0;
				var by1 = 0;
				var p21 = edgePoly.length;
				var count = 0;
				var _g4 = 0;
				var _g12 = totalSteps1 + 1;
				while(_g4 < _g12) {
					var i3 = _g4++;
					cx1 = ax_ + radius1 * Math.sin(angle1);
					cy1 = ay_ + radius1 * Math.cos(angle1);
					if(i3 != 0) {
						var t6 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
						out1[out1.length] = t6;
						edgePoly[p21++] = cx1;
						edgePoly[p21++] = cy1;
					}
					angle1 += step3;
					bx1 = cx1;
					by1 = cy1;
				}
				var trilateralArray = out1;
				var this35 = _this.triArr;
				var _g5 = 0;
				while(_g5 < trilateralArray.length) {
					var t7 = trilateralArray[_g5];
					++_g5;
					this35[this35.length] = t7;
				}
			} else {
				var radius2 = width_ / 2;
				var edgePoly1 = _this.pointsAnti;
				var t8 = [];
				var this36;
				if(t8 == null) {
					var t9 = [];
					var this37 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this36 = this37;
				} else {
					this36 = t8;
				}
				var this38 = this36;
				var out2 = this38;
				var pi2 = Math.PI;
				var step4 = pi2 * 2 / 36;
				var positive2 = dif >= 0;
				var totalSteps2 = Math.ceil(Math.abs(dif) / step4);
				var step5 = dif / totalSteps2;
				var angle2 = theta0;
				var cx2;
				var cy2;
				var bx2 = 0;
				var by2 = 0;
				var p22 = edgePoly1.length;
				var count1 = 0;
				var _g6 = 0;
				var _g13 = totalSteps2 + 1;
				while(_g6 < _g13) {
					var i4 = _g6++;
					cx2 = ax_ + radius2 * Math.sin(angle2);
					cy2 = ay_ + radius2 * Math.cos(angle2);
					if(i4 != 0) {
						var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
						out2[out2.length] = t10;
						edgePoly1[p22++] = cx2;
						edgePoly1[p22++] = cy2;
					}
					angle2 += step5;
					bx2 = cx2;
					by2 = cy2;
				}
				var trilateralArray1 = out2;
				var this39 = _this.triArr;
				var _g7 = 0;
				while(_g7 < trilateralArray1.length) {
					var t11 = trilateralArray1[_g7];
					++_g7;
					this39[this39.length] = t11;
				}
			}
			_this.kax = _this.dxPrev;
			_this.kay = _this.dyPrev;
			_this.kbx = _this.dx;
			_this.kby = _this.dy;
			_this.ncx = _this.exPrev;
			_this.ncy = _this.eyPrev;
			_this.kcx = _this.ex;
			_this.kcy = _this.ey;
			if(_this.count != 0) {
				if(clockWise) {
					var this40 = _this.triArr;
					var tri10 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxOld,_this.dyOld,_this.jx,_this.jy,0);
					this40[this40.length] = tri10;
					var this41 = _this.triArr;
					var tri11 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
					this41[this41.length] = tri11;
				} else {
					var this42 = _this.triArr;
					var tri12 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exOld,_this.eyOld,_this.jx,_this.jy,0);
					this42[this42.length] = tri12;
					var this43 = _this.triArr;
					var tri13 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
					this43[this43.length] = tri13;
				}
			}
			_this.jxOld = _this.jx;
			_this.jyOld = _this.jy;
			_this.lastClock = clockWise;
			_this.count++;
			var l = path.points.length;
			var p = path.points[l - 1];
			var l2 = p.length;
			p[l2] = 700;
			p[l2 + 1] = 450;
			var d = path.dim[path.dim.length - 1];
			if(700 < d.minX) {
				d.minX = 700;
			}
			if(700 > d.maxX) {
				d.maxX = 700;
			}
			if(450 < d.minY) {
				d.minY = 450;
			}
			if(450 > d.maxY) {
				d.maxY = 450;
			}
			path.x = 700;
			path.y = 450;
		}
		var repeat1 = path.x == 700 && path.y == 700;
		if(!repeat1) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,700,700);
			}
			var _this1 = path.contour;
			var ax_1 = path.x;
			var ay_1 = path.y;
			var width_1 = path.width;
			var oldAngle1 = _this1.dx != null ? _this1.angle1 : null;
			_this1.halfA = Math.PI / 2;
			_this1.ax = 700;
			_this1.ay = 700;
			_this1.bx = ax_1;
			_this1.by = ay_1;
			_this1.beta = Math.PI / 2 - _this1.halfA;
			_this1.r = width_1 / 2 * Math.cos(_this1.beta);
			_this1.theta = Math.atan2(_this1.ay - _this1.by,_this1.ax - _this1.bx);
			if(_this1.theta > 0) {
				if(_this1.halfA < 0) {
					_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
					_this1.angle1 = _this1.theta - _this1.halfA;
				} else {
					_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
					_this1.angle2 = _this1.theta + _this1.halfA;
				}
			} else if(_this1.halfA > 0) {
				_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
				_this1.angle2 = _this1.theta + _this1.halfA;
			} else {
				_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
				_this1.angle1 = _this1.theta - _this1.halfA;
			}
			if(_this1.dxPrev != null) {
				_this1.dxOld = _this1.dxPrev;
			}
			if(_this1.dyPrev != null) {
				_this1.dyOld = _this1.dyPrev;
			}
			if(_this1.exPrev != null) {
				_this1.exOld = _this1.exPrev;
			}
			if(_this1.eyPrev != null) {
				_this1.eyOld = _this1.eyPrev;
			}
			if(_this1.dx != null) {
				_this1.dxPrev = _this1.dx;
			}
			if(_this1.dy != null) {
				_this1.dyPrev = _this1.dy;
			}
			if(_this1.ex != null) {
				_this1.exPrev = _this1.ex;
			}
			if(_this1.ey != null) {
				_this1.eyPrev = _this1.ey;
			}
			_this1.dx = _this1.bx + _this1.r * Math.cos(_this1.angle1);
			_this1.dy = _this1.by + _this1.r * Math.sin(_this1.angle1);
			_this1.ex = _this1.bx + _this1.r * Math.cos(_this1.angle2);
			_this1.ey = _this1.by + _this1.r * Math.sin(_this1.angle2);
			_this1.ax = ax_1;
			_this1.ay = ay_1;
			_this1.bx = 700;
			_this1.by = 700;
			_this1.theta = Math.atan2(_this1.ay - _this1.by,_this1.ax - _this1.bx);
			if(_this1.theta > 0) {
				if(_this1.halfA < 0) {
					_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
					_this1.angle1 = _this1.theta - _this1.halfA;
				} else {
					_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
					_this1.angle2 = _this1.theta + _this1.halfA;
				}
			} else if(_this1.halfA > 0) {
				_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
				_this1.angle2 = _this1.theta + _this1.halfA;
			} else {
				_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
				_this1.angle1 = _this1.theta - _this1.halfA;
			}
			if(_this1.dxPrev != null) {
				_this1.dxOld = _this1.dxPrev;
			}
			if(_this1.dyPrev != null) {
				_this1.dyOld = _this1.dyPrev;
			}
			if(_this1.exPrev != null) {
				_this1.exOld = _this1.exPrev;
			}
			if(_this1.eyPrev != null) {
				_this1.eyOld = _this1.eyPrev;
			}
			if(_this1.dx != null) {
				_this1.dxPrev = _this1.dx;
			}
			if(_this1.dy != null) {
				_this1.dyPrev = _this1.dy;
			}
			if(_this1.ex != null) {
				_this1.exPrev = _this1.ex;
			}
			if(_this1.ey != null) {
				_this1.eyPrev = _this1.ey;
			}
			_this1.dx = _this1.bx + _this1.r * Math.cos(_this1.angle1);
			_this1.dy = _this1.by + _this1.r * Math.sin(_this1.angle1);
			_this1.ex = _this1.bx + _this1.r * Math.cos(_this1.angle2);
			_this1.ey = _this1.by + _this1.r * Math.sin(_this1.angle2);
			var x2 = _this1.dxOld - 700;
			var y2 = _this1.dyOld - 700;
			var x3 = _this1.exOld - 700;
			var y3 = _this1.eyOld - 700;
			var clockWise1 = x2 * x2 + y2 * y2 > x3 * x3 + y3 * y3;
			var theta01;
			var theta11;
			if(clockWise1) {
				theta01 = -Math.atan2(_this1.ay - _this1.dyOld,_this1.ax - _this1.dxOld) - Math.PI / 2;
				theta11 = -Math.atan2(_this1.ay - _this1.eyPrev,_this1.ax - _this1.exPrev) - Math.PI / 2;
			} else {
				theta01 = -Math.atan2(_this1.ay - _this1.eyOld,_this1.ax - _this1.exOld) - Math.PI / 2;
				theta11 = -Math.atan2(_this1.ay - _this1.dyPrev,_this1.ax - _this1.dxPrev) - Math.PI / 2;
			}
			var dif10;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f17;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f17 = theta01;
				} else {
					var a17 = theta01 % (2 * Math.PI);
					f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
				}
				var this44 = f17;
				var za8 = this44;
				var f18;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f18 = theta11;
				} else {
					var a18 = theta11 % (2 * Math.PI);
					f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
				}
				var this45 = f18;
				var zb8 = this45;
				var fa8 = za8;
				var fb8 = zb8;
				var theta9 = Math.abs(fa8 - fb8);
				var clockwise8 = theta01 < theta11;
				var dif11 = clockwise8 ? theta9 : -theta9;
				dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
				break;
			case 1:
				var f19;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f19 = theta01;
				} else {
					var a19 = theta01 % (2 * Math.PI);
					f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
				}
				var this46 = f19;
				var za9 = this46;
				var f20;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f20 = theta11;
				} else {
					var a20 = theta11 % (2 * Math.PI);
					f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
				}
				var this47 = f20;
				var zb9 = this47;
				var fa9 = za9;
				var fb9 = zb9;
				var theta10 = Math.abs(fa9 - fb9);
				var clockwise9 = theta01 < theta11;
				var dif12 = clockwise9 ? theta10 : -theta10;
				dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
				break;
			case 2:
				var f21;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f21 = theta01;
				} else {
					var a21 = theta01 % (2 * Math.PI);
					f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
				}
				var this48 = f21;
				var za10 = this48;
				var f22;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f22 = theta11;
				} else {
					var a22 = theta11 % (2 * Math.PI);
					f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
				}
				var this49 = f22;
				var zb10 = this49;
				var fa10 = za10;
				var fb10 = zb10;
				var theta12 = Math.abs(fa10 - fb10);
				var smallest2 = theta12 <= Math.PI;
				var clockwise10 = theta01 < theta11;
				var dif13 = clockwise10 ? theta12 : -theta12;
				dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta12) : 2 * Math.PI - theta12;
				break;
			case 3:
				var f23;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f23 = theta01;
				} else {
					var a23 = theta01 % (2 * Math.PI);
					f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
				}
				var this50 = f23;
				var za11 = this50;
				var f24;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f24 = theta11;
				} else {
					var a24 = theta11 % (2 * Math.PI);
					f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
				}
				var this51 = f24;
				var zb11 = this51;
				var fa11 = za11;
				var fb11 = zb11;
				var theta13 = Math.abs(fa11 - fb11);
				var largest2 = theta13 > Math.PI;
				var clockwise11 = theta01 < theta11;
				var dif14 = clockwise11 ? theta13 : -theta13;
				dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta13) : 2 * Math.PI - theta13;
				break;
			}
			if(_this1.count != 0) {
				var gamma2 = Math.abs(dif10) / 2;
				var h1 = width_1 / 2 / Math.cos(gamma2);
				var f25;
				if(theta01 <= Math.PI && theta01 > -Math.PI) {
					f25 = theta01;
				} else {
					var a25 = (theta01 + Math.PI) % (2 * Math.PI);
					f25 = a25 >= 0 ? a25 - Math.PI : a25 + Math.PI;
				}
				var this52 = f25;
				var start1 = this52;
				var start21 = start1;
				var delta1 = start21 + dif10 / 2 + Math.PI;
				_this1.jx = _this1.ax + h1 * Math.sin(delta1);
				_this1.jy = _this1.ay + h1 * Math.cos(delta1);
			}
			if(_this1.count == 0 && (_this1.endLine == 1 || _this1.endLine == 3)) {
				var ax1 = _this1.ax;
				var ay1 = _this1.ay;
				var radius3 = width_1 / 2;
				var beta1 = -_this1.angle1 - Math.PI / 2;
				var gamma3 = -_this1.angle1 - Math.PI / 2 + Math.PI;
				var temp1 = [];
				var this53 = _this1.triArr;
				var t12 = [];
				var this54;
				if(t12 == null) {
					var t13 = [];
					var this55 = t13 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t13;
					this54 = this55;
				} else {
					this54 = t12;
				}
				var this56 = this54;
				var out3 = this56;
				var pi3 = Math.PI;
				var step6 = pi3 * 2 / 36;
				var dif15;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f26;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f26 = beta1;
					} else {
						var a26 = beta1 % (2 * Math.PI);
						f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
					}
					var this57 = f26;
					var za12 = this57;
					var f27;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f27 = gamma3;
					} else {
						var a27 = gamma3 % (2 * Math.PI);
						f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
					}
					var this58 = f27;
					var zb12 = this58;
					var fa12 = za12;
					var fb12 = zb12;
					var theta14 = Math.abs(fa12 - fb12);
					var clockwise12 = beta1 < gamma3;
					var dif16 = clockwise12 ? theta14 : -theta14;
					dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
					break;
				case 1:
					var f28;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f28 = beta1;
					} else {
						var a28 = beta1 % (2 * Math.PI);
						f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
					}
					var this59 = f28;
					var za13 = this59;
					var f29;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f29 = gamma3;
					} else {
						var a29 = gamma3 % (2 * Math.PI);
						f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
					}
					var this60 = f29;
					var zb13 = this60;
					var fa13 = za13;
					var fb13 = zb13;
					var theta15 = Math.abs(fa13 - fb13);
					var clockwise13 = beta1 < gamma3;
					var dif17 = clockwise13 ? theta15 : -theta15;
					dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
					break;
				case 2:
					var f30;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f30 = beta1;
					} else {
						var a30 = beta1 % (2 * Math.PI);
						f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
					}
					var this61 = f30;
					var za14 = this61;
					var f31;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f31 = gamma3;
					} else {
						var a31 = gamma3 % (2 * Math.PI);
						f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
					}
					var this62 = f31;
					var zb14 = this62;
					var fa14 = za14;
					var fb14 = zb14;
					var theta16 = Math.abs(fa14 - fb14);
					var smallest3 = theta16 <= Math.PI;
					var clockwise14 = beta1 < gamma3;
					var dif18 = clockwise14 ? theta16 : -theta16;
					dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta16) : 2 * Math.PI - theta16;
					break;
				case 3:
					var f32;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f32 = beta1;
					} else {
						var a32 = beta1 % (2 * Math.PI);
						f32 = a32 >= 0 ? a32 : a32 + 2 * Math.PI;
					}
					var this63 = f32;
					var za15 = this63;
					var f33;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f33 = gamma3;
					} else {
						var a33 = gamma3 % (2 * Math.PI);
						f33 = a33 >= 0 ? a33 : a33 + 2 * Math.PI;
					}
					var this64 = f33;
					var zb15 = this64;
					var fa15 = za15;
					var fb15 = zb15;
					var theta17 = Math.abs(fa15 - fb15);
					var largest3 = theta17 > Math.PI;
					var clockwise15 = beta1 < gamma3;
					var dif19 = clockwise15 ? theta17 : -theta17;
					dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta17) : 2 * Math.PI - theta17;
					break;
				}
				var positive3 = dif15 >= 0;
				var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
				var step7 = dif15 / totalSteps3;
				var angle3 = beta1;
				var cx3;
				var cy3;
				var bx3 = 0;
				var by3 = 0;
				var p23 = temp1.length;
				var _g8 = 0;
				var _g14 = totalSteps3 + 1;
				while(_g8 < _g14) {
					var i5 = _g8++;
					cx3 = ax1 + radius3 * Math.sin(angle3);
					cy3 = ay1 + radius3 * Math.cos(angle3);
					temp1[p23++] = cx3;
					temp1[p23++] = cy3;
					if(i5 != 0) {
						var t14 = new trilateral_tri_Trilateral(ax1,ay1,bx3,by3,cx3,cy3);
						out3[out3.length] = t14;
					}
					angle3 += step7;
					bx3 = cx3;
					by3 = cy3;
				}
				var triArr1 = out3;
				var _g9 = 0;
				while(_g9 < triArr1.length) {
					var t15 = triArr1[_g9];
					++_g9;
					this53[this53.length] = t15;
				}
				var pA1 = _this1.pointsAnti.length;
				var len1 = temp1.length / 2 | 0;
				var p41 = temp1.length / 4 | 0;
				var _g10 = 0;
				var _g15 = p41;
				while(_g10 < _g15) {
					var i6 = _g10++;
					_this1.pointsAnti[pA1++] = temp1[len1 - 2 * i6 + 1];
					_this1.pointsAnti[pA1++] = temp1[len1 - 2 * i6];
				}
				var pC1 = _this1.pointsClock.length;
				var _g22 = 0;
				var _g32 = p41;
				while(_g22 < _g32) {
					var i7 = _g22++;
					_this1.pointsClock[pC1++] = temp1[i7 * 2 + len1 + 1];
					_this1.pointsClock[pC1++] = temp1[i7 * 2 + len1];
				}
			}
			if(_this1.count != 0) {
				_this1.addQuads(clockWise1,width_1);
			}
			_this1.quadIndex = _this1.triArr.length;
			if(_this1.count == 0) {
				_this1.penultimateAX = _this1.dxPrev;
				_this1.penultimateAY = _this1.dyPrev;
				_this1.lastAntiX = _this1.ex;
				_this1.lastAntiY = _this1.ey;
				_this1.penultimateCX = _this1.dx;
				_this1.penultimateCY = _this1.dy;
				_this1.lastClockX = _this1.exPrev;
				_this1.lastClockY = _this1.eyPrev;
				var this65 = _this1.triArr;
				var tri14 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
				this65[this65.length] = tri14;
				var this66 = _this1.triArr;
				var tri15 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
				this66[this66.length] = tri15;
			} else {
				if(clockWise1 && !_this1.lastClock) {
					_this1.penultimateAX = _this1.jx;
					_this1.penultimateAY = _this1.jy;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.exPrev;
					_this1.lastClockY = _this1.eyPrev;
					var this67 = _this1.triArr;
					var tri16 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this67[this67.length] = tri16;
					var this68 = _this1.triArr;
					var tri17 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
					this68[this68.length] = tri17;
				}
				if(clockWise1 && _this1.lastClock) {
					_this1.penultimateAX = _this1.jx;
					_this1.penultimateAY = _this1.jy;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.exPrev;
					_this1.lastClockY = _this1.eyPrev;
					var this69 = _this1.triArr;
					var tri18 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this69[this69.length] = tri18;
					var this70 = _this1.triArr;
					var tri19 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
					this70[this70.length] = tri19;
				}
				if(!clockWise1 && !_this1.lastClock) {
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.jx;
					_this1.lastClockY = _this1.jy;
					_this1.penultimateAX = _this1.dxPrev;
					_this1.penultimateAY = _this1.dyPrev;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					var this71 = _this1.triArr;
					var tri20 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.jx,_this1.jy,0);
					this71[this71.length] = tri20;
					var this72 = _this1.triArr;
					var tri21 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this72[this72.length] = tri21;
				}
				if(!clockWise1 && _this1.lastClock) {
					_this1.penultimateAX = _this1.dxPrev;
					_this1.penultimateAY = _this1.dyPrev;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.jx;
					_this1.penultimateCY = _this1.jy;
					_this1.lastClockX = _this1.dx;
					_this1.lastClockY = _this1.dy;
					var this73 = _this1.triArr;
					var tri22 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this73[this73.length] = tri22;
					var this74 = _this1.triArr;
					var tri23 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.jx,_this1.jy,_this1.ex,_this1.ey,0);
					this74[this74.length] = tri23;
				}
			}
			if(clockWise1) {
				var radius4 = width_1 / 2;
				var edgePoly2 = _this1.pointsClock;
				var t16 = [];
				var this75;
				if(t16 == null) {
					var t17 = [];
					var this76 = t17 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t17;
					this75 = this76;
				} else {
					this75 = t16;
				}
				var this77 = this75;
				var out4 = this77;
				var pi4 = Math.PI;
				var step8 = pi4 * 2 / 36;
				var positive4 = dif10 >= 0;
				var totalSteps4 = Math.ceil(Math.abs(dif10) / step8);
				var step9 = dif10 / totalSteps4;
				var angle4 = theta01;
				var cx4;
				var cy4;
				var bx4 = 0;
				var by4 = 0;
				var p24 = edgePoly2.length;
				var count2 = 0;
				var _g16 = 0;
				var _g17 = totalSteps4 + 1;
				while(_g16 < _g17) {
					var i8 = _g16++;
					cx4 = ax_1 + radius4 * Math.sin(angle4);
					cy4 = ay_1 + radius4 * Math.cos(angle4);
					if(i8 != 0) {
						var t18 = new trilateral_tri_Trilateral(ax_1,ay_1,bx4,by4,cx4,cy4);
						out4[out4.length] = t18;
						edgePoly2[p24++] = cx4;
						edgePoly2[p24++] = cy4;
					}
					angle4 += step9;
					bx4 = cx4;
					by4 = cy4;
				}
				var trilateralArray2 = out4;
				var this78 = _this1.triArr;
				var _g18 = 0;
				while(_g18 < trilateralArray2.length) {
					var t19 = trilateralArray2[_g18];
					++_g18;
					this78[this78.length] = t19;
				}
			} else {
				var radius5 = width_1 / 2;
				var edgePoly3 = _this1.pointsAnti;
				var t20 = [];
				var this79;
				if(t20 == null) {
					var t21 = [];
					var this80 = t21 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t21;
					this79 = this80;
				} else {
					this79 = t20;
				}
				var this81 = this79;
				var out5 = this81;
				var pi5 = Math.PI;
				var step10 = pi5 * 2 / 36;
				var positive5 = dif10 >= 0;
				var totalSteps5 = Math.ceil(Math.abs(dif10) / step10);
				var step11 = dif10 / totalSteps5;
				var angle5 = theta01;
				var cx5;
				var cy5;
				var bx5 = 0;
				var by5 = 0;
				var p25 = edgePoly3.length;
				var count3 = 0;
				var _g19 = 0;
				var _g110 = totalSteps5 + 1;
				while(_g19 < _g110) {
					var i9 = _g19++;
					cx5 = ax_1 + radius5 * Math.sin(angle5);
					cy5 = ay_1 + radius5 * Math.cos(angle5);
					if(i9 != 0) {
						var t22 = new trilateral_tri_Trilateral(ax_1,ay_1,bx5,by5,cx5,cy5);
						out5[out5.length] = t22;
						edgePoly3[p25++] = cx5;
						edgePoly3[p25++] = cy5;
					}
					angle5 += step11;
					bx5 = cx5;
					by5 = cy5;
				}
				var trilateralArray3 = out5;
				var this82 = _this1.triArr;
				var _g20 = 0;
				while(_g20 < trilateralArray3.length) {
					var t23 = trilateralArray3[_g20];
					++_g20;
					this82[this82.length] = t23;
				}
			}
			_this1.kax = _this1.dxPrev;
			_this1.kay = _this1.dyPrev;
			_this1.kbx = _this1.dx;
			_this1.kby = _this1.dy;
			_this1.ncx = _this1.exPrev;
			_this1.ncy = _this1.eyPrev;
			_this1.kcx = _this1.ex;
			_this1.kcy = _this1.ey;
			if(_this1.count != 0) {
				if(clockWise1) {
					var this83 = _this1.triArr;
					var tri24 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.dxOld,_this1.dyOld,_this1.jx,_this1.jy,0);
					this83[this83.length] = tri24;
					var this84 = _this1.triArr;
					var tri25 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.exPrev,_this1.eyPrev,_this1.jx,_this1.jy,0);
					this84[this84.length] = tri25;
				} else {
					var this85 = _this1.triArr;
					var tri26 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.exOld,_this1.eyOld,_this1.jx,_this1.jy,0);
					this85[this85.length] = tri26;
					var this86 = _this1.triArr;
					var tri27 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.dxPrev,_this1.dyPrev,_this1.jx,_this1.jy,0);
					this86[this86.length] = tri27;
				}
			}
			_this1.jxOld = _this1.jx;
			_this1.jyOld = _this1.jy;
			_this1.lastClock = clockWise1;
			_this1.count++;
			var l1 = path.points.length;
			var p1 = path.points[l1 - 1];
			var l21 = p1.length;
			p1[l21] = 700;
			p1[l21 + 1] = 700;
			var d1 = path.dim[path.dim.length - 1];
			if(700 < d1.minX) {
				d1.minX = 700;
			}
			if(700 > d1.maxX) {
				d1.maxX = 700;
			}
			if(700 < d1.minY) {
				d1.minY = 700;
			}
			if(700 > d1.maxY) {
				d1.maxY = 700;
			}
			path.x = 700;
			path.y = 700;
		}
		var repeat2 = path.x == 450 && path.y == 750;
		if(!repeat2) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,450,750);
			}
			var _this2 = path.contour;
			var ax_2 = path.x;
			var ay_2 = path.y;
			var width_2 = path.width;
			var oldAngle2 = _this2.dx != null ? _this2.angle1 : null;
			_this2.halfA = Math.PI / 2;
			_this2.ax = 450;
			_this2.ay = 750;
			_this2.bx = ax_2;
			_this2.by = ay_2;
			_this2.beta = Math.PI / 2 - _this2.halfA;
			_this2.r = width_2 / 2 * Math.cos(_this2.beta);
			_this2.theta = Math.atan2(_this2.ay - _this2.by,_this2.ax - _this2.bx);
			if(_this2.theta > 0) {
				if(_this2.halfA < 0) {
					_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
					_this2.angle1 = _this2.theta - _this2.halfA;
				} else {
					_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
					_this2.angle2 = _this2.theta + _this2.halfA;
				}
			} else if(_this2.halfA > 0) {
				_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
				_this2.angle2 = _this2.theta + _this2.halfA;
			} else {
				_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
				_this2.angle1 = _this2.theta - _this2.halfA;
			}
			if(_this2.dxPrev != null) {
				_this2.dxOld = _this2.dxPrev;
			}
			if(_this2.dyPrev != null) {
				_this2.dyOld = _this2.dyPrev;
			}
			if(_this2.exPrev != null) {
				_this2.exOld = _this2.exPrev;
			}
			if(_this2.eyPrev != null) {
				_this2.eyOld = _this2.eyPrev;
			}
			if(_this2.dx != null) {
				_this2.dxPrev = _this2.dx;
			}
			if(_this2.dy != null) {
				_this2.dyPrev = _this2.dy;
			}
			if(_this2.ex != null) {
				_this2.exPrev = _this2.ex;
			}
			if(_this2.ey != null) {
				_this2.eyPrev = _this2.ey;
			}
			_this2.dx = _this2.bx + _this2.r * Math.cos(_this2.angle1);
			_this2.dy = _this2.by + _this2.r * Math.sin(_this2.angle1);
			_this2.ex = _this2.bx + _this2.r * Math.cos(_this2.angle2);
			_this2.ey = _this2.by + _this2.r * Math.sin(_this2.angle2);
			_this2.ax = ax_2;
			_this2.ay = ay_2;
			_this2.bx = 450;
			_this2.by = 750;
			_this2.theta = Math.atan2(_this2.ay - _this2.by,_this2.ax - _this2.bx);
			if(_this2.theta > 0) {
				if(_this2.halfA < 0) {
					_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
					_this2.angle1 = _this2.theta - _this2.halfA;
				} else {
					_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
					_this2.angle2 = _this2.theta + _this2.halfA;
				}
			} else if(_this2.halfA > 0) {
				_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
				_this2.angle2 = _this2.theta + _this2.halfA;
			} else {
				_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
				_this2.angle1 = _this2.theta - _this2.halfA;
			}
			if(_this2.dxPrev != null) {
				_this2.dxOld = _this2.dxPrev;
			}
			if(_this2.dyPrev != null) {
				_this2.dyOld = _this2.dyPrev;
			}
			if(_this2.exPrev != null) {
				_this2.exOld = _this2.exPrev;
			}
			if(_this2.eyPrev != null) {
				_this2.eyOld = _this2.eyPrev;
			}
			if(_this2.dx != null) {
				_this2.dxPrev = _this2.dx;
			}
			if(_this2.dy != null) {
				_this2.dyPrev = _this2.dy;
			}
			if(_this2.ex != null) {
				_this2.exPrev = _this2.ex;
			}
			if(_this2.ey != null) {
				_this2.eyPrev = _this2.ey;
			}
			_this2.dx = _this2.bx + _this2.r * Math.cos(_this2.angle1);
			_this2.dy = _this2.by + _this2.r * Math.sin(_this2.angle1);
			_this2.ex = _this2.bx + _this2.r * Math.cos(_this2.angle2);
			_this2.ey = _this2.by + _this2.r * Math.sin(_this2.angle2);
			var x4 = _this2.dxOld - 450;
			var y4 = _this2.dyOld - 750;
			var x5 = _this2.exOld - 450;
			var y5 = _this2.eyOld - 750;
			var clockWise2 = x4 * x4 + y4 * y4 > x5 * x5 + y5 * y5;
			var theta02;
			var theta18;
			if(clockWise2) {
				theta02 = -Math.atan2(_this2.ay - _this2.dyOld,_this2.ax - _this2.dxOld) - Math.PI / 2;
				theta18 = -Math.atan2(_this2.ay - _this2.eyPrev,_this2.ax - _this2.exPrev) - Math.PI / 2;
			} else {
				theta02 = -Math.atan2(_this2.ay - _this2.eyOld,_this2.ax - _this2.exOld) - Math.PI / 2;
				theta18 = -Math.atan2(_this2.ay - _this2.dyPrev,_this2.ax - _this2.dxPrev) - Math.PI / 2;
			}
			var dif20;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f34;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f34 = theta02;
				} else {
					var a34 = theta02 % (2 * Math.PI);
					f34 = a34 >= 0 ? a34 : a34 + 2 * Math.PI;
				}
				var this87 = f34;
				var za16 = this87;
				var f35;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f35 = theta18;
				} else {
					var a35 = theta18 % (2 * Math.PI);
					f35 = a35 >= 0 ? a35 : a35 + 2 * Math.PI;
				}
				var this88 = f35;
				var zb16 = this88;
				var fa16 = za16;
				var fb16 = zb16;
				var theta19 = Math.abs(fa16 - fb16);
				var clockwise16 = theta02 < theta18;
				var dif21 = clockwise16 ? theta19 : -theta19;
				dif20 = dif21 > 0 ? dif21 : 2 * Math.PI + dif21;
				break;
			case 1:
				var f36;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f36 = theta02;
				} else {
					var a36 = theta02 % (2 * Math.PI);
					f36 = a36 >= 0 ? a36 : a36 + 2 * Math.PI;
				}
				var this89 = f36;
				var za17 = this89;
				var f37;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f37 = theta18;
				} else {
					var a37 = theta18 % (2 * Math.PI);
					f37 = a37 >= 0 ? a37 : a37 + 2 * Math.PI;
				}
				var this90 = f37;
				var zb17 = this90;
				var fa17 = za17;
				var fb17 = zb17;
				var theta20 = Math.abs(fa17 - fb17);
				var clockwise17 = theta02 < theta18;
				var dif22 = clockwise17 ? theta20 : -theta20;
				dif20 = dif22 < 0 ? dif22 : -2 * Math.PI + dif22;
				break;
			case 2:
				var f38;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f38 = theta02;
				} else {
					var a38 = theta02 % (2 * Math.PI);
					f38 = a38 >= 0 ? a38 : a38 + 2 * Math.PI;
				}
				var this91 = f38;
				var za18 = this91;
				var f39;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f39 = theta18;
				} else {
					var a39 = theta18 % (2 * Math.PI);
					f39 = a39 >= 0 ? a39 : a39 + 2 * Math.PI;
				}
				var this92 = f39;
				var zb18 = this92;
				var fa18 = za18;
				var fb18 = zb18;
				var theta21 = Math.abs(fa18 - fb18);
				var smallest4 = theta21 <= Math.PI;
				var clockwise18 = theta02 < theta18;
				var dif23 = clockwise18 ? theta21 : -theta21;
				dif20 = smallest4 ? dif23 : clockwise18 ? -(2 * Math.PI - theta21) : 2 * Math.PI - theta21;
				break;
			case 3:
				var f40;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f40 = theta02;
				} else {
					var a40 = theta02 % (2 * Math.PI);
					f40 = a40 >= 0 ? a40 : a40 + 2 * Math.PI;
				}
				var this93 = f40;
				var za19 = this93;
				var f41;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f41 = theta18;
				} else {
					var a41 = theta18 % (2 * Math.PI);
					f41 = a41 >= 0 ? a41 : a41 + 2 * Math.PI;
				}
				var this94 = f41;
				var zb19 = this94;
				var fa19 = za19;
				var fb19 = zb19;
				var theta22 = Math.abs(fa19 - fb19);
				var largest4 = theta22 > Math.PI;
				var clockwise19 = theta02 < theta18;
				var dif24 = clockwise19 ? theta22 : -theta22;
				dif20 = largest4 ? dif24 : clockwise19 ? -(2 * Math.PI - theta22) : 2 * Math.PI - theta22;
				break;
			}
			if(_this2.count != 0) {
				var gamma4 = Math.abs(dif20) / 2;
				var h2 = width_2 / 2 / Math.cos(gamma4);
				var f42;
				if(theta02 <= Math.PI && theta02 > -Math.PI) {
					f42 = theta02;
				} else {
					var a42 = (theta02 + Math.PI) % (2 * Math.PI);
					f42 = a42 >= 0 ? a42 - Math.PI : a42 + Math.PI;
				}
				var this95 = f42;
				var start3 = this95;
				var start22 = start3;
				var delta2 = start22 + dif20 / 2 + Math.PI;
				_this2.jx = _this2.ax + h2 * Math.sin(delta2);
				_this2.jy = _this2.ay + h2 * Math.cos(delta2);
			}
			if(_this2.count == 0 && (_this2.endLine == 1 || _this2.endLine == 3)) {
				var ax2 = _this2.ax;
				var ay2 = _this2.ay;
				var radius6 = width_2 / 2;
				var beta2 = -_this2.angle1 - Math.PI / 2;
				var gamma5 = -_this2.angle1 - Math.PI / 2 + Math.PI;
				var temp2 = [];
				var this96 = _this2.triArr;
				var t24 = [];
				var this97;
				if(t24 == null) {
					var t25 = [];
					var this98 = t25 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t25;
					this97 = this98;
				} else {
					this97 = t24;
				}
				var this99 = this97;
				var out6 = this99;
				var pi6 = Math.PI;
				var step12 = pi6 * 2 / 36;
				var dif25;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f43;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f43 = beta2;
					} else {
						var a43 = beta2 % (2 * Math.PI);
						f43 = a43 >= 0 ? a43 : a43 + 2 * Math.PI;
					}
					var this100 = f43;
					var za20 = this100;
					var f44;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f44 = gamma5;
					} else {
						var a44 = gamma5 % (2 * Math.PI);
						f44 = a44 >= 0 ? a44 : a44 + 2 * Math.PI;
					}
					var this101 = f44;
					var zb20 = this101;
					var fa20 = za20;
					var fb20 = zb20;
					var theta23 = Math.abs(fa20 - fb20);
					var clockwise20 = beta2 < gamma5;
					var dif26 = clockwise20 ? theta23 : -theta23;
					dif25 = dif26 > 0 ? dif26 : 2 * Math.PI + dif26;
					break;
				case 1:
					var f45;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f45 = beta2;
					} else {
						var a45 = beta2 % (2 * Math.PI);
						f45 = a45 >= 0 ? a45 : a45 + 2 * Math.PI;
					}
					var this102 = f45;
					var za21 = this102;
					var f46;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f46 = gamma5;
					} else {
						var a46 = gamma5 % (2 * Math.PI);
						f46 = a46 >= 0 ? a46 : a46 + 2 * Math.PI;
					}
					var this103 = f46;
					var zb21 = this103;
					var fa21 = za21;
					var fb21 = zb21;
					var theta24 = Math.abs(fa21 - fb21);
					var clockwise21 = beta2 < gamma5;
					var dif27 = clockwise21 ? theta24 : -theta24;
					dif25 = dif27 < 0 ? dif27 : -2 * Math.PI + dif27;
					break;
				case 2:
					var f47;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f47 = beta2;
					} else {
						var a47 = beta2 % (2 * Math.PI);
						f47 = a47 >= 0 ? a47 : a47 + 2 * Math.PI;
					}
					var this104 = f47;
					var za22 = this104;
					var f48;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f48 = gamma5;
					} else {
						var a48 = gamma5 % (2 * Math.PI);
						f48 = a48 >= 0 ? a48 : a48 + 2 * Math.PI;
					}
					var this105 = f48;
					var zb22 = this105;
					var fa22 = za22;
					var fb22 = zb22;
					var theta25 = Math.abs(fa22 - fb22);
					var smallest5 = theta25 <= Math.PI;
					var clockwise22 = beta2 < gamma5;
					var dif28 = clockwise22 ? theta25 : -theta25;
					dif25 = smallest5 ? dif28 : clockwise22 ? -(2 * Math.PI - theta25) : 2 * Math.PI - theta25;
					break;
				case 3:
					var f49;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f49 = beta2;
					} else {
						var a49 = beta2 % (2 * Math.PI);
						f49 = a49 >= 0 ? a49 : a49 + 2 * Math.PI;
					}
					var this106 = f49;
					var za23 = this106;
					var f50;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f50 = gamma5;
					} else {
						var a50 = gamma5 % (2 * Math.PI);
						f50 = a50 >= 0 ? a50 : a50 + 2 * Math.PI;
					}
					var this107 = f50;
					var zb23 = this107;
					var fa23 = za23;
					var fb23 = zb23;
					var theta26 = Math.abs(fa23 - fb23);
					var largest5 = theta26 > Math.PI;
					var clockwise23 = beta2 < gamma5;
					var dif29 = clockwise23 ? theta26 : -theta26;
					dif25 = largest5 ? dif29 : clockwise23 ? -(2 * Math.PI - theta26) : 2 * Math.PI - theta26;
					break;
				}
				var positive6 = dif25 >= 0;
				var totalSteps6 = Math.ceil(Math.abs(dif25) / step12);
				var step13 = dif25 / totalSteps6;
				var angle6 = beta2;
				var cx6;
				var cy6;
				var bx6 = 0;
				var by6 = 0;
				var p26 = temp2.length;
				var _g23 = 0;
				var _g111 = totalSteps6 + 1;
				while(_g23 < _g111) {
					var i10 = _g23++;
					cx6 = ax2 + radius6 * Math.sin(angle6);
					cy6 = ay2 + radius6 * Math.cos(angle6);
					temp2[p26++] = cx6;
					temp2[p26++] = cy6;
					if(i10 != 0) {
						var t26 = new trilateral_tri_Trilateral(ax2,ay2,bx6,by6,cx6,cy6);
						out6[out6.length] = t26;
					}
					angle6 += step13;
					bx6 = cx6;
					by6 = cy6;
				}
				var triArr2 = out6;
				var _g24 = 0;
				while(_g24 < triArr2.length) {
					var t27 = triArr2[_g24];
					++_g24;
					this96[this96.length] = t27;
				}
				var pA2 = _this2.pointsAnti.length;
				var len2 = temp2.length / 2 | 0;
				var p42 = temp2.length / 4 | 0;
				var _g25 = 0;
				var _g112 = p42;
				while(_g25 < _g112) {
					var i11 = _g25++;
					_this2.pointsAnti[pA2++] = temp2[len2 - 2 * i11 + 1];
					_this2.pointsAnti[pA2++] = temp2[len2 - 2 * i11];
				}
				var pC2 = _this2.pointsClock.length;
				var _g26 = 0;
				var _g33 = p42;
				while(_g26 < _g33) {
					var i12 = _g26++;
					_this2.pointsClock[pC2++] = temp2[i12 * 2 + len2 + 1];
					_this2.pointsClock[pC2++] = temp2[i12 * 2 + len2];
				}
			}
			if(_this2.count != 0) {
				_this2.addQuads(clockWise2,width_2);
			}
			_this2.quadIndex = _this2.triArr.length;
			if(_this2.count == 0) {
				_this2.penultimateAX = _this2.dxPrev;
				_this2.penultimateAY = _this2.dyPrev;
				_this2.lastAntiX = _this2.ex;
				_this2.lastAntiY = _this2.ey;
				_this2.penultimateCX = _this2.dx;
				_this2.penultimateCY = _this2.dy;
				_this2.lastClockX = _this2.exPrev;
				_this2.lastClockY = _this2.eyPrev;
				var this108 = _this2.triArr;
				var tri28 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
				this108[this108.length] = tri28;
				var this109 = _this2.triArr;
				var tri29 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
				this109[this109.length] = tri29;
			} else {
				if(clockWise2 && !_this2.lastClock) {
					_this2.penultimateAX = _this2.jx;
					_this2.penultimateAY = _this2.jy;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.exPrev;
					_this2.lastClockY = _this2.eyPrev;
					var this110 = _this2.triArr;
					var tri30 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this110[this110.length] = tri30;
					var this111 = _this2.triArr;
					var tri31 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
					this111[this111.length] = tri31;
				}
				if(clockWise2 && _this2.lastClock) {
					_this2.penultimateAX = _this2.jx;
					_this2.penultimateAY = _this2.jy;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.exPrev;
					_this2.lastClockY = _this2.eyPrev;
					var this112 = _this2.triArr;
					var tri32 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this112[this112.length] = tri32;
					var this113 = _this2.triArr;
					var tri33 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
					this113[this113.length] = tri33;
				}
				if(!clockWise2 && !_this2.lastClock) {
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.jx;
					_this2.lastClockY = _this2.jy;
					_this2.penultimateAX = _this2.dxPrev;
					_this2.penultimateAY = _this2.dyPrev;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					var this114 = _this2.triArr;
					var tri34 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.jx,_this2.jy,0);
					this114[this114.length] = tri34;
					var this115 = _this2.triArr;
					var tri35 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this115[this115.length] = tri35;
				}
				if(!clockWise2 && _this2.lastClock) {
					_this2.penultimateAX = _this2.dxPrev;
					_this2.penultimateAY = _this2.dyPrev;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.jx;
					_this2.penultimateCY = _this2.jy;
					_this2.lastClockX = _this2.dx;
					_this2.lastClockY = _this2.dy;
					var this116 = _this2.triArr;
					var tri36 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this116[this116.length] = tri36;
					var this117 = _this2.triArr;
					var tri37 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.jx,_this2.jy,_this2.ex,_this2.ey,0);
					this117[this117.length] = tri37;
				}
			}
			if(clockWise2) {
				var radius7 = width_2 / 2;
				var edgePoly4 = _this2.pointsClock;
				var t28 = [];
				var this118;
				if(t28 == null) {
					var t29 = [];
					var this119 = t29 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t29;
					this118 = this119;
				} else {
					this118 = t28;
				}
				var this120 = this118;
				var out7 = this120;
				var pi7 = Math.PI;
				var step14 = pi7 * 2 / 36;
				var positive7 = dif20 >= 0;
				var totalSteps7 = Math.ceil(Math.abs(dif20) / step14);
				var step15 = dif20 / totalSteps7;
				var angle7 = theta02;
				var cx7;
				var cy7;
				var bx7 = 0;
				var by7 = 0;
				var p27 = edgePoly4.length;
				var count4 = 0;
				var _g27 = 0;
				var _g113 = totalSteps7 + 1;
				while(_g27 < _g113) {
					var i13 = _g27++;
					cx7 = ax_2 + radius7 * Math.sin(angle7);
					cy7 = ay_2 + radius7 * Math.cos(angle7);
					if(i13 != 0) {
						var t30 = new trilateral_tri_Trilateral(ax_2,ay_2,bx7,by7,cx7,cy7);
						out7[out7.length] = t30;
						edgePoly4[p27++] = cx7;
						edgePoly4[p27++] = cy7;
					}
					angle7 += step15;
					bx7 = cx7;
					by7 = cy7;
				}
				var trilateralArray4 = out7;
				var this121 = _this2.triArr;
				var _g28 = 0;
				while(_g28 < trilateralArray4.length) {
					var t31 = trilateralArray4[_g28];
					++_g28;
					this121[this121.length] = t31;
				}
			} else {
				var radius8 = width_2 / 2;
				var edgePoly5 = _this2.pointsAnti;
				var t32 = [];
				var this122;
				if(t32 == null) {
					var t33 = [];
					var this123 = t33 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t33;
					this122 = this123;
				} else {
					this122 = t32;
				}
				var this124 = this122;
				var out8 = this124;
				var pi8 = Math.PI;
				var step16 = pi8 * 2 / 36;
				var positive8 = dif20 >= 0;
				var totalSteps8 = Math.ceil(Math.abs(dif20) / step16);
				var step17 = dif20 / totalSteps8;
				var angle8 = theta02;
				var cx8;
				var cy8;
				var bx8 = 0;
				var by8 = 0;
				var p28 = edgePoly5.length;
				var count5 = 0;
				var _g29 = 0;
				var _g114 = totalSteps8 + 1;
				while(_g29 < _g114) {
					var i14 = _g29++;
					cx8 = ax_2 + radius8 * Math.sin(angle8);
					cy8 = ay_2 + radius8 * Math.cos(angle8);
					if(i14 != 0) {
						var t34 = new trilateral_tri_Trilateral(ax_2,ay_2,bx8,by8,cx8,cy8);
						out8[out8.length] = t34;
						edgePoly5[p28++] = cx8;
						edgePoly5[p28++] = cy8;
					}
					angle8 += step17;
					bx8 = cx8;
					by8 = cy8;
				}
				var trilateralArray5 = out8;
				var this125 = _this2.triArr;
				var _g30 = 0;
				while(_g30 < trilateralArray5.length) {
					var t35 = trilateralArray5[_g30];
					++_g30;
					this125[this125.length] = t35;
				}
			}
			_this2.kax = _this2.dxPrev;
			_this2.kay = _this2.dyPrev;
			_this2.kbx = _this2.dx;
			_this2.kby = _this2.dy;
			_this2.ncx = _this2.exPrev;
			_this2.ncy = _this2.eyPrev;
			_this2.kcx = _this2.ex;
			_this2.kcy = _this2.ey;
			if(_this2.count != 0) {
				if(clockWise2) {
					var this126 = _this2.triArr;
					var tri38 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.dxOld,_this2.dyOld,_this2.jx,_this2.jy,0);
					this126[this126.length] = tri38;
					var this127 = _this2.triArr;
					var tri39 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.exPrev,_this2.eyPrev,_this2.jx,_this2.jy,0);
					this127[this127.length] = tri39;
				} else {
					var this128 = _this2.triArr;
					var tri40 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.exOld,_this2.eyOld,_this2.jx,_this2.jy,0);
					this128[this128.length] = tri40;
					var this129 = _this2.triArr;
					var tri41 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.dxPrev,_this2.dyPrev,_this2.jx,_this2.jy,0);
					this129[this129.length] = tri41;
				}
			}
			_this2.jxOld = _this2.jx;
			_this2.jyOld = _this2.jy;
			_this2.lastClock = clockWise2;
			_this2.count++;
			var l3 = path.points.length;
			var p3 = path.points[l3 - 1];
			var l22 = p3.length;
			p3[l22] = 450;
			p3[l22 + 1] = 750;
			var d2 = path.dim[path.dim.length - 1];
			if(450 < d2.minX) {
				d2.minX = 450;
			}
			if(450 > d2.maxX) {
				d2.maxX = 450;
			}
			if(750 < d2.minY) {
				d2.minY = 750;
			}
			if(750 > d2.maxY) {
				d2.maxY = 750;
			}
			path.x = 450;
			path.y = 750;
		}
		var repeat3 = path.x == 450 && path.y == 700;
		if(!repeat3) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,450,700);
			}
			var _this3 = path.contour;
			var ax_3 = path.x;
			var ay_3 = path.y;
			var width_3 = path.width;
			var oldAngle3 = _this3.dx != null ? _this3.angle1 : null;
			_this3.halfA = Math.PI / 2;
			_this3.ax = 450;
			_this3.ay = 700;
			_this3.bx = ax_3;
			_this3.by = ay_3;
			_this3.beta = Math.PI / 2 - _this3.halfA;
			_this3.r = width_3 / 2 * Math.cos(_this3.beta);
			_this3.theta = Math.atan2(_this3.ay - _this3.by,_this3.ax - _this3.bx);
			if(_this3.theta > 0) {
				if(_this3.halfA < 0) {
					_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
					_this3.angle1 = _this3.theta - _this3.halfA;
				} else {
					_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
					_this3.angle2 = _this3.theta + _this3.halfA;
				}
			} else if(_this3.halfA > 0) {
				_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
				_this3.angle2 = _this3.theta + _this3.halfA;
			} else {
				_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
				_this3.angle1 = _this3.theta - _this3.halfA;
			}
			if(_this3.dxPrev != null) {
				_this3.dxOld = _this3.dxPrev;
			}
			if(_this3.dyPrev != null) {
				_this3.dyOld = _this3.dyPrev;
			}
			if(_this3.exPrev != null) {
				_this3.exOld = _this3.exPrev;
			}
			if(_this3.eyPrev != null) {
				_this3.eyOld = _this3.eyPrev;
			}
			if(_this3.dx != null) {
				_this3.dxPrev = _this3.dx;
			}
			if(_this3.dy != null) {
				_this3.dyPrev = _this3.dy;
			}
			if(_this3.ex != null) {
				_this3.exPrev = _this3.ex;
			}
			if(_this3.ey != null) {
				_this3.eyPrev = _this3.ey;
			}
			_this3.dx = _this3.bx + _this3.r * Math.cos(_this3.angle1);
			_this3.dy = _this3.by + _this3.r * Math.sin(_this3.angle1);
			_this3.ex = _this3.bx + _this3.r * Math.cos(_this3.angle2);
			_this3.ey = _this3.by + _this3.r * Math.sin(_this3.angle2);
			_this3.ax = ax_3;
			_this3.ay = ay_3;
			_this3.bx = 450;
			_this3.by = 700;
			_this3.theta = Math.atan2(_this3.ay - _this3.by,_this3.ax - _this3.bx);
			if(_this3.theta > 0) {
				if(_this3.halfA < 0) {
					_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
					_this3.angle1 = _this3.theta - _this3.halfA;
				} else {
					_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
					_this3.angle2 = _this3.theta + _this3.halfA;
				}
			} else if(_this3.halfA > 0) {
				_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
				_this3.angle2 = _this3.theta + _this3.halfA;
			} else {
				_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
				_this3.angle1 = _this3.theta - _this3.halfA;
			}
			if(_this3.dxPrev != null) {
				_this3.dxOld = _this3.dxPrev;
			}
			if(_this3.dyPrev != null) {
				_this3.dyOld = _this3.dyPrev;
			}
			if(_this3.exPrev != null) {
				_this3.exOld = _this3.exPrev;
			}
			if(_this3.eyPrev != null) {
				_this3.eyOld = _this3.eyPrev;
			}
			if(_this3.dx != null) {
				_this3.dxPrev = _this3.dx;
			}
			if(_this3.dy != null) {
				_this3.dyPrev = _this3.dy;
			}
			if(_this3.ex != null) {
				_this3.exPrev = _this3.ex;
			}
			if(_this3.ey != null) {
				_this3.eyPrev = _this3.ey;
			}
			_this3.dx = _this3.bx + _this3.r * Math.cos(_this3.angle1);
			_this3.dy = _this3.by + _this3.r * Math.sin(_this3.angle1);
			_this3.ex = _this3.bx + _this3.r * Math.cos(_this3.angle2);
			_this3.ey = _this3.by + _this3.r * Math.sin(_this3.angle2);
			var x6 = _this3.dxOld - 450;
			var y6 = _this3.dyOld - 700;
			var x7 = _this3.exOld - 450;
			var y7 = _this3.eyOld - 700;
			var clockWise3 = x6 * x6 + y6 * y6 > x7 * x7 + y7 * y7;
			var theta03;
			var theta110;
			if(clockWise3) {
				theta03 = -Math.atan2(_this3.ay - _this3.dyOld,_this3.ax - _this3.dxOld) - Math.PI / 2;
				theta110 = -Math.atan2(_this3.ay - _this3.eyPrev,_this3.ax - _this3.exPrev) - Math.PI / 2;
			} else {
				theta03 = -Math.atan2(_this3.ay - _this3.eyOld,_this3.ax - _this3.exOld) - Math.PI / 2;
				theta110 = -Math.atan2(_this3.ay - _this3.dyPrev,_this3.ax - _this3.dxPrev) - Math.PI / 2;
			}
			var dif30;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f51;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f51 = theta03;
				} else {
					var a51 = theta03 % (2 * Math.PI);
					f51 = a51 >= 0 ? a51 : a51 + 2 * Math.PI;
				}
				var this130 = f51;
				var za24 = this130;
				var f52;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f52 = theta110;
				} else {
					var a52 = theta110 % (2 * Math.PI);
					f52 = a52 >= 0 ? a52 : a52 + 2 * Math.PI;
				}
				var this131 = f52;
				var zb24 = this131;
				var fa24 = za24;
				var fb24 = zb24;
				var theta27 = Math.abs(fa24 - fb24);
				var clockwise24 = theta03 < theta110;
				var dif31 = clockwise24 ? theta27 : -theta27;
				dif30 = dif31 > 0 ? dif31 : 2 * Math.PI + dif31;
				break;
			case 1:
				var f53;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f53 = theta03;
				} else {
					var a53 = theta03 % (2 * Math.PI);
					f53 = a53 >= 0 ? a53 : a53 + 2 * Math.PI;
				}
				var this132 = f53;
				var za25 = this132;
				var f54;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f54 = theta110;
				} else {
					var a54 = theta110 % (2 * Math.PI);
					f54 = a54 >= 0 ? a54 : a54 + 2 * Math.PI;
				}
				var this133 = f54;
				var zb25 = this133;
				var fa25 = za25;
				var fb25 = zb25;
				var theta28 = Math.abs(fa25 - fb25);
				var clockwise25 = theta03 < theta110;
				var dif32 = clockwise25 ? theta28 : -theta28;
				dif30 = dif32 < 0 ? dif32 : -2 * Math.PI + dif32;
				break;
			case 2:
				var f55;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f55 = theta03;
				} else {
					var a55 = theta03 % (2 * Math.PI);
					f55 = a55 >= 0 ? a55 : a55 + 2 * Math.PI;
				}
				var this134 = f55;
				var za26 = this134;
				var f56;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f56 = theta110;
				} else {
					var a56 = theta110 % (2 * Math.PI);
					f56 = a56 >= 0 ? a56 : a56 + 2 * Math.PI;
				}
				var this135 = f56;
				var zb26 = this135;
				var fa26 = za26;
				var fb26 = zb26;
				var theta29 = Math.abs(fa26 - fb26);
				var smallest6 = theta29 <= Math.PI;
				var clockwise26 = theta03 < theta110;
				var dif33 = clockwise26 ? theta29 : -theta29;
				dif30 = smallest6 ? dif33 : clockwise26 ? -(2 * Math.PI - theta29) : 2 * Math.PI - theta29;
				break;
			case 3:
				var f57;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f57 = theta03;
				} else {
					var a57 = theta03 % (2 * Math.PI);
					f57 = a57 >= 0 ? a57 : a57 + 2 * Math.PI;
				}
				var this136 = f57;
				var za27 = this136;
				var f58;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f58 = theta110;
				} else {
					var a58 = theta110 % (2 * Math.PI);
					f58 = a58 >= 0 ? a58 : a58 + 2 * Math.PI;
				}
				var this137 = f58;
				var zb27 = this137;
				var fa27 = za27;
				var fb27 = zb27;
				var theta30 = Math.abs(fa27 - fb27);
				var largest6 = theta30 > Math.PI;
				var clockwise27 = theta03 < theta110;
				var dif34 = clockwise27 ? theta30 : -theta30;
				dif30 = largest6 ? dif34 : clockwise27 ? -(2 * Math.PI - theta30) : 2 * Math.PI - theta30;
				break;
			}
			if(_this3.count != 0) {
				var gamma6 = Math.abs(dif30) / 2;
				var h3 = width_3 / 2 / Math.cos(gamma6);
				var f59;
				if(theta03 <= Math.PI && theta03 > -Math.PI) {
					f59 = theta03;
				} else {
					var a59 = (theta03 + Math.PI) % (2 * Math.PI);
					f59 = a59 >= 0 ? a59 - Math.PI : a59 + Math.PI;
				}
				var this138 = f59;
				var start4 = this138;
				var start23 = start4;
				var delta3 = start23 + dif30 / 2 + Math.PI;
				_this3.jx = _this3.ax + h3 * Math.sin(delta3);
				_this3.jy = _this3.ay + h3 * Math.cos(delta3);
			}
			if(_this3.count == 0 && (_this3.endLine == 1 || _this3.endLine == 3)) {
				var ax3 = _this3.ax;
				var ay3 = _this3.ay;
				var radius9 = width_3 / 2;
				var beta3 = -_this3.angle1 - Math.PI / 2;
				var gamma7 = -_this3.angle1 - Math.PI / 2 + Math.PI;
				var temp3 = [];
				var this139 = _this3.triArr;
				var t36 = [];
				var this140;
				if(t36 == null) {
					var t37 = [];
					var this141 = t37 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t37;
					this140 = this141;
				} else {
					this140 = t36;
				}
				var this142 = this140;
				var out9 = this142;
				var pi9 = Math.PI;
				var step18 = pi9 * 2 / 36;
				var dif35;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f60;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f60 = beta3;
					} else {
						var a60 = beta3 % (2 * Math.PI);
						f60 = a60 >= 0 ? a60 : a60 + 2 * Math.PI;
					}
					var this143 = f60;
					var za28 = this143;
					var f61;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f61 = gamma7;
					} else {
						var a61 = gamma7 % (2 * Math.PI);
						f61 = a61 >= 0 ? a61 : a61 + 2 * Math.PI;
					}
					var this144 = f61;
					var zb28 = this144;
					var fa28 = za28;
					var fb28 = zb28;
					var theta31 = Math.abs(fa28 - fb28);
					var clockwise28 = beta3 < gamma7;
					var dif36 = clockwise28 ? theta31 : -theta31;
					dif35 = dif36 > 0 ? dif36 : 2 * Math.PI + dif36;
					break;
				case 1:
					var f62;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f62 = beta3;
					} else {
						var a62 = beta3 % (2 * Math.PI);
						f62 = a62 >= 0 ? a62 : a62 + 2 * Math.PI;
					}
					var this145 = f62;
					var za29 = this145;
					var f63;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f63 = gamma7;
					} else {
						var a63 = gamma7 % (2 * Math.PI);
						f63 = a63 >= 0 ? a63 : a63 + 2 * Math.PI;
					}
					var this146 = f63;
					var zb29 = this146;
					var fa29 = za29;
					var fb29 = zb29;
					var theta32 = Math.abs(fa29 - fb29);
					var clockwise29 = beta3 < gamma7;
					var dif37 = clockwise29 ? theta32 : -theta32;
					dif35 = dif37 < 0 ? dif37 : -2 * Math.PI + dif37;
					break;
				case 2:
					var f64;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f64 = beta3;
					} else {
						var a64 = beta3 % (2 * Math.PI);
						f64 = a64 >= 0 ? a64 : a64 + 2 * Math.PI;
					}
					var this147 = f64;
					var za30 = this147;
					var f65;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f65 = gamma7;
					} else {
						var a65 = gamma7 % (2 * Math.PI);
						f65 = a65 >= 0 ? a65 : a65 + 2 * Math.PI;
					}
					var this148 = f65;
					var zb30 = this148;
					var fa30 = za30;
					var fb30 = zb30;
					var theta33 = Math.abs(fa30 - fb30);
					var smallest7 = theta33 <= Math.PI;
					var clockwise30 = beta3 < gamma7;
					var dif38 = clockwise30 ? theta33 : -theta33;
					dif35 = smallest7 ? dif38 : clockwise30 ? -(2 * Math.PI - theta33) : 2 * Math.PI - theta33;
					break;
				case 3:
					var f66;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f66 = beta3;
					} else {
						var a66 = beta3 % (2 * Math.PI);
						f66 = a66 >= 0 ? a66 : a66 + 2 * Math.PI;
					}
					var this149 = f66;
					var za31 = this149;
					var f67;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f67 = gamma7;
					} else {
						var a67 = gamma7 % (2 * Math.PI);
						f67 = a67 >= 0 ? a67 : a67 + 2 * Math.PI;
					}
					var this150 = f67;
					var zb31 = this150;
					var fa31 = za31;
					var fb31 = zb31;
					var theta34 = Math.abs(fa31 - fb31);
					var largest7 = theta34 > Math.PI;
					var clockwise31 = beta3 < gamma7;
					var dif39 = clockwise31 ? theta34 : -theta34;
					dif35 = largest7 ? dif39 : clockwise31 ? -(2 * Math.PI - theta34) : 2 * Math.PI - theta34;
					break;
				}
				var positive9 = dif35 >= 0;
				var totalSteps9 = Math.ceil(Math.abs(dif35) / step18);
				var step19 = dif35 / totalSteps9;
				var angle9 = beta3;
				var cx9;
				var cy9;
				var bx9 = 0;
				var by9 = 0;
				var p29 = temp3.length;
				var _g34 = 0;
				var _g115 = totalSteps9 + 1;
				while(_g34 < _g115) {
					var i15 = _g34++;
					cx9 = ax3 + radius9 * Math.sin(angle9);
					cy9 = ay3 + radius9 * Math.cos(angle9);
					temp3[p29++] = cx9;
					temp3[p29++] = cy9;
					if(i15 != 0) {
						var t38 = new trilateral_tri_Trilateral(ax3,ay3,bx9,by9,cx9,cy9);
						out9[out9.length] = t38;
					}
					angle9 += step19;
					bx9 = cx9;
					by9 = cy9;
				}
				var triArr3 = out9;
				var _g35 = 0;
				while(_g35 < triArr3.length) {
					var t39 = triArr3[_g35];
					++_g35;
					this139[this139.length] = t39;
				}
				var pA3 = _this3.pointsAnti.length;
				var len3 = temp3.length / 2 | 0;
				var p43 = temp3.length / 4 | 0;
				var _g36 = 0;
				var _g116 = p43;
				while(_g36 < _g116) {
					var i16 = _g36++;
					_this3.pointsAnti[pA3++] = temp3[len3 - 2 * i16 + 1];
					_this3.pointsAnti[pA3++] = temp3[len3 - 2 * i16];
				}
				var pC3 = _this3.pointsClock.length;
				var _g210 = 0;
				var _g37 = p43;
				while(_g210 < _g37) {
					var i17 = _g210++;
					_this3.pointsClock[pC3++] = temp3[i17 * 2 + len3 + 1];
					_this3.pointsClock[pC3++] = temp3[i17 * 2 + len3];
				}
			}
			if(_this3.count != 0) {
				_this3.addQuads(clockWise3,width_3);
			}
			_this3.quadIndex = _this3.triArr.length;
			if(_this3.count == 0) {
				_this3.penultimateAX = _this3.dxPrev;
				_this3.penultimateAY = _this3.dyPrev;
				_this3.lastAntiX = _this3.ex;
				_this3.lastAntiY = _this3.ey;
				_this3.penultimateCX = _this3.dx;
				_this3.penultimateCY = _this3.dy;
				_this3.lastClockX = _this3.exPrev;
				_this3.lastClockY = _this3.eyPrev;
				var this151 = _this3.triArr;
				var tri42 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
				this151[this151.length] = tri42;
				var this152 = _this3.triArr;
				var tri43 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
				this152[this152.length] = tri43;
			} else {
				if(clockWise3 && !_this3.lastClock) {
					_this3.penultimateAX = _this3.jx;
					_this3.penultimateAY = _this3.jy;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.exPrev;
					_this3.lastClockY = _this3.eyPrev;
					var this153 = _this3.triArr;
					var tri44 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this153[this153.length] = tri44;
					var this154 = _this3.triArr;
					var tri45 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
					this154[this154.length] = tri45;
				}
				if(clockWise3 && _this3.lastClock) {
					_this3.penultimateAX = _this3.jx;
					_this3.penultimateAY = _this3.jy;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.exPrev;
					_this3.lastClockY = _this3.eyPrev;
					var this155 = _this3.triArr;
					var tri46 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this155[this155.length] = tri46;
					var this156 = _this3.triArr;
					var tri47 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
					this156[this156.length] = tri47;
				}
				if(!clockWise3 && !_this3.lastClock) {
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.jx;
					_this3.lastClockY = _this3.jy;
					_this3.penultimateAX = _this3.dxPrev;
					_this3.penultimateAY = _this3.dyPrev;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					var this157 = _this3.triArr;
					var tri48 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.jx,_this3.jy,0);
					this157[this157.length] = tri48;
					var this158 = _this3.triArr;
					var tri49 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this158[this158.length] = tri49;
				}
				if(!clockWise3 && _this3.lastClock) {
					_this3.penultimateAX = _this3.dxPrev;
					_this3.penultimateAY = _this3.dyPrev;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.jx;
					_this3.penultimateCY = _this3.jy;
					_this3.lastClockX = _this3.dx;
					_this3.lastClockY = _this3.dy;
					var this159 = _this3.triArr;
					var tri50 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this159[this159.length] = tri50;
					var this160 = _this3.triArr;
					var tri51 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.jx,_this3.jy,_this3.ex,_this3.ey,0);
					this160[this160.length] = tri51;
				}
			}
			if(clockWise3) {
				var radius10 = width_3 / 2;
				var edgePoly6 = _this3.pointsClock;
				var t40 = [];
				var this161;
				if(t40 == null) {
					var t41 = [];
					var this162 = t41 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t41;
					this161 = this162;
				} else {
					this161 = t40;
				}
				var this163 = this161;
				var out10 = this163;
				var pi10 = Math.PI;
				var step20 = pi10 * 2 / 36;
				var positive10 = dif30 >= 0;
				var totalSteps10 = Math.ceil(Math.abs(dif30) / step20);
				var step21 = dif30 / totalSteps10;
				var angle10 = theta03;
				var cx10;
				var cy10;
				var bx10 = 0;
				var by10 = 0;
				var p210 = edgePoly6.length;
				var count6 = 0;
				var _g38 = 0;
				var _g117 = totalSteps10 + 1;
				while(_g38 < _g117) {
					var i18 = _g38++;
					cx10 = ax_3 + radius10 * Math.sin(angle10);
					cy10 = ay_3 + radius10 * Math.cos(angle10);
					if(i18 != 0) {
						var t42 = new trilateral_tri_Trilateral(ax_3,ay_3,bx10,by10,cx10,cy10);
						out10[out10.length] = t42;
						edgePoly6[p210++] = cx10;
						edgePoly6[p210++] = cy10;
					}
					angle10 += step21;
					bx10 = cx10;
					by10 = cy10;
				}
				var trilateralArray6 = out10;
				var this164 = _this3.triArr;
				var _g39 = 0;
				while(_g39 < trilateralArray6.length) {
					var t43 = trilateralArray6[_g39];
					++_g39;
					this164[this164.length] = t43;
				}
			} else {
				var radius11 = width_3 / 2;
				var edgePoly7 = _this3.pointsAnti;
				var t44 = [];
				var this165;
				if(t44 == null) {
					var t45 = [];
					var this166 = t45 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t45;
					this165 = this166;
				} else {
					this165 = t44;
				}
				var this167 = this165;
				var out11 = this167;
				var pi11 = Math.PI;
				var step22 = pi11 * 2 / 36;
				var positive11 = dif30 >= 0;
				var totalSteps11 = Math.ceil(Math.abs(dif30) / step22);
				var step23 = dif30 / totalSteps11;
				var angle11 = theta03;
				var cx11;
				var cy11;
				var bx11 = 0;
				var by11 = 0;
				var p211 = edgePoly7.length;
				var count7 = 0;
				var _g40 = 0;
				var _g118 = totalSteps11 + 1;
				while(_g40 < _g118) {
					var i19 = _g40++;
					cx11 = ax_3 + radius11 * Math.sin(angle11);
					cy11 = ay_3 + radius11 * Math.cos(angle11);
					if(i19 != 0) {
						var t46 = new trilateral_tri_Trilateral(ax_3,ay_3,bx11,by11,cx11,cy11);
						out11[out11.length] = t46;
						edgePoly7[p211++] = cx11;
						edgePoly7[p211++] = cy11;
					}
					angle11 += step23;
					bx11 = cx11;
					by11 = cy11;
				}
				var trilateralArray7 = out11;
				var this168 = _this3.triArr;
				var _g41 = 0;
				while(_g41 < trilateralArray7.length) {
					var t47 = trilateralArray7[_g41];
					++_g41;
					this168[this168.length] = t47;
				}
			}
			_this3.kax = _this3.dxPrev;
			_this3.kay = _this3.dyPrev;
			_this3.kbx = _this3.dx;
			_this3.kby = _this3.dy;
			_this3.ncx = _this3.exPrev;
			_this3.ncy = _this3.eyPrev;
			_this3.kcx = _this3.ex;
			_this3.kcy = _this3.ey;
			if(_this3.count != 0) {
				if(clockWise3) {
					var this169 = _this3.triArr;
					var tri52 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.dxOld,_this3.dyOld,_this3.jx,_this3.jy,0);
					this169[this169.length] = tri52;
					var this170 = _this3.triArr;
					var tri53 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.exPrev,_this3.eyPrev,_this3.jx,_this3.jy,0);
					this170[this170.length] = tri53;
				} else {
					var this171 = _this3.triArr;
					var tri54 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.exOld,_this3.eyOld,_this3.jx,_this3.jy,0);
					this171[this171.length] = tri54;
					var this172 = _this3.triArr;
					var tri55 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.dxPrev,_this3.dyPrev,_this3.jx,_this3.jy,0);
					this172[this172.length] = tri55;
				}
			}
			_this3.jxOld = _this3.jx;
			_this3.jyOld = _this3.jy;
			_this3.lastClock = clockWise3;
			_this3.count++;
			var l4 = path.points.length;
			var p5 = path.points[l4 - 1];
			var l23 = p5.length;
			p5[l23] = 450;
			p5[l23 + 1] = 700;
			var d3 = path.dim[path.dim.length - 1];
			if(450 < d3.minX) {
				d3.minX = 450;
			}
			if(450 > d3.maxX) {
				d3.maxX = 450;
			}
			if(700 < d3.minY) {
				d3.minY = 700;
			}
			if(700 > d3.maxY) {
				d3.maxY = 700;
			}
			path.x = 450;
			path.y = 700;
		}
		var repeat4 = path.x == 200 && path.y == 50;
		if(!repeat4) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,200,50);
			}
			var _this4 = path.contour;
			var ax_4 = path.x;
			var ay_4 = path.y;
			var width_4 = path.width;
			var oldAngle4 = _this4.dx != null ? _this4.angle1 : null;
			_this4.halfA = Math.PI / 2;
			_this4.ax = 200;
			_this4.ay = 50;
			_this4.bx = ax_4;
			_this4.by = ay_4;
			_this4.beta = Math.PI / 2 - _this4.halfA;
			_this4.r = width_4 / 2 * Math.cos(_this4.beta);
			_this4.theta = Math.atan2(_this4.ay - _this4.by,_this4.ax - _this4.bx);
			if(_this4.theta > 0) {
				if(_this4.halfA < 0) {
					_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
					_this4.angle1 = _this4.theta - _this4.halfA;
				} else {
					_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
					_this4.angle2 = _this4.theta + _this4.halfA;
				}
			} else if(_this4.halfA > 0) {
				_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
				_this4.angle2 = _this4.theta + _this4.halfA;
			} else {
				_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
				_this4.angle1 = _this4.theta - _this4.halfA;
			}
			if(_this4.dxPrev != null) {
				_this4.dxOld = _this4.dxPrev;
			}
			if(_this4.dyPrev != null) {
				_this4.dyOld = _this4.dyPrev;
			}
			if(_this4.exPrev != null) {
				_this4.exOld = _this4.exPrev;
			}
			if(_this4.eyPrev != null) {
				_this4.eyOld = _this4.eyPrev;
			}
			if(_this4.dx != null) {
				_this4.dxPrev = _this4.dx;
			}
			if(_this4.dy != null) {
				_this4.dyPrev = _this4.dy;
			}
			if(_this4.ex != null) {
				_this4.exPrev = _this4.ex;
			}
			if(_this4.ey != null) {
				_this4.eyPrev = _this4.ey;
			}
			_this4.dx = _this4.bx + _this4.r * Math.cos(_this4.angle1);
			_this4.dy = _this4.by + _this4.r * Math.sin(_this4.angle1);
			_this4.ex = _this4.bx + _this4.r * Math.cos(_this4.angle2);
			_this4.ey = _this4.by + _this4.r * Math.sin(_this4.angle2);
			_this4.ax = ax_4;
			_this4.ay = ay_4;
			_this4.bx = 200;
			_this4.by = 50;
			_this4.theta = Math.atan2(_this4.ay - _this4.by,_this4.ax - _this4.bx);
			if(_this4.theta > 0) {
				if(_this4.halfA < 0) {
					_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
					_this4.angle1 = _this4.theta - _this4.halfA;
				} else {
					_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
					_this4.angle2 = _this4.theta + _this4.halfA;
				}
			} else if(_this4.halfA > 0) {
				_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
				_this4.angle2 = _this4.theta + _this4.halfA;
			} else {
				_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
				_this4.angle1 = _this4.theta - _this4.halfA;
			}
			if(_this4.dxPrev != null) {
				_this4.dxOld = _this4.dxPrev;
			}
			if(_this4.dyPrev != null) {
				_this4.dyOld = _this4.dyPrev;
			}
			if(_this4.exPrev != null) {
				_this4.exOld = _this4.exPrev;
			}
			if(_this4.eyPrev != null) {
				_this4.eyOld = _this4.eyPrev;
			}
			if(_this4.dx != null) {
				_this4.dxPrev = _this4.dx;
			}
			if(_this4.dy != null) {
				_this4.dyPrev = _this4.dy;
			}
			if(_this4.ex != null) {
				_this4.exPrev = _this4.ex;
			}
			if(_this4.ey != null) {
				_this4.eyPrev = _this4.ey;
			}
			_this4.dx = _this4.bx + _this4.r * Math.cos(_this4.angle1);
			_this4.dy = _this4.by + _this4.r * Math.sin(_this4.angle1);
			_this4.ex = _this4.bx + _this4.r * Math.cos(_this4.angle2);
			_this4.ey = _this4.by + _this4.r * Math.sin(_this4.angle2);
			var x8 = _this4.dxOld - 200;
			var y8 = _this4.dyOld - 50;
			var x9 = _this4.exOld - 200;
			var y9 = _this4.eyOld - 50;
			var clockWise4 = x8 * x8 + y8 * y8 > x9 * x9 + y9 * y9;
			var theta04;
			var theta111;
			if(clockWise4) {
				theta04 = -Math.atan2(_this4.ay - _this4.dyOld,_this4.ax - _this4.dxOld) - Math.PI / 2;
				theta111 = -Math.atan2(_this4.ay - _this4.eyPrev,_this4.ax - _this4.exPrev) - Math.PI / 2;
			} else {
				theta04 = -Math.atan2(_this4.ay - _this4.eyOld,_this4.ax - _this4.exOld) - Math.PI / 2;
				theta111 = -Math.atan2(_this4.ay - _this4.dyPrev,_this4.ax - _this4.dxPrev) - Math.PI / 2;
			}
			var dif40;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f68;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f68 = theta04;
				} else {
					var a68 = theta04 % (2 * Math.PI);
					f68 = a68 >= 0 ? a68 : a68 + 2 * Math.PI;
				}
				var this173 = f68;
				var za32 = this173;
				var f69;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f69 = theta111;
				} else {
					var a69 = theta111 % (2 * Math.PI);
					f69 = a69 >= 0 ? a69 : a69 + 2 * Math.PI;
				}
				var this174 = f69;
				var zb32 = this174;
				var fa32 = za32;
				var fb32 = zb32;
				var theta35 = Math.abs(fa32 - fb32);
				var clockwise32 = theta04 < theta111;
				var dif41 = clockwise32 ? theta35 : -theta35;
				dif40 = dif41 > 0 ? dif41 : 2 * Math.PI + dif41;
				break;
			case 1:
				var f70;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f70 = theta04;
				} else {
					var a70 = theta04 % (2 * Math.PI);
					f70 = a70 >= 0 ? a70 : a70 + 2 * Math.PI;
				}
				var this175 = f70;
				var za33 = this175;
				var f71;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f71 = theta111;
				} else {
					var a71 = theta111 % (2 * Math.PI);
					f71 = a71 >= 0 ? a71 : a71 + 2 * Math.PI;
				}
				var this176 = f71;
				var zb33 = this176;
				var fa33 = za33;
				var fb33 = zb33;
				var theta36 = Math.abs(fa33 - fb33);
				var clockwise33 = theta04 < theta111;
				var dif42 = clockwise33 ? theta36 : -theta36;
				dif40 = dif42 < 0 ? dif42 : -2 * Math.PI + dif42;
				break;
			case 2:
				var f72;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f72 = theta04;
				} else {
					var a72 = theta04 % (2 * Math.PI);
					f72 = a72 >= 0 ? a72 : a72 + 2 * Math.PI;
				}
				var this177 = f72;
				var za34 = this177;
				var f73;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f73 = theta111;
				} else {
					var a73 = theta111 % (2 * Math.PI);
					f73 = a73 >= 0 ? a73 : a73 + 2 * Math.PI;
				}
				var this178 = f73;
				var zb34 = this178;
				var fa34 = za34;
				var fb34 = zb34;
				var theta37 = Math.abs(fa34 - fb34);
				var smallest8 = theta37 <= Math.PI;
				var clockwise34 = theta04 < theta111;
				var dif43 = clockwise34 ? theta37 : -theta37;
				dif40 = smallest8 ? dif43 : clockwise34 ? -(2 * Math.PI - theta37) : 2 * Math.PI - theta37;
				break;
			case 3:
				var f74;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f74 = theta04;
				} else {
					var a74 = theta04 % (2 * Math.PI);
					f74 = a74 >= 0 ? a74 : a74 + 2 * Math.PI;
				}
				var this179 = f74;
				var za35 = this179;
				var f75;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f75 = theta111;
				} else {
					var a75 = theta111 % (2 * Math.PI);
					f75 = a75 >= 0 ? a75 : a75 + 2 * Math.PI;
				}
				var this180 = f75;
				var zb35 = this180;
				var fa35 = za35;
				var fb35 = zb35;
				var theta38 = Math.abs(fa35 - fb35);
				var largest8 = theta38 > Math.PI;
				var clockwise35 = theta04 < theta111;
				var dif44 = clockwise35 ? theta38 : -theta38;
				dif40 = largest8 ? dif44 : clockwise35 ? -(2 * Math.PI - theta38) : 2 * Math.PI - theta38;
				break;
			}
			if(_this4.count != 0) {
				var gamma8 = Math.abs(dif40) / 2;
				var h4 = width_4 / 2 / Math.cos(gamma8);
				var f76;
				if(theta04 <= Math.PI && theta04 > -Math.PI) {
					f76 = theta04;
				} else {
					var a76 = (theta04 + Math.PI) % (2 * Math.PI);
					f76 = a76 >= 0 ? a76 - Math.PI : a76 + Math.PI;
				}
				var this181 = f76;
				var start5 = this181;
				var start24 = start5;
				var delta4 = start24 + dif40 / 2 + Math.PI;
				_this4.jx = _this4.ax + h4 * Math.sin(delta4);
				_this4.jy = _this4.ay + h4 * Math.cos(delta4);
			}
			if(_this4.count == 0 && (_this4.endLine == 1 || _this4.endLine == 3)) {
				var ax4 = _this4.ax;
				var ay4 = _this4.ay;
				var radius12 = width_4 / 2;
				var beta4 = -_this4.angle1 - Math.PI / 2;
				var gamma9 = -_this4.angle1 - Math.PI / 2 + Math.PI;
				var temp4 = [];
				var this182 = _this4.triArr;
				var t48 = [];
				var this183;
				if(t48 == null) {
					var t49 = [];
					var this184 = t49 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t49;
					this183 = this184;
				} else {
					this183 = t48;
				}
				var this185 = this183;
				var out12 = this185;
				var pi12 = Math.PI;
				var step24 = pi12 * 2 / 36;
				var dif45;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f77;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f77 = beta4;
					} else {
						var a77 = beta4 % (2 * Math.PI);
						f77 = a77 >= 0 ? a77 : a77 + 2 * Math.PI;
					}
					var this186 = f77;
					var za36 = this186;
					var f78;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f78 = gamma9;
					} else {
						var a78 = gamma9 % (2 * Math.PI);
						f78 = a78 >= 0 ? a78 : a78 + 2 * Math.PI;
					}
					var this187 = f78;
					var zb36 = this187;
					var fa36 = za36;
					var fb36 = zb36;
					var theta39 = Math.abs(fa36 - fb36);
					var clockwise36 = beta4 < gamma9;
					var dif46 = clockwise36 ? theta39 : -theta39;
					dif45 = dif46 > 0 ? dif46 : 2 * Math.PI + dif46;
					break;
				case 1:
					var f79;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f79 = beta4;
					} else {
						var a79 = beta4 % (2 * Math.PI);
						f79 = a79 >= 0 ? a79 : a79 + 2 * Math.PI;
					}
					var this188 = f79;
					var za37 = this188;
					var f80;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f80 = gamma9;
					} else {
						var a80 = gamma9 % (2 * Math.PI);
						f80 = a80 >= 0 ? a80 : a80 + 2 * Math.PI;
					}
					var this189 = f80;
					var zb37 = this189;
					var fa37 = za37;
					var fb37 = zb37;
					var theta40 = Math.abs(fa37 - fb37);
					var clockwise37 = beta4 < gamma9;
					var dif47 = clockwise37 ? theta40 : -theta40;
					dif45 = dif47 < 0 ? dif47 : -2 * Math.PI + dif47;
					break;
				case 2:
					var f81;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f81 = beta4;
					} else {
						var a81 = beta4 % (2 * Math.PI);
						f81 = a81 >= 0 ? a81 : a81 + 2 * Math.PI;
					}
					var this190 = f81;
					var za38 = this190;
					var f82;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f82 = gamma9;
					} else {
						var a82 = gamma9 % (2 * Math.PI);
						f82 = a82 >= 0 ? a82 : a82 + 2 * Math.PI;
					}
					var this191 = f82;
					var zb38 = this191;
					var fa38 = za38;
					var fb38 = zb38;
					var theta41 = Math.abs(fa38 - fb38);
					var smallest9 = theta41 <= Math.PI;
					var clockwise38 = beta4 < gamma9;
					var dif48 = clockwise38 ? theta41 : -theta41;
					dif45 = smallest9 ? dif48 : clockwise38 ? -(2 * Math.PI - theta41) : 2 * Math.PI - theta41;
					break;
				case 3:
					var f83;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f83 = beta4;
					} else {
						var a83 = beta4 % (2 * Math.PI);
						f83 = a83 >= 0 ? a83 : a83 + 2 * Math.PI;
					}
					var this192 = f83;
					var za39 = this192;
					var f84;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f84 = gamma9;
					} else {
						var a84 = gamma9 % (2 * Math.PI);
						f84 = a84 >= 0 ? a84 : a84 + 2 * Math.PI;
					}
					var this193 = f84;
					var zb39 = this193;
					var fa39 = za39;
					var fb39 = zb39;
					var theta42 = Math.abs(fa39 - fb39);
					var largest9 = theta42 > Math.PI;
					var clockwise39 = beta4 < gamma9;
					var dif49 = clockwise39 ? theta42 : -theta42;
					dif45 = largest9 ? dif49 : clockwise39 ? -(2 * Math.PI - theta42) : 2 * Math.PI - theta42;
					break;
				}
				var positive12 = dif45 >= 0;
				var totalSteps12 = Math.ceil(Math.abs(dif45) / step24);
				var step25 = dif45 / totalSteps12;
				var angle12 = beta4;
				var cx12;
				var cy12;
				var bx12 = 0;
				var by12 = 0;
				var p212 = temp4.length;
				var _g42 = 0;
				var _g119 = totalSteps12 + 1;
				while(_g42 < _g119) {
					var i20 = _g42++;
					cx12 = ax4 + radius12 * Math.sin(angle12);
					cy12 = ay4 + radius12 * Math.cos(angle12);
					temp4[p212++] = cx12;
					temp4[p212++] = cy12;
					if(i20 != 0) {
						var t50 = new trilateral_tri_Trilateral(ax4,ay4,bx12,by12,cx12,cy12);
						out12[out12.length] = t50;
					}
					angle12 += step25;
					bx12 = cx12;
					by12 = cy12;
				}
				var triArr4 = out12;
				var _g43 = 0;
				while(_g43 < triArr4.length) {
					var t51 = triArr4[_g43];
					++_g43;
					this182[this182.length] = t51;
				}
				var pA4 = _this4.pointsAnti.length;
				var len4 = temp4.length / 2 | 0;
				var p44 = temp4.length / 4 | 0;
				var _g44 = 0;
				var _g120 = p44;
				while(_g44 < _g120) {
					var i21 = _g44++;
					_this4.pointsAnti[pA4++] = temp4[len4 - 2 * i21 + 1];
					_this4.pointsAnti[pA4++] = temp4[len4 - 2 * i21];
				}
				var pC4 = _this4.pointsClock.length;
				var _g211 = 0;
				var _g310 = p44;
				while(_g211 < _g310) {
					var i22 = _g211++;
					_this4.pointsClock[pC4++] = temp4[i22 * 2 + len4 + 1];
					_this4.pointsClock[pC4++] = temp4[i22 * 2 + len4];
				}
			}
			if(_this4.count != 0) {
				_this4.addQuads(clockWise4,width_4);
			}
			_this4.quadIndex = _this4.triArr.length;
			if(_this4.count == 0) {
				_this4.penultimateAX = _this4.dxPrev;
				_this4.penultimateAY = _this4.dyPrev;
				_this4.lastAntiX = _this4.ex;
				_this4.lastAntiY = _this4.ey;
				_this4.penultimateCX = _this4.dx;
				_this4.penultimateCY = _this4.dy;
				_this4.lastClockX = _this4.exPrev;
				_this4.lastClockY = _this4.eyPrev;
				var this194 = _this4.triArr;
				var tri56 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
				this194[this194.length] = tri56;
				var this195 = _this4.triArr;
				var tri57 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
				this195[this195.length] = tri57;
			} else {
				if(clockWise4 && !_this4.lastClock) {
					_this4.penultimateAX = _this4.jx;
					_this4.penultimateAY = _this4.jy;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.exPrev;
					_this4.lastClockY = _this4.eyPrev;
					var this196 = _this4.triArr;
					var tri58 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this196[this196.length] = tri58;
					var this197 = _this4.triArr;
					var tri59 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
					this197[this197.length] = tri59;
				}
				if(clockWise4 && _this4.lastClock) {
					_this4.penultimateAX = _this4.jx;
					_this4.penultimateAY = _this4.jy;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.exPrev;
					_this4.lastClockY = _this4.eyPrev;
					var this198 = _this4.triArr;
					var tri60 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this198[this198.length] = tri60;
					var this199 = _this4.triArr;
					var tri61 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
					this199[this199.length] = tri61;
				}
				if(!clockWise4 && !_this4.lastClock) {
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.jx;
					_this4.lastClockY = _this4.jy;
					_this4.penultimateAX = _this4.dxPrev;
					_this4.penultimateAY = _this4.dyPrev;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					var this200 = _this4.triArr;
					var tri62 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.jx,_this4.jy,0);
					this200[this200.length] = tri62;
					var this201 = _this4.triArr;
					var tri63 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this201[this201.length] = tri63;
				}
				if(!clockWise4 && _this4.lastClock) {
					_this4.penultimateAX = _this4.dxPrev;
					_this4.penultimateAY = _this4.dyPrev;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.jx;
					_this4.penultimateCY = _this4.jy;
					_this4.lastClockX = _this4.dx;
					_this4.lastClockY = _this4.dy;
					var this202 = _this4.triArr;
					var tri64 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this202[this202.length] = tri64;
					var this203 = _this4.triArr;
					var tri65 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.jx,_this4.jy,_this4.ex,_this4.ey,0);
					this203[this203.length] = tri65;
				}
			}
			if(clockWise4) {
				var radius13 = width_4 / 2;
				var edgePoly8 = _this4.pointsClock;
				var t52 = [];
				var this204;
				if(t52 == null) {
					var t53 = [];
					var this205 = t53 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t53;
					this204 = this205;
				} else {
					this204 = t52;
				}
				var this206 = this204;
				var out13 = this206;
				var pi13 = Math.PI;
				var step26 = pi13 * 2 / 36;
				var positive13 = dif40 >= 0;
				var totalSteps13 = Math.ceil(Math.abs(dif40) / step26);
				var step27 = dif40 / totalSteps13;
				var angle13 = theta04;
				var cx13;
				var cy13;
				var bx13 = 0;
				var by13 = 0;
				var p213 = edgePoly8.length;
				var count8 = 0;
				var _g45 = 0;
				var _g121 = totalSteps13 + 1;
				while(_g45 < _g121) {
					var i23 = _g45++;
					cx13 = ax_4 + radius13 * Math.sin(angle13);
					cy13 = ay_4 + radius13 * Math.cos(angle13);
					if(i23 != 0) {
						var t54 = new trilateral_tri_Trilateral(ax_4,ay_4,bx13,by13,cx13,cy13);
						out13[out13.length] = t54;
						edgePoly8[p213++] = cx13;
						edgePoly8[p213++] = cy13;
					}
					angle13 += step27;
					bx13 = cx13;
					by13 = cy13;
				}
				var trilateralArray8 = out13;
				var this207 = _this4.triArr;
				var _g46 = 0;
				while(_g46 < trilateralArray8.length) {
					var t55 = trilateralArray8[_g46];
					++_g46;
					this207[this207.length] = t55;
				}
			} else {
				var radius14 = width_4 / 2;
				var edgePoly9 = _this4.pointsAnti;
				var t56 = [];
				var this208;
				if(t56 == null) {
					var t57 = [];
					var this209 = t57 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t57;
					this208 = this209;
				} else {
					this208 = t56;
				}
				var this210 = this208;
				var out14 = this210;
				var pi14 = Math.PI;
				var step28 = pi14 * 2 / 36;
				var positive14 = dif40 >= 0;
				var totalSteps14 = Math.ceil(Math.abs(dif40) / step28);
				var step29 = dif40 / totalSteps14;
				var angle14 = theta04;
				var cx14;
				var cy14;
				var bx14 = 0;
				var by14 = 0;
				var p214 = edgePoly9.length;
				var count9 = 0;
				var _g47 = 0;
				var _g122 = totalSteps14 + 1;
				while(_g47 < _g122) {
					var i24 = _g47++;
					cx14 = ax_4 + radius14 * Math.sin(angle14);
					cy14 = ay_4 + radius14 * Math.cos(angle14);
					if(i24 != 0) {
						var t58 = new trilateral_tri_Trilateral(ax_4,ay_4,bx14,by14,cx14,cy14);
						out14[out14.length] = t58;
						edgePoly9[p214++] = cx14;
						edgePoly9[p214++] = cy14;
					}
					angle14 += step29;
					bx14 = cx14;
					by14 = cy14;
				}
				var trilateralArray9 = out14;
				var this211 = _this4.triArr;
				var _g48 = 0;
				while(_g48 < trilateralArray9.length) {
					var t59 = trilateralArray9[_g48];
					++_g48;
					this211[this211.length] = t59;
				}
			}
			_this4.kax = _this4.dxPrev;
			_this4.kay = _this4.dyPrev;
			_this4.kbx = _this4.dx;
			_this4.kby = _this4.dy;
			_this4.ncx = _this4.exPrev;
			_this4.ncy = _this4.eyPrev;
			_this4.kcx = _this4.ex;
			_this4.kcy = _this4.ey;
			if(_this4.count != 0) {
				if(clockWise4) {
					var this212 = _this4.triArr;
					var tri66 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.dxOld,_this4.dyOld,_this4.jx,_this4.jy,0);
					this212[this212.length] = tri66;
					var this213 = _this4.triArr;
					var tri67 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.exPrev,_this4.eyPrev,_this4.jx,_this4.jy,0);
					this213[this213.length] = tri67;
				} else {
					var this214 = _this4.triArr;
					var tri68 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.exOld,_this4.eyOld,_this4.jx,_this4.jy,0);
					this214[this214.length] = tri68;
					var this215 = _this4.triArr;
					var tri69 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.dxPrev,_this4.dyPrev,_this4.jx,_this4.jy,0);
					this215[this215.length] = tri69;
				}
			}
			_this4.jxOld = _this4.jx;
			_this4.jyOld = _this4.jy;
			_this4.lastClock = clockWise4;
			_this4.count++;
			var l5 = path.points.length;
			var p6 = path.points[l5 - 1];
			var l24 = p6.length;
			p6[l24] = 200;
			p6[l24 + 1] = 50;
			var d4 = path.dim[path.dim.length - 1];
			if(200 < d4.minX) {
				d4.minX = 200;
			}
			if(200 > d4.maxX) {
				d4.maxX = 200;
			}
			if(50 < d4.minY) {
				d4.minY = 50;
			}
			if(50 > d4.maxY) {
				d4.maxY = 50;
			}
			path.x = 200;
			path.y = 50;
		}
		var repeat5 = path.x == 150 && path.y == 450;
		if(!repeat5) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,150,450);
			}
			var _this5 = path.contour;
			var ax_5 = path.x;
			var ay_5 = path.y;
			var width_5 = path.width;
			var oldAngle5 = _this5.dx != null ? _this5.angle1 : null;
			_this5.halfA = Math.PI / 2;
			_this5.ax = 150;
			_this5.ay = 450;
			_this5.bx = ax_5;
			_this5.by = ay_5;
			_this5.beta = Math.PI / 2 - _this5.halfA;
			_this5.r = width_5 / 2 * Math.cos(_this5.beta);
			_this5.theta = Math.atan2(_this5.ay - _this5.by,_this5.ax - _this5.bx);
			if(_this5.theta > 0) {
				if(_this5.halfA < 0) {
					_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
					_this5.angle1 = _this5.theta - _this5.halfA;
				} else {
					_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
					_this5.angle2 = _this5.theta + _this5.halfA;
				}
			} else if(_this5.halfA > 0) {
				_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
				_this5.angle2 = _this5.theta + _this5.halfA;
			} else {
				_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
				_this5.angle1 = _this5.theta - _this5.halfA;
			}
			if(_this5.dxPrev != null) {
				_this5.dxOld = _this5.dxPrev;
			}
			if(_this5.dyPrev != null) {
				_this5.dyOld = _this5.dyPrev;
			}
			if(_this5.exPrev != null) {
				_this5.exOld = _this5.exPrev;
			}
			if(_this5.eyPrev != null) {
				_this5.eyOld = _this5.eyPrev;
			}
			if(_this5.dx != null) {
				_this5.dxPrev = _this5.dx;
			}
			if(_this5.dy != null) {
				_this5.dyPrev = _this5.dy;
			}
			if(_this5.ex != null) {
				_this5.exPrev = _this5.ex;
			}
			if(_this5.ey != null) {
				_this5.eyPrev = _this5.ey;
			}
			_this5.dx = _this5.bx + _this5.r * Math.cos(_this5.angle1);
			_this5.dy = _this5.by + _this5.r * Math.sin(_this5.angle1);
			_this5.ex = _this5.bx + _this5.r * Math.cos(_this5.angle2);
			_this5.ey = _this5.by + _this5.r * Math.sin(_this5.angle2);
			_this5.ax = ax_5;
			_this5.ay = ay_5;
			_this5.bx = 150;
			_this5.by = 450;
			_this5.theta = Math.atan2(_this5.ay - _this5.by,_this5.ax - _this5.bx);
			if(_this5.theta > 0) {
				if(_this5.halfA < 0) {
					_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
					_this5.angle1 = _this5.theta - _this5.halfA;
				} else {
					_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
					_this5.angle2 = _this5.theta + _this5.halfA;
				}
			} else if(_this5.halfA > 0) {
				_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
				_this5.angle2 = _this5.theta + _this5.halfA;
			} else {
				_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
				_this5.angle1 = _this5.theta - _this5.halfA;
			}
			if(_this5.dxPrev != null) {
				_this5.dxOld = _this5.dxPrev;
			}
			if(_this5.dyPrev != null) {
				_this5.dyOld = _this5.dyPrev;
			}
			if(_this5.exPrev != null) {
				_this5.exOld = _this5.exPrev;
			}
			if(_this5.eyPrev != null) {
				_this5.eyOld = _this5.eyPrev;
			}
			if(_this5.dx != null) {
				_this5.dxPrev = _this5.dx;
			}
			if(_this5.dy != null) {
				_this5.dyPrev = _this5.dy;
			}
			if(_this5.ex != null) {
				_this5.exPrev = _this5.ex;
			}
			if(_this5.ey != null) {
				_this5.eyPrev = _this5.ey;
			}
			_this5.dx = _this5.bx + _this5.r * Math.cos(_this5.angle1);
			_this5.dy = _this5.by + _this5.r * Math.sin(_this5.angle1);
			_this5.ex = _this5.bx + _this5.r * Math.cos(_this5.angle2);
			_this5.ey = _this5.by + _this5.r * Math.sin(_this5.angle2);
			var x10 = _this5.dxOld - 150;
			var y10 = _this5.dyOld - 450;
			var x11 = _this5.exOld - 150;
			var y11 = _this5.eyOld - 450;
			var clockWise5 = x10 * x10 + y10 * y10 > x11 * x11 + y11 * y11;
			var theta05;
			var theta112;
			if(clockWise5) {
				theta05 = -Math.atan2(_this5.ay - _this5.dyOld,_this5.ax - _this5.dxOld) - Math.PI / 2;
				theta112 = -Math.atan2(_this5.ay - _this5.eyPrev,_this5.ax - _this5.exPrev) - Math.PI / 2;
			} else {
				theta05 = -Math.atan2(_this5.ay - _this5.eyOld,_this5.ax - _this5.exOld) - Math.PI / 2;
				theta112 = -Math.atan2(_this5.ay - _this5.dyPrev,_this5.ax - _this5.dxPrev) - Math.PI / 2;
			}
			var dif50;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f85;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f85 = theta05;
				} else {
					var a85 = theta05 % (2 * Math.PI);
					f85 = a85 >= 0 ? a85 : a85 + 2 * Math.PI;
				}
				var this216 = f85;
				var za40 = this216;
				var f86;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f86 = theta112;
				} else {
					var a86 = theta112 % (2 * Math.PI);
					f86 = a86 >= 0 ? a86 : a86 + 2 * Math.PI;
				}
				var this217 = f86;
				var zb40 = this217;
				var fa40 = za40;
				var fb40 = zb40;
				var theta43 = Math.abs(fa40 - fb40);
				var clockwise40 = theta05 < theta112;
				var dif51 = clockwise40 ? theta43 : -theta43;
				dif50 = dif51 > 0 ? dif51 : 2 * Math.PI + dif51;
				break;
			case 1:
				var f87;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f87 = theta05;
				} else {
					var a87 = theta05 % (2 * Math.PI);
					f87 = a87 >= 0 ? a87 : a87 + 2 * Math.PI;
				}
				var this218 = f87;
				var za41 = this218;
				var f88;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f88 = theta112;
				} else {
					var a88 = theta112 % (2 * Math.PI);
					f88 = a88 >= 0 ? a88 : a88 + 2 * Math.PI;
				}
				var this219 = f88;
				var zb41 = this219;
				var fa41 = za41;
				var fb41 = zb41;
				var theta44 = Math.abs(fa41 - fb41);
				var clockwise41 = theta05 < theta112;
				var dif52 = clockwise41 ? theta44 : -theta44;
				dif50 = dif52 < 0 ? dif52 : -2 * Math.PI + dif52;
				break;
			case 2:
				var f89;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f89 = theta05;
				} else {
					var a89 = theta05 % (2 * Math.PI);
					f89 = a89 >= 0 ? a89 : a89 + 2 * Math.PI;
				}
				var this220 = f89;
				var za42 = this220;
				var f90;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f90 = theta112;
				} else {
					var a90 = theta112 % (2 * Math.PI);
					f90 = a90 >= 0 ? a90 : a90 + 2 * Math.PI;
				}
				var this221 = f90;
				var zb42 = this221;
				var fa42 = za42;
				var fb42 = zb42;
				var theta45 = Math.abs(fa42 - fb42);
				var smallest10 = theta45 <= Math.PI;
				var clockwise42 = theta05 < theta112;
				var dif53 = clockwise42 ? theta45 : -theta45;
				dif50 = smallest10 ? dif53 : clockwise42 ? -(2 * Math.PI - theta45) : 2 * Math.PI - theta45;
				break;
			case 3:
				var f91;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f91 = theta05;
				} else {
					var a91 = theta05 % (2 * Math.PI);
					f91 = a91 >= 0 ? a91 : a91 + 2 * Math.PI;
				}
				var this222 = f91;
				var za43 = this222;
				var f92;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f92 = theta112;
				} else {
					var a92 = theta112 % (2 * Math.PI);
					f92 = a92 >= 0 ? a92 : a92 + 2 * Math.PI;
				}
				var this223 = f92;
				var zb43 = this223;
				var fa43 = za43;
				var fb43 = zb43;
				var theta46 = Math.abs(fa43 - fb43);
				var largest10 = theta46 > Math.PI;
				var clockwise43 = theta05 < theta112;
				var dif54 = clockwise43 ? theta46 : -theta46;
				dif50 = largest10 ? dif54 : clockwise43 ? -(2 * Math.PI - theta46) : 2 * Math.PI - theta46;
				break;
			}
			if(_this5.count != 0) {
				var gamma10 = Math.abs(dif50) / 2;
				var h5 = width_5 / 2 / Math.cos(gamma10);
				var f93;
				if(theta05 <= Math.PI && theta05 > -Math.PI) {
					f93 = theta05;
				} else {
					var a93 = (theta05 + Math.PI) % (2 * Math.PI);
					f93 = a93 >= 0 ? a93 - Math.PI : a93 + Math.PI;
				}
				var this224 = f93;
				var start6 = this224;
				var start25 = start6;
				var delta5 = start25 + dif50 / 2 + Math.PI;
				_this5.jx = _this5.ax + h5 * Math.sin(delta5);
				_this5.jy = _this5.ay + h5 * Math.cos(delta5);
			}
			if(_this5.count == 0 && (_this5.endLine == 1 || _this5.endLine == 3)) {
				var ax5 = _this5.ax;
				var ay5 = _this5.ay;
				var radius15 = width_5 / 2;
				var beta5 = -_this5.angle1 - Math.PI / 2;
				var gamma11 = -_this5.angle1 - Math.PI / 2 + Math.PI;
				var temp5 = [];
				var this225 = _this5.triArr;
				var t60 = [];
				var this226;
				if(t60 == null) {
					var t61 = [];
					var this227 = t61 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t61;
					this226 = this227;
				} else {
					this226 = t60;
				}
				var this228 = this226;
				var out15 = this228;
				var pi15 = Math.PI;
				var step30 = pi15 * 2 / 36;
				var dif55;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f94;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f94 = beta5;
					} else {
						var a94 = beta5 % (2 * Math.PI);
						f94 = a94 >= 0 ? a94 : a94 + 2 * Math.PI;
					}
					var this229 = f94;
					var za44 = this229;
					var f95;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f95 = gamma11;
					} else {
						var a95 = gamma11 % (2 * Math.PI);
						f95 = a95 >= 0 ? a95 : a95 + 2 * Math.PI;
					}
					var this230 = f95;
					var zb44 = this230;
					var fa44 = za44;
					var fb44 = zb44;
					var theta47 = Math.abs(fa44 - fb44);
					var clockwise44 = beta5 < gamma11;
					var dif56 = clockwise44 ? theta47 : -theta47;
					dif55 = dif56 > 0 ? dif56 : 2 * Math.PI + dif56;
					break;
				case 1:
					var f96;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f96 = beta5;
					} else {
						var a96 = beta5 % (2 * Math.PI);
						f96 = a96 >= 0 ? a96 : a96 + 2 * Math.PI;
					}
					var this231 = f96;
					var za45 = this231;
					var f97;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f97 = gamma11;
					} else {
						var a97 = gamma11 % (2 * Math.PI);
						f97 = a97 >= 0 ? a97 : a97 + 2 * Math.PI;
					}
					var this232 = f97;
					var zb45 = this232;
					var fa45 = za45;
					var fb45 = zb45;
					var theta48 = Math.abs(fa45 - fb45);
					var clockwise45 = beta5 < gamma11;
					var dif57 = clockwise45 ? theta48 : -theta48;
					dif55 = dif57 < 0 ? dif57 : -2 * Math.PI + dif57;
					break;
				case 2:
					var f98;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f98 = beta5;
					} else {
						var a98 = beta5 % (2 * Math.PI);
						f98 = a98 >= 0 ? a98 : a98 + 2 * Math.PI;
					}
					var this233 = f98;
					var za46 = this233;
					var f99;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f99 = gamma11;
					} else {
						var a99 = gamma11 % (2 * Math.PI);
						f99 = a99 >= 0 ? a99 : a99 + 2 * Math.PI;
					}
					var this234 = f99;
					var zb46 = this234;
					var fa46 = za46;
					var fb46 = zb46;
					var theta49 = Math.abs(fa46 - fb46);
					var smallest11 = theta49 <= Math.PI;
					var clockwise46 = beta5 < gamma11;
					var dif58 = clockwise46 ? theta49 : -theta49;
					dif55 = smallest11 ? dif58 : clockwise46 ? -(2 * Math.PI - theta49) : 2 * Math.PI - theta49;
					break;
				case 3:
					var f100;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f100 = beta5;
					} else {
						var a100 = beta5 % (2 * Math.PI);
						f100 = a100 >= 0 ? a100 : a100 + 2 * Math.PI;
					}
					var this235 = f100;
					var za47 = this235;
					var f101;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f101 = gamma11;
					} else {
						var a101 = gamma11 % (2 * Math.PI);
						f101 = a101 >= 0 ? a101 : a101 + 2 * Math.PI;
					}
					var this236 = f101;
					var zb47 = this236;
					var fa47 = za47;
					var fb47 = zb47;
					var theta50 = Math.abs(fa47 - fb47);
					var largest11 = theta50 > Math.PI;
					var clockwise47 = beta5 < gamma11;
					var dif59 = clockwise47 ? theta50 : -theta50;
					dif55 = largest11 ? dif59 : clockwise47 ? -(2 * Math.PI - theta50) : 2 * Math.PI - theta50;
					break;
				}
				var positive15 = dif55 >= 0;
				var totalSteps15 = Math.ceil(Math.abs(dif55) / step30);
				var step31 = dif55 / totalSteps15;
				var angle15 = beta5;
				var cx15;
				var cy15;
				var bx15 = 0;
				var by15 = 0;
				var p215 = temp5.length;
				var _g49 = 0;
				var _g123 = totalSteps15 + 1;
				while(_g49 < _g123) {
					var i25 = _g49++;
					cx15 = ax5 + radius15 * Math.sin(angle15);
					cy15 = ay5 + radius15 * Math.cos(angle15);
					temp5[p215++] = cx15;
					temp5[p215++] = cy15;
					if(i25 != 0) {
						var t62 = new trilateral_tri_Trilateral(ax5,ay5,bx15,by15,cx15,cy15);
						out15[out15.length] = t62;
					}
					angle15 += step31;
					bx15 = cx15;
					by15 = cy15;
				}
				var triArr5 = out15;
				var _g50 = 0;
				while(_g50 < triArr5.length) {
					var t63 = triArr5[_g50];
					++_g50;
					this225[this225.length] = t63;
				}
				var pA5 = _this5.pointsAnti.length;
				var len5 = temp5.length / 2 | 0;
				var p45 = temp5.length / 4 | 0;
				var _g51 = 0;
				var _g124 = p45;
				while(_g51 < _g124) {
					var i26 = _g51++;
					_this5.pointsAnti[pA5++] = temp5[len5 - 2 * i26 + 1];
					_this5.pointsAnti[pA5++] = temp5[len5 - 2 * i26];
				}
				var pC5 = _this5.pointsClock.length;
				var _g212 = 0;
				var _g311 = p45;
				while(_g212 < _g311) {
					var i27 = _g212++;
					_this5.pointsClock[pC5++] = temp5[i27 * 2 + len5 + 1];
					_this5.pointsClock[pC5++] = temp5[i27 * 2 + len5];
				}
			}
			if(_this5.count != 0) {
				_this5.addQuads(clockWise5,width_5);
			}
			_this5.quadIndex = _this5.triArr.length;
			if(_this5.count == 0) {
				_this5.penultimateAX = _this5.dxPrev;
				_this5.penultimateAY = _this5.dyPrev;
				_this5.lastAntiX = _this5.ex;
				_this5.lastAntiY = _this5.ey;
				_this5.penultimateCX = _this5.dx;
				_this5.penultimateCY = _this5.dy;
				_this5.lastClockX = _this5.exPrev;
				_this5.lastClockY = _this5.eyPrev;
				var this237 = _this5.triArr;
				var tri70 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
				this237[this237.length] = tri70;
				var this238 = _this5.triArr;
				var tri71 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
				this238[this238.length] = tri71;
			} else {
				if(clockWise5 && !_this5.lastClock) {
					_this5.penultimateAX = _this5.jx;
					_this5.penultimateAY = _this5.jy;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.exPrev;
					_this5.lastClockY = _this5.eyPrev;
					var this239 = _this5.triArr;
					var tri72 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this239[this239.length] = tri72;
					var this240 = _this5.triArr;
					var tri73 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
					this240[this240.length] = tri73;
				}
				if(clockWise5 && _this5.lastClock) {
					_this5.penultimateAX = _this5.jx;
					_this5.penultimateAY = _this5.jy;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.exPrev;
					_this5.lastClockY = _this5.eyPrev;
					var this241 = _this5.triArr;
					var tri74 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this241[this241.length] = tri74;
					var this242 = _this5.triArr;
					var tri75 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
					this242[this242.length] = tri75;
				}
				if(!clockWise5 && !_this5.lastClock) {
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.jx;
					_this5.lastClockY = _this5.jy;
					_this5.penultimateAX = _this5.dxPrev;
					_this5.penultimateAY = _this5.dyPrev;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					var this243 = _this5.triArr;
					var tri76 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.jx,_this5.jy,0);
					this243[this243.length] = tri76;
					var this244 = _this5.triArr;
					var tri77 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this244[this244.length] = tri77;
				}
				if(!clockWise5 && _this5.lastClock) {
					_this5.penultimateAX = _this5.dxPrev;
					_this5.penultimateAY = _this5.dyPrev;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.jx;
					_this5.penultimateCY = _this5.jy;
					_this5.lastClockX = _this5.dx;
					_this5.lastClockY = _this5.dy;
					var this245 = _this5.triArr;
					var tri78 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this245[this245.length] = tri78;
					var this246 = _this5.triArr;
					var tri79 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.jx,_this5.jy,_this5.ex,_this5.ey,0);
					this246[this246.length] = tri79;
				}
			}
			if(clockWise5) {
				var radius16 = width_5 / 2;
				var edgePoly10 = _this5.pointsClock;
				var t64 = [];
				var this247;
				if(t64 == null) {
					var t65 = [];
					var this248 = t65 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t65;
					this247 = this248;
				} else {
					this247 = t64;
				}
				var this249 = this247;
				var out16 = this249;
				var pi16 = Math.PI;
				var step32 = pi16 * 2 / 36;
				var positive16 = dif50 >= 0;
				var totalSteps16 = Math.ceil(Math.abs(dif50) / step32);
				var step33 = dif50 / totalSteps16;
				var angle16 = theta05;
				var cx16;
				var cy16;
				var bx16 = 0;
				var by16 = 0;
				var p216 = edgePoly10.length;
				var count10 = 0;
				var _g52 = 0;
				var _g125 = totalSteps16 + 1;
				while(_g52 < _g125) {
					var i28 = _g52++;
					cx16 = ax_5 + radius16 * Math.sin(angle16);
					cy16 = ay_5 + radius16 * Math.cos(angle16);
					if(i28 != 0) {
						var t66 = new trilateral_tri_Trilateral(ax_5,ay_5,bx16,by16,cx16,cy16);
						out16[out16.length] = t66;
						edgePoly10[p216++] = cx16;
						edgePoly10[p216++] = cy16;
					}
					angle16 += step33;
					bx16 = cx16;
					by16 = cy16;
				}
				var trilateralArray10 = out16;
				var this250 = _this5.triArr;
				var _g53 = 0;
				while(_g53 < trilateralArray10.length) {
					var t67 = trilateralArray10[_g53];
					++_g53;
					this250[this250.length] = t67;
				}
			} else {
				var radius17 = width_5 / 2;
				var edgePoly11 = _this5.pointsAnti;
				var t68 = [];
				var this251;
				if(t68 == null) {
					var t69 = [];
					var this252 = t69 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t69;
					this251 = this252;
				} else {
					this251 = t68;
				}
				var this253 = this251;
				var out17 = this253;
				var pi17 = Math.PI;
				var step34 = pi17 * 2 / 36;
				var positive17 = dif50 >= 0;
				var totalSteps17 = Math.ceil(Math.abs(dif50) / step34);
				var step35 = dif50 / totalSteps17;
				var angle17 = theta05;
				var cx17;
				var cy17;
				var bx17 = 0;
				var by17 = 0;
				var p217 = edgePoly11.length;
				var count11 = 0;
				var _g54 = 0;
				var _g126 = totalSteps17 + 1;
				while(_g54 < _g126) {
					var i29 = _g54++;
					cx17 = ax_5 + radius17 * Math.sin(angle17);
					cy17 = ay_5 + radius17 * Math.cos(angle17);
					if(i29 != 0) {
						var t70 = new trilateral_tri_Trilateral(ax_5,ay_5,bx17,by17,cx17,cy17);
						out17[out17.length] = t70;
						edgePoly11[p217++] = cx17;
						edgePoly11[p217++] = cy17;
					}
					angle17 += step35;
					bx17 = cx17;
					by17 = cy17;
				}
				var trilateralArray11 = out17;
				var this254 = _this5.triArr;
				var _g55 = 0;
				while(_g55 < trilateralArray11.length) {
					var t71 = trilateralArray11[_g55];
					++_g55;
					this254[this254.length] = t71;
				}
			}
			_this5.kax = _this5.dxPrev;
			_this5.kay = _this5.dyPrev;
			_this5.kbx = _this5.dx;
			_this5.kby = _this5.dy;
			_this5.ncx = _this5.exPrev;
			_this5.ncy = _this5.eyPrev;
			_this5.kcx = _this5.ex;
			_this5.kcy = _this5.ey;
			if(_this5.count != 0) {
				if(clockWise5) {
					var this255 = _this5.triArr;
					var tri80 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.dxOld,_this5.dyOld,_this5.jx,_this5.jy,0);
					this255[this255.length] = tri80;
					var this256 = _this5.triArr;
					var tri81 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.exPrev,_this5.eyPrev,_this5.jx,_this5.jy,0);
					this256[this256.length] = tri81;
				} else {
					var this257 = _this5.triArr;
					var tri82 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.exOld,_this5.eyOld,_this5.jx,_this5.jy,0);
					this257[this257.length] = tri82;
					var this258 = _this5.triArr;
					var tri83 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.dxPrev,_this5.dyPrev,_this5.jx,_this5.jy,0);
					this258[this258.length] = tri83;
				}
			}
			_this5.jxOld = _this5.jx;
			_this5.jyOld = _this5.jy;
			_this5.lastClock = clockWise5;
			_this5.count++;
			var l6 = path.points.length;
			var p7 = path.points[l6 - 1];
			var l25 = p7.length;
			p7[l25] = 150;
			p7[l25 + 1] = 450;
			var d5 = path.dim[path.dim.length - 1];
			if(150 < d5.minX) {
				d5.minX = 150;
			}
			if(150 > d5.maxX) {
				d5.maxX = 150;
			}
			if(450 < d5.minY) {
				d5.minY = 450;
			}
			if(450 > d5.maxY) {
				d5.maxY = 450;
			}
			path.x = 150;
			path.y = 450;
		}
		path.moveTo(0.,0.);
		var this259 = this.triangles;
		var triArr6 = path.trilateralArray;
		var colorID = this.appColors.indexOf(16744192);
		var tri84;
		var _g56 = 0;
		while(_g56 < triArr6.length) {
			var t72 = triArr6[_g56];
			++_g56;
			if(t72 != null) {
				var t73 = Object.create(trilateral_tri_Triangle.prototype);
				t73.id = 10;
				t73.ax = t72.ax;
				t73.ay = t72.ay;
				t73.bx = t72.bx;
				t73.by = t72.by;
				t73.cx = t72.cx;
				t73.cy = t72.cy;
				t73.mark = t72.mark;
				t73.depth = 0;
				t73.alpha = 1.;
				t73.colorID = colorID;
				t73.colorA = colorID;
				t73.colorB = colorID;
				t73.colorC = colorID;
				t73.windingAdjusted = t72.windingAdjusted;
				tri84 = t73;
				this259[this259.length] = tri84;
			}
		}
	}
	,addJoinTestBackwards: function() {
		var path = new trilateral_path_Fine(null,null,3);
		path.width = 20;
		path.moveTo(150,450);
		var repeat = path.x == 200 && path.y == 50;
		if(!repeat) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,200,50);
			}
			var _this = path.contour;
			var ax_ = path.x;
			var ay_ = path.y;
			var width_ = path.width;
			var oldAngle = _this.dx != null ? _this.angle1 : null;
			_this.halfA = Math.PI / 2;
			_this.ax = 200;
			_this.ay = 50;
			_this.bx = ax_;
			_this.by = ay_;
			_this.beta = Math.PI / 2 - _this.halfA;
			_this.r = width_ / 2 * Math.cos(_this.beta);
			_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
			if(_this.theta > 0) {
				if(_this.halfA < 0) {
					_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
					_this.angle1 = _this.theta - _this.halfA;
				} else {
					_this.angle1 = _this.theta + _this.halfA - Math.PI;
					_this.angle2 = _this.theta + _this.halfA;
				}
			} else if(_this.halfA > 0) {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			} else {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			}
			if(_this.dxPrev != null) {
				_this.dxOld = _this.dxPrev;
			}
			if(_this.dyPrev != null) {
				_this.dyOld = _this.dyPrev;
			}
			if(_this.exPrev != null) {
				_this.exOld = _this.exPrev;
			}
			if(_this.eyPrev != null) {
				_this.eyOld = _this.eyPrev;
			}
			if(_this.dx != null) {
				_this.dxPrev = _this.dx;
			}
			if(_this.dy != null) {
				_this.dyPrev = _this.dy;
			}
			if(_this.ex != null) {
				_this.exPrev = _this.ex;
			}
			if(_this.ey != null) {
				_this.eyPrev = _this.ey;
			}
			_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
			_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
			_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
			_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
			_this.ax = ax_;
			_this.ay = ay_;
			_this.bx = 200;
			_this.by = 50;
			_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
			if(_this.theta > 0) {
				if(_this.halfA < 0) {
					_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
					_this.angle1 = _this.theta - _this.halfA;
				} else {
					_this.angle1 = _this.theta + _this.halfA - Math.PI;
					_this.angle2 = _this.theta + _this.halfA;
				}
			} else if(_this.halfA > 0) {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			} else {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			}
			if(_this.dxPrev != null) {
				_this.dxOld = _this.dxPrev;
			}
			if(_this.dyPrev != null) {
				_this.dyOld = _this.dyPrev;
			}
			if(_this.exPrev != null) {
				_this.exOld = _this.exPrev;
			}
			if(_this.eyPrev != null) {
				_this.eyOld = _this.eyPrev;
			}
			if(_this.dx != null) {
				_this.dxPrev = _this.dx;
			}
			if(_this.dy != null) {
				_this.dyPrev = _this.dy;
			}
			if(_this.ex != null) {
				_this.exPrev = _this.ex;
			}
			if(_this.ey != null) {
				_this.eyPrev = _this.ey;
			}
			_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
			_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
			_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
			_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
			var x = _this.dxOld - 200;
			var y = _this.dyOld - 50;
			var x1 = _this.exOld - 200;
			var y1 = _this.eyOld - 50;
			var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
			var theta0;
			var theta1;
			if(clockWise) {
				theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
				theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
			} else {
				theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
				theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
			}
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f = theta0;
				} else {
					var a = theta0 % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this1 = f;
				var za = this1;
				var f1;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f1 = theta1;
				} else {
					var a1 = theta1 % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this2 = f1;
				var zb = this2;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(fa - fb);
				var clockwise = theta0 < theta1;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f2 = theta0;
				} else {
					var a2 = theta0 % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this3 = f2;
				var za1 = this3;
				var f3;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f3 = theta1;
				} else {
					var a3 = theta1 % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this4 = f3;
				var zb1 = this4;
				var fa1 = za1;
				var fb1 = zb1;
				var theta2 = Math.abs(fa1 - fb1);
				var clockwise1 = theta0 < theta1;
				var dif2 = clockwise1 ? theta2 : -theta2;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f4 = theta0;
				} else {
					var a4 = theta0 % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this5 = f4;
				var za2 = this5;
				var f5;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f5 = theta1;
				} else {
					var a5 = theta1 % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this6 = f5;
				var zb2 = this6;
				var fa2 = za2;
				var fb2 = zb2;
				var theta3 = Math.abs(fa2 - fb2);
				var smallest = theta3 <= Math.PI;
				var clockwise2 = theta0 < theta1;
				var dif3 = clockwise2 ? theta3 : -theta3;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			case 3:
				var f6;
				if(theta0 >= 0 && theta0 > Math.PI) {
					f6 = theta0;
				} else {
					var a6 = theta0 % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this7 = f6;
				var za3 = this7;
				var f7;
				if(theta1 >= 0 && theta1 > Math.PI) {
					f7 = theta1;
				} else {
					var a7 = theta1 % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this8 = f7;
				var zb3 = this8;
				var fa3 = za3;
				var fb3 = zb3;
				var theta4 = Math.abs(fa3 - fb3);
				var largest = theta4 > Math.PI;
				var clockwise3 = theta0 < theta1;
				var dif4 = clockwise3 ? theta4 : -theta4;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
				break;
			}
			if(_this.count != 0) {
				var gamma = Math.abs(dif) / 2;
				var h = width_ / 2 / Math.cos(gamma);
				var f8;
				if(theta0 <= Math.PI && theta0 > -Math.PI) {
					f8 = theta0;
				} else {
					var a8 = (theta0 + Math.PI) % (2 * Math.PI);
					f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
				}
				var this9 = f8;
				var start = this9;
				var start2 = start;
				var delta = start2 + dif / 2 + Math.PI;
				_this.jx = _this.ax + h * Math.sin(delta);
				_this.jy = _this.ay + h * Math.cos(delta);
			}
			if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
				var ax = _this.ax;
				var ay = _this.ay;
				var radius = width_ / 2;
				var beta = -_this.angle1 - Math.PI / 2;
				var gamma1 = -_this.angle1 - Math.PI / 2 + Math.PI;
				var temp = [];
				var this10 = _this.triArr;
				var t = [];
				var this11;
				if(t == null) {
					var t1 = [];
					var this12 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
					this11 = this12;
				} else {
					this11 = t;
				}
				var this13 = this11;
				var out = this13;
				var pi = Math.PI;
				var step = pi * 2 / 36;
				var dif5;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f9;
					if(beta >= 0 && beta > Math.PI) {
						f9 = beta;
					} else {
						var a9 = beta % (2 * Math.PI);
						f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
					}
					var this14 = f9;
					var za4 = this14;
					var f10;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f10 = gamma1;
					} else {
						var a10 = gamma1 % (2 * Math.PI);
						f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
					}
					var this15 = f10;
					var zb4 = this15;
					var fa4 = za4;
					var fb4 = zb4;
					var theta5 = Math.abs(fa4 - fb4);
					var clockwise4 = beta < gamma1;
					var dif6 = clockwise4 ? theta5 : -theta5;
					dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
					break;
				case 1:
					var f11;
					if(beta >= 0 && beta > Math.PI) {
						f11 = beta;
					} else {
						var a11 = beta % (2 * Math.PI);
						f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
					}
					var this16 = f11;
					var za5 = this16;
					var f12;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f12 = gamma1;
					} else {
						var a12 = gamma1 % (2 * Math.PI);
						f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
					}
					var this17 = f12;
					var zb5 = this17;
					var fa5 = za5;
					var fb5 = zb5;
					var theta6 = Math.abs(fa5 - fb5);
					var clockwise5 = beta < gamma1;
					var dif7 = clockwise5 ? theta6 : -theta6;
					dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
					break;
				case 2:
					var f13;
					if(beta >= 0 && beta > Math.PI) {
						f13 = beta;
					} else {
						var a13 = beta % (2 * Math.PI);
						f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
					}
					var this18 = f13;
					var za6 = this18;
					var f14;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f14 = gamma1;
					} else {
						var a14 = gamma1 % (2 * Math.PI);
						f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
					}
					var this19 = f14;
					var zb6 = this19;
					var fa6 = za6;
					var fb6 = zb6;
					var theta7 = Math.abs(fa6 - fb6);
					var smallest1 = theta7 <= Math.PI;
					var clockwise6 = beta < gamma1;
					var dif8 = clockwise6 ? theta7 : -theta7;
					dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
					break;
				case 3:
					var f15;
					if(beta >= 0 && beta > Math.PI) {
						f15 = beta;
					} else {
						var a15 = beta % (2 * Math.PI);
						f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
					}
					var this20 = f15;
					var za7 = this20;
					var f16;
					if(gamma1 >= 0 && gamma1 > Math.PI) {
						f16 = gamma1;
					} else {
						var a16 = gamma1 % (2 * Math.PI);
						f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
					}
					var this21 = f16;
					var zb7 = this21;
					var fa7 = za7;
					var fb7 = zb7;
					var theta8 = Math.abs(fa7 - fb7);
					var largest1 = theta8 > Math.PI;
					var clockwise7 = beta < gamma1;
					var dif9 = clockwise7 ? theta8 : -theta8;
					dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
					break;
				}
				var positive = dif5 >= 0;
				var totalSteps = Math.ceil(Math.abs(dif5) / step);
				var step1 = dif5 / totalSteps;
				var angle = beta;
				var cx;
				var cy;
				var bx = 0;
				var by = 0;
				var p2 = temp.length;
				var _g = 0;
				var _g1 = totalSteps + 1;
				while(_g < _g1) {
					var i = _g++;
					cx = ax + radius * Math.sin(angle);
					cy = ay + radius * Math.cos(angle);
					temp[p2++] = cx;
					temp[p2++] = cy;
					if(i != 0) {
						var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
						out[out.length] = t2;
					}
					angle += step1;
					bx = cx;
					by = cy;
				}
				var triArr = out;
				var _g2 = 0;
				while(_g2 < triArr.length) {
					var t3 = triArr[_g2];
					++_g2;
					this10[this10.length] = t3;
				}
				var pA = _this.pointsAnti.length;
				var len = temp.length / 2 | 0;
				var p4 = temp.length / 4 | 0;
				var _g3 = 0;
				var _g11 = p4;
				while(_g3 < _g11) {
					var i1 = _g3++;
					_this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
					_this.pointsAnti[pA++] = temp[len - 2 * i1];
				}
				var pC = _this.pointsClock.length;
				var _g21 = 0;
				var _g31 = p4;
				while(_g21 < _g31) {
					var i2 = _g21++;
					_this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
					_this.pointsClock[pC++] = temp[i2 * 2 + len];
				}
			}
			if(_this.count != 0) {
				_this.addQuads(clockWise,width_);
			}
			_this.quadIndex = _this.triArr.length;
			if(_this.count == 0) {
				_this.penultimateAX = _this.dxPrev;
				_this.penultimateAY = _this.dyPrev;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				_this.penultimateCX = _this.dx;
				_this.penultimateCY = _this.dy;
				_this.lastClockX = _this.exPrev;
				_this.lastClockY = _this.eyPrev;
				var this22 = _this.triArr;
				var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this22[this22.length] = tri;
				var this23 = _this.triArr;
				var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this23[this23.length] = tri1;
			} else {
				if(clockWise && !_this.lastClock) {
					_this.penultimateAX = _this.jx;
					_this.penultimateAY = _this.jy;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.exPrev;
					_this.lastClockY = _this.eyPrev;
					var this24 = _this.triArr;
					var tri2 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this24[this24.length] = tri2;
					var this25 = _this.triArr;
					var tri3 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
					this25[this25.length] = tri3;
				}
				if(clockWise && _this.lastClock) {
					_this.penultimateAX = _this.jx;
					_this.penultimateAY = _this.jy;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.exPrev;
					_this.lastClockY = _this.eyPrev;
					var this26 = _this.triArr;
					var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this26[this26.length] = tri4;
					var this27 = _this.triArr;
					var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
					this27[this27.length] = tri5;
				}
				if(!clockWise && !_this.lastClock) {
					_this.penultimateCX = _this.dx;
					_this.penultimateCY = _this.dy;
					_this.lastClockX = _this.jx;
					_this.lastClockY = _this.jy;
					_this.penultimateAX = _this.dxPrev;
					_this.penultimateAY = _this.dyPrev;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					var this28 = _this.triArr;
					var tri6 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
					this28[this28.length] = tri6;
					var this29 = _this.triArr;
					var tri7 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this29[this29.length] = tri7;
				}
				if(!clockWise && _this.lastClock) {
					_this.penultimateAX = _this.dxPrev;
					_this.penultimateAY = _this.dyPrev;
					_this.lastAntiX = _this.ex;
					_this.lastAntiY = _this.ey;
					_this.penultimateCX = _this.jx;
					_this.penultimateCY = _this.jy;
					_this.lastClockX = _this.dx;
					_this.lastClockY = _this.dy;
					var this30 = _this.triArr;
					var tri8 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
					this30[this30.length] = tri8;
					var this31 = _this.triArr;
					var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
					this31[this31.length] = tri9;
				}
			}
			if(clockWise) {
				var radius1 = width_ / 2;
				var edgePoly = _this.pointsClock;
				var t4 = [];
				var this32;
				if(t4 == null) {
					var t5 = [];
					var this33 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
					this32 = this33;
				} else {
					this32 = t4;
				}
				var this34 = this32;
				var out1 = this34;
				var pi1 = Math.PI;
				var step2 = pi1 * 2 / 36;
				var positive1 = dif >= 0;
				var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
				var step3 = dif / totalSteps1;
				var angle1 = theta0;
				var cx1;
				var cy1;
				var bx1 = 0;
				var by1 = 0;
				var p21 = edgePoly.length;
				var count = 0;
				var _g4 = 0;
				var _g12 = totalSteps1 + 1;
				while(_g4 < _g12) {
					var i3 = _g4++;
					cx1 = ax_ + radius1 * Math.sin(angle1);
					cy1 = ay_ + radius1 * Math.cos(angle1);
					if(i3 != 0) {
						var t6 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
						out1[out1.length] = t6;
						edgePoly[p21++] = cx1;
						edgePoly[p21++] = cy1;
					}
					angle1 += step3;
					bx1 = cx1;
					by1 = cy1;
				}
				var trilateralArray = out1;
				var this35 = _this.triArr;
				var _g5 = 0;
				while(_g5 < trilateralArray.length) {
					var t7 = trilateralArray[_g5];
					++_g5;
					this35[this35.length] = t7;
				}
			} else {
				var radius2 = width_ / 2;
				var edgePoly1 = _this.pointsAnti;
				var t8 = [];
				var this36;
				if(t8 == null) {
					var t9 = [];
					var this37 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this36 = this37;
				} else {
					this36 = t8;
				}
				var this38 = this36;
				var out2 = this38;
				var pi2 = Math.PI;
				var step4 = pi2 * 2 / 36;
				var positive2 = dif >= 0;
				var totalSteps2 = Math.ceil(Math.abs(dif) / step4);
				var step5 = dif / totalSteps2;
				var angle2 = theta0;
				var cx2;
				var cy2;
				var bx2 = 0;
				var by2 = 0;
				var p22 = edgePoly1.length;
				var count1 = 0;
				var _g6 = 0;
				var _g13 = totalSteps2 + 1;
				while(_g6 < _g13) {
					var i4 = _g6++;
					cx2 = ax_ + radius2 * Math.sin(angle2);
					cy2 = ay_ + radius2 * Math.cos(angle2);
					if(i4 != 0) {
						var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
						out2[out2.length] = t10;
						edgePoly1[p22++] = cx2;
						edgePoly1[p22++] = cy2;
					}
					angle2 += step5;
					bx2 = cx2;
					by2 = cy2;
				}
				var trilateralArray1 = out2;
				var this39 = _this.triArr;
				var _g7 = 0;
				while(_g7 < trilateralArray1.length) {
					var t11 = trilateralArray1[_g7];
					++_g7;
					this39[this39.length] = t11;
				}
			}
			_this.kax = _this.dxPrev;
			_this.kay = _this.dyPrev;
			_this.kbx = _this.dx;
			_this.kby = _this.dy;
			_this.ncx = _this.exPrev;
			_this.ncy = _this.eyPrev;
			_this.kcx = _this.ex;
			_this.kcy = _this.ey;
			if(_this.count != 0) {
				if(clockWise) {
					var this40 = _this.triArr;
					var tri10 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxOld,_this.dyOld,_this.jx,_this.jy,0);
					this40[this40.length] = tri10;
					var this41 = _this.triArr;
					var tri11 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
					this41[this41.length] = tri11;
				} else {
					var this42 = _this.triArr;
					var tri12 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exOld,_this.eyOld,_this.jx,_this.jy,0);
					this42[this42.length] = tri12;
					var this43 = _this.triArr;
					var tri13 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
					this43[this43.length] = tri13;
				}
			}
			_this.jxOld = _this.jx;
			_this.jyOld = _this.jy;
			_this.lastClock = clockWise;
			_this.count++;
			var l = path.points.length;
			var p = path.points[l - 1];
			var l2 = p.length;
			p[l2] = 200;
			p[l2 + 1] = 50;
			var d = path.dim[path.dim.length - 1];
			if(200 < d.minX) {
				d.minX = 200;
			}
			if(200 > d.maxX) {
				d.maxX = 200;
			}
			if(50 < d.minY) {
				d.minY = 50;
			}
			if(50 > d.maxY) {
				d.maxY = 50;
			}
			path.x = 200;
			path.y = 50;
		}
		var repeat1 = path.x == 450 && path.y == 700;
		if(!repeat1) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,450,700);
			}
			var _this1 = path.contour;
			var ax_1 = path.x;
			var ay_1 = path.y;
			var width_1 = path.width;
			var oldAngle1 = _this1.dx != null ? _this1.angle1 : null;
			_this1.halfA = Math.PI / 2;
			_this1.ax = 450;
			_this1.ay = 700;
			_this1.bx = ax_1;
			_this1.by = ay_1;
			_this1.beta = Math.PI / 2 - _this1.halfA;
			_this1.r = width_1 / 2 * Math.cos(_this1.beta);
			_this1.theta = Math.atan2(_this1.ay - _this1.by,_this1.ax - _this1.bx);
			if(_this1.theta > 0) {
				if(_this1.halfA < 0) {
					_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
					_this1.angle1 = _this1.theta - _this1.halfA;
				} else {
					_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
					_this1.angle2 = _this1.theta + _this1.halfA;
				}
			} else if(_this1.halfA > 0) {
				_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
				_this1.angle2 = _this1.theta + _this1.halfA;
			} else {
				_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
				_this1.angle1 = _this1.theta - _this1.halfA;
			}
			if(_this1.dxPrev != null) {
				_this1.dxOld = _this1.dxPrev;
			}
			if(_this1.dyPrev != null) {
				_this1.dyOld = _this1.dyPrev;
			}
			if(_this1.exPrev != null) {
				_this1.exOld = _this1.exPrev;
			}
			if(_this1.eyPrev != null) {
				_this1.eyOld = _this1.eyPrev;
			}
			if(_this1.dx != null) {
				_this1.dxPrev = _this1.dx;
			}
			if(_this1.dy != null) {
				_this1.dyPrev = _this1.dy;
			}
			if(_this1.ex != null) {
				_this1.exPrev = _this1.ex;
			}
			if(_this1.ey != null) {
				_this1.eyPrev = _this1.ey;
			}
			_this1.dx = _this1.bx + _this1.r * Math.cos(_this1.angle1);
			_this1.dy = _this1.by + _this1.r * Math.sin(_this1.angle1);
			_this1.ex = _this1.bx + _this1.r * Math.cos(_this1.angle2);
			_this1.ey = _this1.by + _this1.r * Math.sin(_this1.angle2);
			_this1.ax = ax_1;
			_this1.ay = ay_1;
			_this1.bx = 450;
			_this1.by = 700;
			_this1.theta = Math.atan2(_this1.ay - _this1.by,_this1.ax - _this1.bx);
			if(_this1.theta > 0) {
				if(_this1.halfA < 0) {
					_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
					_this1.angle1 = _this1.theta - _this1.halfA;
				} else {
					_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
					_this1.angle2 = _this1.theta + _this1.halfA;
				}
			} else if(_this1.halfA > 0) {
				_this1.angle1 = _this1.theta + _this1.halfA - Math.PI;
				_this1.angle2 = _this1.theta + _this1.halfA;
			} else {
				_this1.angle2 = _this1.theta + _this1.halfA + Math.PI / 2;
				_this1.angle1 = _this1.theta - _this1.halfA;
			}
			if(_this1.dxPrev != null) {
				_this1.dxOld = _this1.dxPrev;
			}
			if(_this1.dyPrev != null) {
				_this1.dyOld = _this1.dyPrev;
			}
			if(_this1.exPrev != null) {
				_this1.exOld = _this1.exPrev;
			}
			if(_this1.eyPrev != null) {
				_this1.eyOld = _this1.eyPrev;
			}
			if(_this1.dx != null) {
				_this1.dxPrev = _this1.dx;
			}
			if(_this1.dy != null) {
				_this1.dyPrev = _this1.dy;
			}
			if(_this1.ex != null) {
				_this1.exPrev = _this1.ex;
			}
			if(_this1.ey != null) {
				_this1.eyPrev = _this1.ey;
			}
			_this1.dx = _this1.bx + _this1.r * Math.cos(_this1.angle1);
			_this1.dy = _this1.by + _this1.r * Math.sin(_this1.angle1);
			_this1.ex = _this1.bx + _this1.r * Math.cos(_this1.angle2);
			_this1.ey = _this1.by + _this1.r * Math.sin(_this1.angle2);
			var x2 = _this1.dxOld - 450;
			var y2 = _this1.dyOld - 700;
			var x3 = _this1.exOld - 450;
			var y3 = _this1.eyOld - 700;
			var clockWise1 = x2 * x2 + y2 * y2 > x3 * x3 + y3 * y3;
			var theta01;
			var theta11;
			if(clockWise1) {
				theta01 = -Math.atan2(_this1.ay - _this1.dyOld,_this1.ax - _this1.dxOld) - Math.PI / 2;
				theta11 = -Math.atan2(_this1.ay - _this1.eyPrev,_this1.ax - _this1.exPrev) - Math.PI / 2;
			} else {
				theta01 = -Math.atan2(_this1.ay - _this1.eyOld,_this1.ax - _this1.exOld) - Math.PI / 2;
				theta11 = -Math.atan2(_this1.ay - _this1.dyPrev,_this1.ax - _this1.dxPrev) - Math.PI / 2;
			}
			var dif10;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f17;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f17 = theta01;
				} else {
					var a17 = theta01 % (2 * Math.PI);
					f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
				}
				var this44 = f17;
				var za8 = this44;
				var f18;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f18 = theta11;
				} else {
					var a18 = theta11 % (2 * Math.PI);
					f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
				}
				var this45 = f18;
				var zb8 = this45;
				var fa8 = za8;
				var fb8 = zb8;
				var theta9 = Math.abs(fa8 - fb8);
				var clockwise8 = theta01 < theta11;
				var dif11 = clockwise8 ? theta9 : -theta9;
				dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
				break;
			case 1:
				var f19;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f19 = theta01;
				} else {
					var a19 = theta01 % (2 * Math.PI);
					f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
				}
				var this46 = f19;
				var za9 = this46;
				var f20;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f20 = theta11;
				} else {
					var a20 = theta11 % (2 * Math.PI);
					f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
				}
				var this47 = f20;
				var zb9 = this47;
				var fa9 = za9;
				var fb9 = zb9;
				var theta10 = Math.abs(fa9 - fb9);
				var clockwise9 = theta01 < theta11;
				var dif12 = clockwise9 ? theta10 : -theta10;
				dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
				break;
			case 2:
				var f21;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f21 = theta01;
				} else {
					var a21 = theta01 % (2 * Math.PI);
					f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
				}
				var this48 = f21;
				var za10 = this48;
				var f22;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f22 = theta11;
				} else {
					var a22 = theta11 % (2 * Math.PI);
					f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
				}
				var this49 = f22;
				var zb10 = this49;
				var fa10 = za10;
				var fb10 = zb10;
				var theta12 = Math.abs(fa10 - fb10);
				var smallest2 = theta12 <= Math.PI;
				var clockwise10 = theta01 < theta11;
				var dif13 = clockwise10 ? theta12 : -theta12;
				dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta12) : 2 * Math.PI - theta12;
				break;
			case 3:
				var f23;
				if(theta01 >= 0 && theta01 > Math.PI) {
					f23 = theta01;
				} else {
					var a23 = theta01 % (2 * Math.PI);
					f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
				}
				var this50 = f23;
				var za11 = this50;
				var f24;
				if(theta11 >= 0 && theta11 > Math.PI) {
					f24 = theta11;
				} else {
					var a24 = theta11 % (2 * Math.PI);
					f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
				}
				var this51 = f24;
				var zb11 = this51;
				var fa11 = za11;
				var fb11 = zb11;
				var theta13 = Math.abs(fa11 - fb11);
				var largest2 = theta13 > Math.PI;
				var clockwise11 = theta01 < theta11;
				var dif14 = clockwise11 ? theta13 : -theta13;
				dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta13) : 2 * Math.PI - theta13;
				break;
			}
			if(_this1.count != 0) {
				var gamma2 = Math.abs(dif10) / 2;
				var h1 = width_1 / 2 / Math.cos(gamma2);
				var f25;
				if(theta01 <= Math.PI && theta01 > -Math.PI) {
					f25 = theta01;
				} else {
					var a25 = (theta01 + Math.PI) % (2 * Math.PI);
					f25 = a25 >= 0 ? a25 - Math.PI : a25 + Math.PI;
				}
				var this52 = f25;
				var start1 = this52;
				var start21 = start1;
				var delta1 = start21 + dif10 / 2 + Math.PI;
				_this1.jx = _this1.ax + h1 * Math.sin(delta1);
				_this1.jy = _this1.ay + h1 * Math.cos(delta1);
			}
			if(_this1.count == 0 && (_this1.endLine == 1 || _this1.endLine == 3)) {
				var ax1 = _this1.ax;
				var ay1 = _this1.ay;
				var radius3 = width_1 / 2;
				var beta1 = -_this1.angle1 - Math.PI / 2;
				var gamma3 = -_this1.angle1 - Math.PI / 2 + Math.PI;
				var temp1 = [];
				var this53 = _this1.triArr;
				var t12 = [];
				var this54;
				if(t12 == null) {
					var t13 = [];
					var this55 = t13 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t13;
					this54 = this55;
				} else {
					this54 = t12;
				}
				var this56 = this54;
				var out3 = this56;
				var pi3 = Math.PI;
				var step6 = pi3 * 2 / 36;
				var dif15;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f26;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f26 = beta1;
					} else {
						var a26 = beta1 % (2 * Math.PI);
						f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
					}
					var this57 = f26;
					var za12 = this57;
					var f27;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f27 = gamma3;
					} else {
						var a27 = gamma3 % (2 * Math.PI);
						f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
					}
					var this58 = f27;
					var zb12 = this58;
					var fa12 = za12;
					var fb12 = zb12;
					var theta14 = Math.abs(fa12 - fb12);
					var clockwise12 = beta1 < gamma3;
					var dif16 = clockwise12 ? theta14 : -theta14;
					dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
					break;
				case 1:
					var f28;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f28 = beta1;
					} else {
						var a28 = beta1 % (2 * Math.PI);
						f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
					}
					var this59 = f28;
					var za13 = this59;
					var f29;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f29 = gamma3;
					} else {
						var a29 = gamma3 % (2 * Math.PI);
						f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
					}
					var this60 = f29;
					var zb13 = this60;
					var fa13 = za13;
					var fb13 = zb13;
					var theta15 = Math.abs(fa13 - fb13);
					var clockwise13 = beta1 < gamma3;
					var dif17 = clockwise13 ? theta15 : -theta15;
					dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
					break;
				case 2:
					var f30;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f30 = beta1;
					} else {
						var a30 = beta1 % (2 * Math.PI);
						f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
					}
					var this61 = f30;
					var za14 = this61;
					var f31;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f31 = gamma3;
					} else {
						var a31 = gamma3 % (2 * Math.PI);
						f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
					}
					var this62 = f31;
					var zb14 = this62;
					var fa14 = za14;
					var fb14 = zb14;
					var theta16 = Math.abs(fa14 - fb14);
					var smallest3 = theta16 <= Math.PI;
					var clockwise14 = beta1 < gamma3;
					var dif18 = clockwise14 ? theta16 : -theta16;
					dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta16) : 2 * Math.PI - theta16;
					break;
				case 3:
					var f32;
					if(beta1 >= 0 && beta1 > Math.PI) {
						f32 = beta1;
					} else {
						var a32 = beta1 % (2 * Math.PI);
						f32 = a32 >= 0 ? a32 : a32 + 2 * Math.PI;
					}
					var this63 = f32;
					var za15 = this63;
					var f33;
					if(gamma3 >= 0 && gamma3 > Math.PI) {
						f33 = gamma3;
					} else {
						var a33 = gamma3 % (2 * Math.PI);
						f33 = a33 >= 0 ? a33 : a33 + 2 * Math.PI;
					}
					var this64 = f33;
					var zb15 = this64;
					var fa15 = za15;
					var fb15 = zb15;
					var theta17 = Math.abs(fa15 - fb15);
					var largest3 = theta17 > Math.PI;
					var clockwise15 = beta1 < gamma3;
					var dif19 = clockwise15 ? theta17 : -theta17;
					dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta17) : 2 * Math.PI - theta17;
					break;
				}
				var positive3 = dif15 >= 0;
				var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
				var step7 = dif15 / totalSteps3;
				var angle3 = beta1;
				var cx3;
				var cy3;
				var bx3 = 0;
				var by3 = 0;
				var p23 = temp1.length;
				var _g8 = 0;
				var _g14 = totalSteps3 + 1;
				while(_g8 < _g14) {
					var i5 = _g8++;
					cx3 = ax1 + radius3 * Math.sin(angle3);
					cy3 = ay1 + radius3 * Math.cos(angle3);
					temp1[p23++] = cx3;
					temp1[p23++] = cy3;
					if(i5 != 0) {
						var t14 = new trilateral_tri_Trilateral(ax1,ay1,bx3,by3,cx3,cy3);
						out3[out3.length] = t14;
					}
					angle3 += step7;
					bx3 = cx3;
					by3 = cy3;
				}
				var triArr1 = out3;
				var _g9 = 0;
				while(_g9 < triArr1.length) {
					var t15 = triArr1[_g9];
					++_g9;
					this53[this53.length] = t15;
				}
				var pA1 = _this1.pointsAnti.length;
				var len1 = temp1.length / 2 | 0;
				var p41 = temp1.length / 4 | 0;
				var _g10 = 0;
				var _g15 = p41;
				while(_g10 < _g15) {
					var i6 = _g10++;
					_this1.pointsAnti[pA1++] = temp1[len1 - 2 * i6 + 1];
					_this1.pointsAnti[pA1++] = temp1[len1 - 2 * i6];
				}
				var pC1 = _this1.pointsClock.length;
				var _g22 = 0;
				var _g32 = p41;
				while(_g22 < _g32) {
					var i7 = _g22++;
					_this1.pointsClock[pC1++] = temp1[i7 * 2 + len1 + 1];
					_this1.pointsClock[pC1++] = temp1[i7 * 2 + len1];
				}
			}
			if(_this1.count != 0) {
				_this1.addQuads(clockWise1,width_1);
			}
			_this1.quadIndex = _this1.triArr.length;
			if(_this1.count == 0) {
				_this1.penultimateAX = _this1.dxPrev;
				_this1.penultimateAY = _this1.dyPrev;
				_this1.lastAntiX = _this1.ex;
				_this1.lastAntiY = _this1.ey;
				_this1.penultimateCX = _this1.dx;
				_this1.penultimateCY = _this1.dy;
				_this1.lastClockX = _this1.exPrev;
				_this1.lastClockY = _this1.eyPrev;
				var this65 = _this1.triArr;
				var tri14 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
				this65[this65.length] = tri14;
				var this66 = _this1.triArr;
				var tri15 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
				this66[this66.length] = tri15;
			} else {
				if(clockWise1 && !_this1.lastClock) {
					_this1.penultimateAX = _this1.jx;
					_this1.penultimateAY = _this1.jy;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.exPrev;
					_this1.lastClockY = _this1.eyPrev;
					var this67 = _this1.triArr;
					var tri16 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this67[this67.length] = tri16;
					var this68 = _this1.triArr;
					var tri17 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
					this68[this68.length] = tri17;
				}
				if(clockWise1 && _this1.lastClock) {
					_this1.penultimateAX = _this1.jx;
					_this1.penultimateAY = _this1.jy;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.exPrev;
					_this1.lastClockY = _this1.eyPrev;
					var this69 = _this1.triArr;
					var tri18 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this69[this69.length] = tri18;
					var this70 = _this1.triArr;
					var tri19 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.exPrev,_this1.eyPrev,0);
					this70[this70.length] = tri19;
				}
				if(!clockWise1 && !_this1.lastClock) {
					_this1.penultimateCX = _this1.dx;
					_this1.penultimateCY = _this1.dy;
					_this1.lastClockX = _this1.jx;
					_this1.lastClockY = _this1.jy;
					_this1.penultimateAX = _this1.dxPrev;
					_this1.penultimateAY = _this1.dyPrev;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					var this71 = _this1.triArr;
					var tri20 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.jx,_this1.jy,0);
					this71[this71.length] = tri20;
					var this72 = _this1.triArr;
					var tri21 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this72[this72.length] = tri21;
				}
				if(!clockWise1 && _this1.lastClock) {
					_this1.penultimateAX = _this1.dxPrev;
					_this1.penultimateAY = _this1.dyPrev;
					_this1.lastAntiX = _this1.ex;
					_this1.lastAntiY = _this1.ey;
					_this1.penultimateCX = _this1.jx;
					_this1.penultimateCY = _this1.jy;
					_this1.lastClockX = _this1.dx;
					_this1.lastClockY = _this1.dy;
					var this73 = _this1.triArr;
					var tri22 = new trilateral_tri_Trilateral(_this1.jx,_this1.jy,_this1.dx,_this1.dy,_this1.ex,_this1.ey,0);
					this73[this73.length] = tri22;
					var this74 = _this1.triArr;
					var tri23 = new trilateral_tri_Trilateral(_this1.dxPrev,_this1.dyPrev,_this1.jx,_this1.jy,_this1.ex,_this1.ey,0);
					this74[this74.length] = tri23;
				}
			}
			if(clockWise1) {
				var radius4 = width_1 / 2;
				var edgePoly2 = _this1.pointsClock;
				var t16 = [];
				var this75;
				if(t16 == null) {
					var t17 = [];
					var this76 = t17 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t17;
					this75 = this76;
				} else {
					this75 = t16;
				}
				var this77 = this75;
				var out4 = this77;
				var pi4 = Math.PI;
				var step8 = pi4 * 2 / 36;
				var positive4 = dif10 >= 0;
				var totalSteps4 = Math.ceil(Math.abs(dif10) / step8);
				var step9 = dif10 / totalSteps4;
				var angle4 = theta01;
				var cx4;
				var cy4;
				var bx4 = 0;
				var by4 = 0;
				var p24 = edgePoly2.length;
				var count2 = 0;
				var _g16 = 0;
				var _g17 = totalSteps4 + 1;
				while(_g16 < _g17) {
					var i8 = _g16++;
					cx4 = ax_1 + radius4 * Math.sin(angle4);
					cy4 = ay_1 + radius4 * Math.cos(angle4);
					if(i8 != 0) {
						var t18 = new trilateral_tri_Trilateral(ax_1,ay_1,bx4,by4,cx4,cy4);
						out4[out4.length] = t18;
						edgePoly2[p24++] = cx4;
						edgePoly2[p24++] = cy4;
					}
					angle4 += step9;
					bx4 = cx4;
					by4 = cy4;
				}
				var trilateralArray2 = out4;
				var this78 = _this1.triArr;
				var _g18 = 0;
				while(_g18 < trilateralArray2.length) {
					var t19 = trilateralArray2[_g18];
					++_g18;
					this78[this78.length] = t19;
				}
			} else {
				var radius5 = width_1 / 2;
				var edgePoly3 = _this1.pointsAnti;
				var t20 = [];
				var this79;
				if(t20 == null) {
					var t21 = [];
					var this80 = t21 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t21;
					this79 = this80;
				} else {
					this79 = t20;
				}
				var this81 = this79;
				var out5 = this81;
				var pi5 = Math.PI;
				var step10 = pi5 * 2 / 36;
				var positive5 = dif10 >= 0;
				var totalSteps5 = Math.ceil(Math.abs(dif10) / step10);
				var step11 = dif10 / totalSteps5;
				var angle5 = theta01;
				var cx5;
				var cy5;
				var bx5 = 0;
				var by5 = 0;
				var p25 = edgePoly3.length;
				var count3 = 0;
				var _g19 = 0;
				var _g110 = totalSteps5 + 1;
				while(_g19 < _g110) {
					var i9 = _g19++;
					cx5 = ax_1 + radius5 * Math.sin(angle5);
					cy5 = ay_1 + radius5 * Math.cos(angle5);
					if(i9 != 0) {
						var t22 = new trilateral_tri_Trilateral(ax_1,ay_1,bx5,by5,cx5,cy5);
						out5[out5.length] = t22;
						edgePoly3[p25++] = cx5;
						edgePoly3[p25++] = cy5;
					}
					angle5 += step11;
					bx5 = cx5;
					by5 = cy5;
				}
				var trilateralArray3 = out5;
				var this82 = _this1.triArr;
				var _g20 = 0;
				while(_g20 < trilateralArray3.length) {
					var t23 = trilateralArray3[_g20];
					++_g20;
					this82[this82.length] = t23;
				}
			}
			_this1.kax = _this1.dxPrev;
			_this1.kay = _this1.dyPrev;
			_this1.kbx = _this1.dx;
			_this1.kby = _this1.dy;
			_this1.ncx = _this1.exPrev;
			_this1.ncy = _this1.eyPrev;
			_this1.kcx = _this1.ex;
			_this1.kcy = _this1.ey;
			if(_this1.count != 0) {
				if(clockWise1) {
					var this83 = _this1.triArr;
					var tri24 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.dxOld,_this1.dyOld,_this1.jx,_this1.jy,0);
					this83[this83.length] = tri24;
					var this84 = _this1.triArr;
					var tri25 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.exPrev,_this1.eyPrev,_this1.jx,_this1.jy,0);
					this84[this84.length] = tri25;
				} else {
					var this85 = _this1.triArr;
					var tri26 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.exOld,_this1.eyOld,_this1.jx,_this1.jy,0);
					this85[this85.length] = tri26;
					var this86 = _this1.triArr;
					var tri27 = new trilateral_tri_Trilateral(_this1.ax,_this1.ay,_this1.dxPrev,_this1.dyPrev,_this1.jx,_this1.jy,0);
					this86[this86.length] = tri27;
				}
			}
			_this1.jxOld = _this1.jx;
			_this1.jyOld = _this1.jy;
			_this1.lastClock = clockWise1;
			_this1.count++;
			var l1 = path.points.length;
			var p1 = path.points[l1 - 1];
			var l21 = p1.length;
			p1[l21] = 450;
			p1[l21 + 1] = 700;
			var d1 = path.dim[path.dim.length - 1];
			if(450 < d1.minX) {
				d1.minX = 450;
			}
			if(450 > d1.maxX) {
				d1.maxX = 450;
			}
			if(700 < d1.minY) {
				d1.minY = 700;
			}
			if(700 > d1.maxY) {
				d1.maxY = 700;
			}
			path.x = 450;
			path.y = 700;
		}
		var repeat2 = path.x == 450 && path.y == 750;
		if(!repeat2) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,450,750);
			}
			var _this2 = path.contour;
			var ax_2 = path.x;
			var ay_2 = path.y;
			var width_2 = path.width;
			var oldAngle2 = _this2.dx != null ? _this2.angle1 : null;
			_this2.halfA = Math.PI / 2;
			_this2.ax = 450;
			_this2.ay = 750;
			_this2.bx = ax_2;
			_this2.by = ay_2;
			_this2.beta = Math.PI / 2 - _this2.halfA;
			_this2.r = width_2 / 2 * Math.cos(_this2.beta);
			_this2.theta = Math.atan2(_this2.ay - _this2.by,_this2.ax - _this2.bx);
			if(_this2.theta > 0) {
				if(_this2.halfA < 0) {
					_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
					_this2.angle1 = _this2.theta - _this2.halfA;
				} else {
					_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
					_this2.angle2 = _this2.theta + _this2.halfA;
				}
			} else if(_this2.halfA > 0) {
				_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
				_this2.angle2 = _this2.theta + _this2.halfA;
			} else {
				_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
				_this2.angle1 = _this2.theta - _this2.halfA;
			}
			if(_this2.dxPrev != null) {
				_this2.dxOld = _this2.dxPrev;
			}
			if(_this2.dyPrev != null) {
				_this2.dyOld = _this2.dyPrev;
			}
			if(_this2.exPrev != null) {
				_this2.exOld = _this2.exPrev;
			}
			if(_this2.eyPrev != null) {
				_this2.eyOld = _this2.eyPrev;
			}
			if(_this2.dx != null) {
				_this2.dxPrev = _this2.dx;
			}
			if(_this2.dy != null) {
				_this2.dyPrev = _this2.dy;
			}
			if(_this2.ex != null) {
				_this2.exPrev = _this2.ex;
			}
			if(_this2.ey != null) {
				_this2.eyPrev = _this2.ey;
			}
			_this2.dx = _this2.bx + _this2.r * Math.cos(_this2.angle1);
			_this2.dy = _this2.by + _this2.r * Math.sin(_this2.angle1);
			_this2.ex = _this2.bx + _this2.r * Math.cos(_this2.angle2);
			_this2.ey = _this2.by + _this2.r * Math.sin(_this2.angle2);
			_this2.ax = ax_2;
			_this2.ay = ay_2;
			_this2.bx = 450;
			_this2.by = 750;
			_this2.theta = Math.atan2(_this2.ay - _this2.by,_this2.ax - _this2.bx);
			if(_this2.theta > 0) {
				if(_this2.halfA < 0) {
					_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
					_this2.angle1 = _this2.theta - _this2.halfA;
				} else {
					_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
					_this2.angle2 = _this2.theta + _this2.halfA;
				}
			} else if(_this2.halfA > 0) {
				_this2.angle1 = _this2.theta + _this2.halfA - Math.PI;
				_this2.angle2 = _this2.theta + _this2.halfA;
			} else {
				_this2.angle2 = _this2.theta + _this2.halfA + Math.PI / 2;
				_this2.angle1 = _this2.theta - _this2.halfA;
			}
			if(_this2.dxPrev != null) {
				_this2.dxOld = _this2.dxPrev;
			}
			if(_this2.dyPrev != null) {
				_this2.dyOld = _this2.dyPrev;
			}
			if(_this2.exPrev != null) {
				_this2.exOld = _this2.exPrev;
			}
			if(_this2.eyPrev != null) {
				_this2.eyOld = _this2.eyPrev;
			}
			if(_this2.dx != null) {
				_this2.dxPrev = _this2.dx;
			}
			if(_this2.dy != null) {
				_this2.dyPrev = _this2.dy;
			}
			if(_this2.ex != null) {
				_this2.exPrev = _this2.ex;
			}
			if(_this2.ey != null) {
				_this2.eyPrev = _this2.ey;
			}
			_this2.dx = _this2.bx + _this2.r * Math.cos(_this2.angle1);
			_this2.dy = _this2.by + _this2.r * Math.sin(_this2.angle1);
			_this2.ex = _this2.bx + _this2.r * Math.cos(_this2.angle2);
			_this2.ey = _this2.by + _this2.r * Math.sin(_this2.angle2);
			var x4 = _this2.dxOld - 450;
			var y4 = _this2.dyOld - 750;
			var x5 = _this2.exOld - 450;
			var y5 = _this2.eyOld - 750;
			var clockWise2 = x4 * x4 + y4 * y4 > x5 * x5 + y5 * y5;
			var theta02;
			var theta18;
			if(clockWise2) {
				theta02 = -Math.atan2(_this2.ay - _this2.dyOld,_this2.ax - _this2.dxOld) - Math.PI / 2;
				theta18 = -Math.atan2(_this2.ay - _this2.eyPrev,_this2.ax - _this2.exPrev) - Math.PI / 2;
			} else {
				theta02 = -Math.atan2(_this2.ay - _this2.eyOld,_this2.ax - _this2.exOld) - Math.PI / 2;
				theta18 = -Math.atan2(_this2.ay - _this2.dyPrev,_this2.ax - _this2.dxPrev) - Math.PI / 2;
			}
			var dif20;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f34;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f34 = theta02;
				} else {
					var a34 = theta02 % (2 * Math.PI);
					f34 = a34 >= 0 ? a34 : a34 + 2 * Math.PI;
				}
				var this87 = f34;
				var za16 = this87;
				var f35;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f35 = theta18;
				} else {
					var a35 = theta18 % (2 * Math.PI);
					f35 = a35 >= 0 ? a35 : a35 + 2 * Math.PI;
				}
				var this88 = f35;
				var zb16 = this88;
				var fa16 = za16;
				var fb16 = zb16;
				var theta19 = Math.abs(fa16 - fb16);
				var clockwise16 = theta02 < theta18;
				var dif21 = clockwise16 ? theta19 : -theta19;
				dif20 = dif21 > 0 ? dif21 : 2 * Math.PI + dif21;
				break;
			case 1:
				var f36;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f36 = theta02;
				} else {
					var a36 = theta02 % (2 * Math.PI);
					f36 = a36 >= 0 ? a36 : a36 + 2 * Math.PI;
				}
				var this89 = f36;
				var za17 = this89;
				var f37;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f37 = theta18;
				} else {
					var a37 = theta18 % (2 * Math.PI);
					f37 = a37 >= 0 ? a37 : a37 + 2 * Math.PI;
				}
				var this90 = f37;
				var zb17 = this90;
				var fa17 = za17;
				var fb17 = zb17;
				var theta20 = Math.abs(fa17 - fb17);
				var clockwise17 = theta02 < theta18;
				var dif22 = clockwise17 ? theta20 : -theta20;
				dif20 = dif22 < 0 ? dif22 : -2 * Math.PI + dif22;
				break;
			case 2:
				var f38;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f38 = theta02;
				} else {
					var a38 = theta02 % (2 * Math.PI);
					f38 = a38 >= 0 ? a38 : a38 + 2 * Math.PI;
				}
				var this91 = f38;
				var za18 = this91;
				var f39;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f39 = theta18;
				} else {
					var a39 = theta18 % (2 * Math.PI);
					f39 = a39 >= 0 ? a39 : a39 + 2 * Math.PI;
				}
				var this92 = f39;
				var zb18 = this92;
				var fa18 = za18;
				var fb18 = zb18;
				var theta21 = Math.abs(fa18 - fb18);
				var smallest4 = theta21 <= Math.PI;
				var clockwise18 = theta02 < theta18;
				var dif23 = clockwise18 ? theta21 : -theta21;
				dif20 = smallest4 ? dif23 : clockwise18 ? -(2 * Math.PI - theta21) : 2 * Math.PI - theta21;
				break;
			case 3:
				var f40;
				if(theta02 >= 0 && theta02 > Math.PI) {
					f40 = theta02;
				} else {
					var a40 = theta02 % (2 * Math.PI);
					f40 = a40 >= 0 ? a40 : a40 + 2 * Math.PI;
				}
				var this93 = f40;
				var za19 = this93;
				var f41;
				if(theta18 >= 0 && theta18 > Math.PI) {
					f41 = theta18;
				} else {
					var a41 = theta18 % (2 * Math.PI);
					f41 = a41 >= 0 ? a41 : a41 + 2 * Math.PI;
				}
				var this94 = f41;
				var zb19 = this94;
				var fa19 = za19;
				var fb19 = zb19;
				var theta22 = Math.abs(fa19 - fb19);
				var largest4 = theta22 > Math.PI;
				var clockwise19 = theta02 < theta18;
				var dif24 = clockwise19 ? theta22 : -theta22;
				dif20 = largest4 ? dif24 : clockwise19 ? -(2 * Math.PI - theta22) : 2 * Math.PI - theta22;
				break;
			}
			if(_this2.count != 0) {
				var gamma4 = Math.abs(dif20) / 2;
				var h2 = width_2 / 2 / Math.cos(gamma4);
				var f42;
				if(theta02 <= Math.PI && theta02 > -Math.PI) {
					f42 = theta02;
				} else {
					var a42 = (theta02 + Math.PI) % (2 * Math.PI);
					f42 = a42 >= 0 ? a42 - Math.PI : a42 + Math.PI;
				}
				var this95 = f42;
				var start3 = this95;
				var start22 = start3;
				var delta2 = start22 + dif20 / 2 + Math.PI;
				_this2.jx = _this2.ax + h2 * Math.sin(delta2);
				_this2.jy = _this2.ay + h2 * Math.cos(delta2);
			}
			if(_this2.count == 0 && (_this2.endLine == 1 || _this2.endLine == 3)) {
				var ax2 = _this2.ax;
				var ay2 = _this2.ay;
				var radius6 = width_2 / 2;
				var beta2 = -_this2.angle1 - Math.PI / 2;
				var gamma5 = -_this2.angle1 - Math.PI / 2 + Math.PI;
				var temp2 = [];
				var this96 = _this2.triArr;
				var t24 = [];
				var this97;
				if(t24 == null) {
					var t25 = [];
					var this98 = t25 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t25;
					this97 = this98;
				} else {
					this97 = t24;
				}
				var this99 = this97;
				var out6 = this99;
				var pi6 = Math.PI;
				var step12 = pi6 * 2 / 36;
				var dif25;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f43;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f43 = beta2;
					} else {
						var a43 = beta2 % (2 * Math.PI);
						f43 = a43 >= 0 ? a43 : a43 + 2 * Math.PI;
					}
					var this100 = f43;
					var za20 = this100;
					var f44;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f44 = gamma5;
					} else {
						var a44 = gamma5 % (2 * Math.PI);
						f44 = a44 >= 0 ? a44 : a44 + 2 * Math.PI;
					}
					var this101 = f44;
					var zb20 = this101;
					var fa20 = za20;
					var fb20 = zb20;
					var theta23 = Math.abs(fa20 - fb20);
					var clockwise20 = beta2 < gamma5;
					var dif26 = clockwise20 ? theta23 : -theta23;
					dif25 = dif26 > 0 ? dif26 : 2 * Math.PI + dif26;
					break;
				case 1:
					var f45;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f45 = beta2;
					} else {
						var a45 = beta2 % (2 * Math.PI);
						f45 = a45 >= 0 ? a45 : a45 + 2 * Math.PI;
					}
					var this102 = f45;
					var za21 = this102;
					var f46;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f46 = gamma5;
					} else {
						var a46 = gamma5 % (2 * Math.PI);
						f46 = a46 >= 0 ? a46 : a46 + 2 * Math.PI;
					}
					var this103 = f46;
					var zb21 = this103;
					var fa21 = za21;
					var fb21 = zb21;
					var theta24 = Math.abs(fa21 - fb21);
					var clockwise21 = beta2 < gamma5;
					var dif27 = clockwise21 ? theta24 : -theta24;
					dif25 = dif27 < 0 ? dif27 : -2 * Math.PI + dif27;
					break;
				case 2:
					var f47;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f47 = beta2;
					} else {
						var a47 = beta2 % (2 * Math.PI);
						f47 = a47 >= 0 ? a47 : a47 + 2 * Math.PI;
					}
					var this104 = f47;
					var za22 = this104;
					var f48;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f48 = gamma5;
					} else {
						var a48 = gamma5 % (2 * Math.PI);
						f48 = a48 >= 0 ? a48 : a48 + 2 * Math.PI;
					}
					var this105 = f48;
					var zb22 = this105;
					var fa22 = za22;
					var fb22 = zb22;
					var theta25 = Math.abs(fa22 - fb22);
					var smallest5 = theta25 <= Math.PI;
					var clockwise22 = beta2 < gamma5;
					var dif28 = clockwise22 ? theta25 : -theta25;
					dif25 = smallest5 ? dif28 : clockwise22 ? -(2 * Math.PI - theta25) : 2 * Math.PI - theta25;
					break;
				case 3:
					var f49;
					if(beta2 >= 0 && beta2 > Math.PI) {
						f49 = beta2;
					} else {
						var a49 = beta2 % (2 * Math.PI);
						f49 = a49 >= 0 ? a49 : a49 + 2 * Math.PI;
					}
					var this106 = f49;
					var za23 = this106;
					var f50;
					if(gamma5 >= 0 && gamma5 > Math.PI) {
						f50 = gamma5;
					} else {
						var a50 = gamma5 % (2 * Math.PI);
						f50 = a50 >= 0 ? a50 : a50 + 2 * Math.PI;
					}
					var this107 = f50;
					var zb23 = this107;
					var fa23 = za23;
					var fb23 = zb23;
					var theta26 = Math.abs(fa23 - fb23);
					var largest5 = theta26 > Math.PI;
					var clockwise23 = beta2 < gamma5;
					var dif29 = clockwise23 ? theta26 : -theta26;
					dif25 = largest5 ? dif29 : clockwise23 ? -(2 * Math.PI - theta26) : 2 * Math.PI - theta26;
					break;
				}
				var positive6 = dif25 >= 0;
				var totalSteps6 = Math.ceil(Math.abs(dif25) / step12);
				var step13 = dif25 / totalSteps6;
				var angle6 = beta2;
				var cx6;
				var cy6;
				var bx6 = 0;
				var by6 = 0;
				var p26 = temp2.length;
				var _g23 = 0;
				var _g111 = totalSteps6 + 1;
				while(_g23 < _g111) {
					var i10 = _g23++;
					cx6 = ax2 + radius6 * Math.sin(angle6);
					cy6 = ay2 + radius6 * Math.cos(angle6);
					temp2[p26++] = cx6;
					temp2[p26++] = cy6;
					if(i10 != 0) {
						var t26 = new trilateral_tri_Trilateral(ax2,ay2,bx6,by6,cx6,cy6);
						out6[out6.length] = t26;
					}
					angle6 += step13;
					bx6 = cx6;
					by6 = cy6;
				}
				var triArr2 = out6;
				var _g24 = 0;
				while(_g24 < triArr2.length) {
					var t27 = triArr2[_g24];
					++_g24;
					this96[this96.length] = t27;
				}
				var pA2 = _this2.pointsAnti.length;
				var len2 = temp2.length / 2 | 0;
				var p42 = temp2.length / 4 | 0;
				var _g25 = 0;
				var _g112 = p42;
				while(_g25 < _g112) {
					var i11 = _g25++;
					_this2.pointsAnti[pA2++] = temp2[len2 - 2 * i11 + 1];
					_this2.pointsAnti[pA2++] = temp2[len2 - 2 * i11];
				}
				var pC2 = _this2.pointsClock.length;
				var _g26 = 0;
				var _g33 = p42;
				while(_g26 < _g33) {
					var i12 = _g26++;
					_this2.pointsClock[pC2++] = temp2[i12 * 2 + len2 + 1];
					_this2.pointsClock[pC2++] = temp2[i12 * 2 + len2];
				}
			}
			if(_this2.count != 0) {
				_this2.addQuads(clockWise2,width_2);
			}
			_this2.quadIndex = _this2.triArr.length;
			if(_this2.count == 0) {
				_this2.penultimateAX = _this2.dxPrev;
				_this2.penultimateAY = _this2.dyPrev;
				_this2.lastAntiX = _this2.ex;
				_this2.lastAntiY = _this2.ey;
				_this2.penultimateCX = _this2.dx;
				_this2.penultimateCY = _this2.dy;
				_this2.lastClockX = _this2.exPrev;
				_this2.lastClockY = _this2.eyPrev;
				var this108 = _this2.triArr;
				var tri28 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
				this108[this108.length] = tri28;
				var this109 = _this2.triArr;
				var tri29 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
				this109[this109.length] = tri29;
			} else {
				if(clockWise2 && !_this2.lastClock) {
					_this2.penultimateAX = _this2.jx;
					_this2.penultimateAY = _this2.jy;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.exPrev;
					_this2.lastClockY = _this2.eyPrev;
					var this110 = _this2.triArr;
					var tri30 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this110[this110.length] = tri30;
					var this111 = _this2.triArr;
					var tri31 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
					this111[this111.length] = tri31;
				}
				if(clockWise2 && _this2.lastClock) {
					_this2.penultimateAX = _this2.jx;
					_this2.penultimateAY = _this2.jy;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.exPrev;
					_this2.lastClockY = _this2.eyPrev;
					var this112 = _this2.triArr;
					var tri32 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this112[this112.length] = tri32;
					var this113 = _this2.triArr;
					var tri33 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.exPrev,_this2.eyPrev,0);
					this113[this113.length] = tri33;
				}
				if(!clockWise2 && !_this2.lastClock) {
					_this2.penultimateCX = _this2.dx;
					_this2.penultimateCY = _this2.dy;
					_this2.lastClockX = _this2.jx;
					_this2.lastClockY = _this2.jy;
					_this2.penultimateAX = _this2.dxPrev;
					_this2.penultimateAY = _this2.dyPrev;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					var this114 = _this2.triArr;
					var tri34 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.jx,_this2.jy,0);
					this114[this114.length] = tri34;
					var this115 = _this2.triArr;
					var tri35 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this115[this115.length] = tri35;
				}
				if(!clockWise2 && _this2.lastClock) {
					_this2.penultimateAX = _this2.dxPrev;
					_this2.penultimateAY = _this2.dyPrev;
					_this2.lastAntiX = _this2.ex;
					_this2.lastAntiY = _this2.ey;
					_this2.penultimateCX = _this2.jx;
					_this2.penultimateCY = _this2.jy;
					_this2.lastClockX = _this2.dx;
					_this2.lastClockY = _this2.dy;
					var this116 = _this2.triArr;
					var tri36 = new trilateral_tri_Trilateral(_this2.jx,_this2.jy,_this2.dx,_this2.dy,_this2.ex,_this2.ey,0);
					this116[this116.length] = tri36;
					var this117 = _this2.triArr;
					var tri37 = new trilateral_tri_Trilateral(_this2.dxPrev,_this2.dyPrev,_this2.jx,_this2.jy,_this2.ex,_this2.ey,0);
					this117[this117.length] = tri37;
				}
			}
			if(clockWise2) {
				var radius7 = width_2 / 2;
				var edgePoly4 = _this2.pointsClock;
				var t28 = [];
				var this118;
				if(t28 == null) {
					var t29 = [];
					var this119 = t29 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t29;
					this118 = this119;
				} else {
					this118 = t28;
				}
				var this120 = this118;
				var out7 = this120;
				var pi7 = Math.PI;
				var step14 = pi7 * 2 / 36;
				var positive7 = dif20 >= 0;
				var totalSteps7 = Math.ceil(Math.abs(dif20) / step14);
				var step15 = dif20 / totalSteps7;
				var angle7 = theta02;
				var cx7;
				var cy7;
				var bx7 = 0;
				var by7 = 0;
				var p27 = edgePoly4.length;
				var count4 = 0;
				var _g27 = 0;
				var _g113 = totalSteps7 + 1;
				while(_g27 < _g113) {
					var i13 = _g27++;
					cx7 = ax_2 + radius7 * Math.sin(angle7);
					cy7 = ay_2 + radius7 * Math.cos(angle7);
					if(i13 != 0) {
						var t30 = new trilateral_tri_Trilateral(ax_2,ay_2,bx7,by7,cx7,cy7);
						out7[out7.length] = t30;
						edgePoly4[p27++] = cx7;
						edgePoly4[p27++] = cy7;
					}
					angle7 += step15;
					bx7 = cx7;
					by7 = cy7;
				}
				var trilateralArray4 = out7;
				var this121 = _this2.triArr;
				var _g28 = 0;
				while(_g28 < trilateralArray4.length) {
					var t31 = trilateralArray4[_g28];
					++_g28;
					this121[this121.length] = t31;
				}
			} else {
				var radius8 = width_2 / 2;
				var edgePoly5 = _this2.pointsAnti;
				var t32 = [];
				var this122;
				if(t32 == null) {
					var t33 = [];
					var this123 = t33 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t33;
					this122 = this123;
				} else {
					this122 = t32;
				}
				var this124 = this122;
				var out8 = this124;
				var pi8 = Math.PI;
				var step16 = pi8 * 2 / 36;
				var positive8 = dif20 >= 0;
				var totalSteps8 = Math.ceil(Math.abs(dif20) / step16);
				var step17 = dif20 / totalSteps8;
				var angle8 = theta02;
				var cx8;
				var cy8;
				var bx8 = 0;
				var by8 = 0;
				var p28 = edgePoly5.length;
				var count5 = 0;
				var _g29 = 0;
				var _g114 = totalSteps8 + 1;
				while(_g29 < _g114) {
					var i14 = _g29++;
					cx8 = ax_2 + radius8 * Math.sin(angle8);
					cy8 = ay_2 + radius8 * Math.cos(angle8);
					if(i14 != 0) {
						var t34 = new trilateral_tri_Trilateral(ax_2,ay_2,bx8,by8,cx8,cy8);
						out8[out8.length] = t34;
						edgePoly5[p28++] = cx8;
						edgePoly5[p28++] = cy8;
					}
					angle8 += step17;
					bx8 = cx8;
					by8 = cy8;
				}
				var trilateralArray5 = out8;
				var this125 = _this2.triArr;
				var _g30 = 0;
				while(_g30 < trilateralArray5.length) {
					var t35 = trilateralArray5[_g30];
					++_g30;
					this125[this125.length] = t35;
				}
			}
			_this2.kax = _this2.dxPrev;
			_this2.kay = _this2.dyPrev;
			_this2.kbx = _this2.dx;
			_this2.kby = _this2.dy;
			_this2.ncx = _this2.exPrev;
			_this2.ncy = _this2.eyPrev;
			_this2.kcx = _this2.ex;
			_this2.kcy = _this2.ey;
			if(_this2.count != 0) {
				if(clockWise2) {
					var this126 = _this2.triArr;
					var tri38 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.dxOld,_this2.dyOld,_this2.jx,_this2.jy,0);
					this126[this126.length] = tri38;
					var this127 = _this2.triArr;
					var tri39 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.exPrev,_this2.eyPrev,_this2.jx,_this2.jy,0);
					this127[this127.length] = tri39;
				} else {
					var this128 = _this2.triArr;
					var tri40 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.exOld,_this2.eyOld,_this2.jx,_this2.jy,0);
					this128[this128.length] = tri40;
					var this129 = _this2.triArr;
					var tri41 = new trilateral_tri_Trilateral(_this2.ax,_this2.ay,_this2.dxPrev,_this2.dyPrev,_this2.jx,_this2.jy,0);
					this129[this129.length] = tri41;
				}
			}
			_this2.jxOld = _this2.jx;
			_this2.jyOld = _this2.jy;
			_this2.lastClock = clockWise2;
			_this2.count++;
			var l3 = path.points.length;
			var p3 = path.points[l3 - 1];
			var l22 = p3.length;
			p3[l22] = 450;
			p3[l22 + 1] = 750;
			var d2 = path.dim[path.dim.length - 1];
			if(450 < d2.minX) {
				d2.minX = 450;
			}
			if(450 > d2.maxX) {
				d2.maxX = 450;
			}
			if(750 < d2.minY) {
				d2.minY = 750;
			}
			if(750 > d2.maxY) {
				d2.maxY = 750;
			}
			path.x = 450;
			path.y = 750;
		}
		var repeat3 = path.x == 700 && path.y == 700;
		if(!repeat3) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,700,700);
			}
			var _this3 = path.contour;
			var ax_3 = path.x;
			var ay_3 = path.y;
			var width_3 = path.width;
			var oldAngle3 = _this3.dx != null ? _this3.angle1 : null;
			_this3.halfA = Math.PI / 2;
			_this3.ax = 700;
			_this3.ay = 700;
			_this3.bx = ax_3;
			_this3.by = ay_3;
			_this3.beta = Math.PI / 2 - _this3.halfA;
			_this3.r = width_3 / 2 * Math.cos(_this3.beta);
			_this3.theta = Math.atan2(_this3.ay - _this3.by,_this3.ax - _this3.bx);
			if(_this3.theta > 0) {
				if(_this3.halfA < 0) {
					_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
					_this3.angle1 = _this3.theta - _this3.halfA;
				} else {
					_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
					_this3.angle2 = _this3.theta + _this3.halfA;
				}
			} else if(_this3.halfA > 0) {
				_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
				_this3.angle2 = _this3.theta + _this3.halfA;
			} else {
				_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
				_this3.angle1 = _this3.theta - _this3.halfA;
			}
			if(_this3.dxPrev != null) {
				_this3.dxOld = _this3.dxPrev;
			}
			if(_this3.dyPrev != null) {
				_this3.dyOld = _this3.dyPrev;
			}
			if(_this3.exPrev != null) {
				_this3.exOld = _this3.exPrev;
			}
			if(_this3.eyPrev != null) {
				_this3.eyOld = _this3.eyPrev;
			}
			if(_this3.dx != null) {
				_this3.dxPrev = _this3.dx;
			}
			if(_this3.dy != null) {
				_this3.dyPrev = _this3.dy;
			}
			if(_this3.ex != null) {
				_this3.exPrev = _this3.ex;
			}
			if(_this3.ey != null) {
				_this3.eyPrev = _this3.ey;
			}
			_this3.dx = _this3.bx + _this3.r * Math.cos(_this3.angle1);
			_this3.dy = _this3.by + _this3.r * Math.sin(_this3.angle1);
			_this3.ex = _this3.bx + _this3.r * Math.cos(_this3.angle2);
			_this3.ey = _this3.by + _this3.r * Math.sin(_this3.angle2);
			_this3.ax = ax_3;
			_this3.ay = ay_3;
			_this3.bx = 700;
			_this3.by = 700;
			_this3.theta = Math.atan2(_this3.ay - _this3.by,_this3.ax - _this3.bx);
			if(_this3.theta > 0) {
				if(_this3.halfA < 0) {
					_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
					_this3.angle1 = _this3.theta - _this3.halfA;
				} else {
					_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
					_this3.angle2 = _this3.theta + _this3.halfA;
				}
			} else if(_this3.halfA > 0) {
				_this3.angle1 = _this3.theta + _this3.halfA - Math.PI;
				_this3.angle2 = _this3.theta + _this3.halfA;
			} else {
				_this3.angle2 = _this3.theta + _this3.halfA + Math.PI / 2;
				_this3.angle1 = _this3.theta - _this3.halfA;
			}
			if(_this3.dxPrev != null) {
				_this3.dxOld = _this3.dxPrev;
			}
			if(_this3.dyPrev != null) {
				_this3.dyOld = _this3.dyPrev;
			}
			if(_this3.exPrev != null) {
				_this3.exOld = _this3.exPrev;
			}
			if(_this3.eyPrev != null) {
				_this3.eyOld = _this3.eyPrev;
			}
			if(_this3.dx != null) {
				_this3.dxPrev = _this3.dx;
			}
			if(_this3.dy != null) {
				_this3.dyPrev = _this3.dy;
			}
			if(_this3.ex != null) {
				_this3.exPrev = _this3.ex;
			}
			if(_this3.ey != null) {
				_this3.eyPrev = _this3.ey;
			}
			_this3.dx = _this3.bx + _this3.r * Math.cos(_this3.angle1);
			_this3.dy = _this3.by + _this3.r * Math.sin(_this3.angle1);
			_this3.ex = _this3.bx + _this3.r * Math.cos(_this3.angle2);
			_this3.ey = _this3.by + _this3.r * Math.sin(_this3.angle2);
			var x6 = _this3.dxOld - 700;
			var y6 = _this3.dyOld - 700;
			var x7 = _this3.exOld - 700;
			var y7 = _this3.eyOld - 700;
			var clockWise3 = x6 * x6 + y6 * y6 > x7 * x7 + y7 * y7;
			var theta03;
			var theta110;
			if(clockWise3) {
				theta03 = -Math.atan2(_this3.ay - _this3.dyOld,_this3.ax - _this3.dxOld) - Math.PI / 2;
				theta110 = -Math.atan2(_this3.ay - _this3.eyPrev,_this3.ax - _this3.exPrev) - Math.PI / 2;
			} else {
				theta03 = -Math.atan2(_this3.ay - _this3.eyOld,_this3.ax - _this3.exOld) - Math.PI / 2;
				theta110 = -Math.atan2(_this3.ay - _this3.dyPrev,_this3.ax - _this3.dxPrev) - Math.PI / 2;
			}
			var dif30;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f51;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f51 = theta03;
				} else {
					var a51 = theta03 % (2 * Math.PI);
					f51 = a51 >= 0 ? a51 : a51 + 2 * Math.PI;
				}
				var this130 = f51;
				var za24 = this130;
				var f52;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f52 = theta110;
				} else {
					var a52 = theta110 % (2 * Math.PI);
					f52 = a52 >= 0 ? a52 : a52 + 2 * Math.PI;
				}
				var this131 = f52;
				var zb24 = this131;
				var fa24 = za24;
				var fb24 = zb24;
				var theta27 = Math.abs(fa24 - fb24);
				var clockwise24 = theta03 < theta110;
				var dif31 = clockwise24 ? theta27 : -theta27;
				dif30 = dif31 > 0 ? dif31 : 2 * Math.PI + dif31;
				break;
			case 1:
				var f53;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f53 = theta03;
				} else {
					var a53 = theta03 % (2 * Math.PI);
					f53 = a53 >= 0 ? a53 : a53 + 2 * Math.PI;
				}
				var this132 = f53;
				var za25 = this132;
				var f54;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f54 = theta110;
				} else {
					var a54 = theta110 % (2 * Math.PI);
					f54 = a54 >= 0 ? a54 : a54 + 2 * Math.PI;
				}
				var this133 = f54;
				var zb25 = this133;
				var fa25 = za25;
				var fb25 = zb25;
				var theta28 = Math.abs(fa25 - fb25);
				var clockwise25 = theta03 < theta110;
				var dif32 = clockwise25 ? theta28 : -theta28;
				dif30 = dif32 < 0 ? dif32 : -2 * Math.PI + dif32;
				break;
			case 2:
				var f55;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f55 = theta03;
				} else {
					var a55 = theta03 % (2 * Math.PI);
					f55 = a55 >= 0 ? a55 : a55 + 2 * Math.PI;
				}
				var this134 = f55;
				var za26 = this134;
				var f56;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f56 = theta110;
				} else {
					var a56 = theta110 % (2 * Math.PI);
					f56 = a56 >= 0 ? a56 : a56 + 2 * Math.PI;
				}
				var this135 = f56;
				var zb26 = this135;
				var fa26 = za26;
				var fb26 = zb26;
				var theta29 = Math.abs(fa26 - fb26);
				var smallest6 = theta29 <= Math.PI;
				var clockwise26 = theta03 < theta110;
				var dif33 = clockwise26 ? theta29 : -theta29;
				dif30 = smallest6 ? dif33 : clockwise26 ? -(2 * Math.PI - theta29) : 2 * Math.PI - theta29;
				break;
			case 3:
				var f57;
				if(theta03 >= 0 && theta03 > Math.PI) {
					f57 = theta03;
				} else {
					var a57 = theta03 % (2 * Math.PI);
					f57 = a57 >= 0 ? a57 : a57 + 2 * Math.PI;
				}
				var this136 = f57;
				var za27 = this136;
				var f58;
				if(theta110 >= 0 && theta110 > Math.PI) {
					f58 = theta110;
				} else {
					var a58 = theta110 % (2 * Math.PI);
					f58 = a58 >= 0 ? a58 : a58 + 2 * Math.PI;
				}
				var this137 = f58;
				var zb27 = this137;
				var fa27 = za27;
				var fb27 = zb27;
				var theta30 = Math.abs(fa27 - fb27);
				var largest6 = theta30 > Math.PI;
				var clockwise27 = theta03 < theta110;
				var dif34 = clockwise27 ? theta30 : -theta30;
				dif30 = largest6 ? dif34 : clockwise27 ? -(2 * Math.PI - theta30) : 2 * Math.PI - theta30;
				break;
			}
			if(_this3.count != 0) {
				var gamma6 = Math.abs(dif30) / 2;
				var h3 = width_3 / 2 / Math.cos(gamma6);
				var f59;
				if(theta03 <= Math.PI && theta03 > -Math.PI) {
					f59 = theta03;
				} else {
					var a59 = (theta03 + Math.PI) % (2 * Math.PI);
					f59 = a59 >= 0 ? a59 - Math.PI : a59 + Math.PI;
				}
				var this138 = f59;
				var start4 = this138;
				var start23 = start4;
				var delta3 = start23 + dif30 / 2 + Math.PI;
				_this3.jx = _this3.ax + h3 * Math.sin(delta3);
				_this3.jy = _this3.ay + h3 * Math.cos(delta3);
			}
			if(_this3.count == 0 && (_this3.endLine == 1 || _this3.endLine == 3)) {
				var ax3 = _this3.ax;
				var ay3 = _this3.ay;
				var radius9 = width_3 / 2;
				var beta3 = -_this3.angle1 - Math.PI / 2;
				var gamma7 = -_this3.angle1 - Math.PI / 2 + Math.PI;
				var temp3 = [];
				var this139 = _this3.triArr;
				var t36 = [];
				var this140;
				if(t36 == null) {
					var t37 = [];
					var this141 = t37 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t37;
					this140 = this141;
				} else {
					this140 = t36;
				}
				var this142 = this140;
				var out9 = this142;
				var pi9 = Math.PI;
				var step18 = pi9 * 2 / 36;
				var dif35;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f60;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f60 = beta3;
					} else {
						var a60 = beta3 % (2 * Math.PI);
						f60 = a60 >= 0 ? a60 : a60 + 2 * Math.PI;
					}
					var this143 = f60;
					var za28 = this143;
					var f61;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f61 = gamma7;
					} else {
						var a61 = gamma7 % (2 * Math.PI);
						f61 = a61 >= 0 ? a61 : a61 + 2 * Math.PI;
					}
					var this144 = f61;
					var zb28 = this144;
					var fa28 = za28;
					var fb28 = zb28;
					var theta31 = Math.abs(fa28 - fb28);
					var clockwise28 = beta3 < gamma7;
					var dif36 = clockwise28 ? theta31 : -theta31;
					dif35 = dif36 > 0 ? dif36 : 2 * Math.PI + dif36;
					break;
				case 1:
					var f62;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f62 = beta3;
					} else {
						var a62 = beta3 % (2 * Math.PI);
						f62 = a62 >= 0 ? a62 : a62 + 2 * Math.PI;
					}
					var this145 = f62;
					var za29 = this145;
					var f63;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f63 = gamma7;
					} else {
						var a63 = gamma7 % (2 * Math.PI);
						f63 = a63 >= 0 ? a63 : a63 + 2 * Math.PI;
					}
					var this146 = f63;
					var zb29 = this146;
					var fa29 = za29;
					var fb29 = zb29;
					var theta32 = Math.abs(fa29 - fb29);
					var clockwise29 = beta3 < gamma7;
					var dif37 = clockwise29 ? theta32 : -theta32;
					dif35 = dif37 < 0 ? dif37 : -2 * Math.PI + dif37;
					break;
				case 2:
					var f64;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f64 = beta3;
					} else {
						var a64 = beta3 % (2 * Math.PI);
						f64 = a64 >= 0 ? a64 : a64 + 2 * Math.PI;
					}
					var this147 = f64;
					var za30 = this147;
					var f65;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f65 = gamma7;
					} else {
						var a65 = gamma7 % (2 * Math.PI);
						f65 = a65 >= 0 ? a65 : a65 + 2 * Math.PI;
					}
					var this148 = f65;
					var zb30 = this148;
					var fa30 = za30;
					var fb30 = zb30;
					var theta33 = Math.abs(fa30 - fb30);
					var smallest7 = theta33 <= Math.PI;
					var clockwise30 = beta3 < gamma7;
					var dif38 = clockwise30 ? theta33 : -theta33;
					dif35 = smallest7 ? dif38 : clockwise30 ? -(2 * Math.PI - theta33) : 2 * Math.PI - theta33;
					break;
				case 3:
					var f66;
					if(beta3 >= 0 && beta3 > Math.PI) {
						f66 = beta3;
					} else {
						var a66 = beta3 % (2 * Math.PI);
						f66 = a66 >= 0 ? a66 : a66 + 2 * Math.PI;
					}
					var this149 = f66;
					var za31 = this149;
					var f67;
					if(gamma7 >= 0 && gamma7 > Math.PI) {
						f67 = gamma7;
					} else {
						var a67 = gamma7 % (2 * Math.PI);
						f67 = a67 >= 0 ? a67 : a67 + 2 * Math.PI;
					}
					var this150 = f67;
					var zb31 = this150;
					var fa31 = za31;
					var fb31 = zb31;
					var theta34 = Math.abs(fa31 - fb31);
					var largest7 = theta34 > Math.PI;
					var clockwise31 = beta3 < gamma7;
					var dif39 = clockwise31 ? theta34 : -theta34;
					dif35 = largest7 ? dif39 : clockwise31 ? -(2 * Math.PI - theta34) : 2 * Math.PI - theta34;
					break;
				}
				var positive9 = dif35 >= 0;
				var totalSteps9 = Math.ceil(Math.abs(dif35) / step18);
				var step19 = dif35 / totalSteps9;
				var angle9 = beta3;
				var cx9;
				var cy9;
				var bx9 = 0;
				var by9 = 0;
				var p29 = temp3.length;
				var _g34 = 0;
				var _g115 = totalSteps9 + 1;
				while(_g34 < _g115) {
					var i15 = _g34++;
					cx9 = ax3 + radius9 * Math.sin(angle9);
					cy9 = ay3 + radius9 * Math.cos(angle9);
					temp3[p29++] = cx9;
					temp3[p29++] = cy9;
					if(i15 != 0) {
						var t38 = new trilateral_tri_Trilateral(ax3,ay3,bx9,by9,cx9,cy9);
						out9[out9.length] = t38;
					}
					angle9 += step19;
					bx9 = cx9;
					by9 = cy9;
				}
				var triArr3 = out9;
				var _g35 = 0;
				while(_g35 < triArr3.length) {
					var t39 = triArr3[_g35];
					++_g35;
					this139[this139.length] = t39;
				}
				var pA3 = _this3.pointsAnti.length;
				var len3 = temp3.length / 2 | 0;
				var p43 = temp3.length / 4 | 0;
				var _g36 = 0;
				var _g116 = p43;
				while(_g36 < _g116) {
					var i16 = _g36++;
					_this3.pointsAnti[pA3++] = temp3[len3 - 2 * i16 + 1];
					_this3.pointsAnti[pA3++] = temp3[len3 - 2 * i16];
				}
				var pC3 = _this3.pointsClock.length;
				var _g210 = 0;
				var _g37 = p43;
				while(_g210 < _g37) {
					var i17 = _g210++;
					_this3.pointsClock[pC3++] = temp3[i17 * 2 + len3 + 1];
					_this3.pointsClock[pC3++] = temp3[i17 * 2 + len3];
				}
			}
			if(_this3.count != 0) {
				_this3.addQuads(clockWise3,width_3);
			}
			_this3.quadIndex = _this3.triArr.length;
			if(_this3.count == 0) {
				_this3.penultimateAX = _this3.dxPrev;
				_this3.penultimateAY = _this3.dyPrev;
				_this3.lastAntiX = _this3.ex;
				_this3.lastAntiY = _this3.ey;
				_this3.penultimateCX = _this3.dx;
				_this3.penultimateCY = _this3.dy;
				_this3.lastClockX = _this3.exPrev;
				_this3.lastClockY = _this3.eyPrev;
				var this151 = _this3.triArr;
				var tri42 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
				this151[this151.length] = tri42;
				var this152 = _this3.triArr;
				var tri43 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
				this152[this152.length] = tri43;
			} else {
				if(clockWise3 && !_this3.lastClock) {
					_this3.penultimateAX = _this3.jx;
					_this3.penultimateAY = _this3.jy;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.exPrev;
					_this3.lastClockY = _this3.eyPrev;
					var this153 = _this3.triArr;
					var tri44 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this153[this153.length] = tri44;
					var this154 = _this3.triArr;
					var tri45 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
					this154[this154.length] = tri45;
				}
				if(clockWise3 && _this3.lastClock) {
					_this3.penultimateAX = _this3.jx;
					_this3.penultimateAY = _this3.jy;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.exPrev;
					_this3.lastClockY = _this3.eyPrev;
					var this155 = _this3.triArr;
					var tri46 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this155[this155.length] = tri46;
					var this156 = _this3.triArr;
					var tri47 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.exPrev,_this3.eyPrev,0);
					this156[this156.length] = tri47;
				}
				if(!clockWise3 && !_this3.lastClock) {
					_this3.penultimateCX = _this3.dx;
					_this3.penultimateCY = _this3.dy;
					_this3.lastClockX = _this3.jx;
					_this3.lastClockY = _this3.jy;
					_this3.penultimateAX = _this3.dxPrev;
					_this3.penultimateAY = _this3.dyPrev;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					var this157 = _this3.triArr;
					var tri48 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.jx,_this3.jy,0);
					this157[this157.length] = tri48;
					var this158 = _this3.triArr;
					var tri49 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this158[this158.length] = tri49;
				}
				if(!clockWise3 && _this3.lastClock) {
					_this3.penultimateAX = _this3.dxPrev;
					_this3.penultimateAY = _this3.dyPrev;
					_this3.lastAntiX = _this3.ex;
					_this3.lastAntiY = _this3.ey;
					_this3.penultimateCX = _this3.jx;
					_this3.penultimateCY = _this3.jy;
					_this3.lastClockX = _this3.dx;
					_this3.lastClockY = _this3.dy;
					var this159 = _this3.triArr;
					var tri50 = new trilateral_tri_Trilateral(_this3.jx,_this3.jy,_this3.dx,_this3.dy,_this3.ex,_this3.ey,0);
					this159[this159.length] = tri50;
					var this160 = _this3.triArr;
					var tri51 = new trilateral_tri_Trilateral(_this3.dxPrev,_this3.dyPrev,_this3.jx,_this3.jy,_this3.ex,_this3.ey,0);
					this160[this160.length] = tri51;
				}
			}
			if(clockWise3) {
				var radius10 = width_3 / 2;
				var edgePoly6 = _this3.pointsClock;
				var t40 = [];
				var this161;
				if(t40 == null) {
					var t41 = [];
					var this162 = t41 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t41;
					this161 = this162;
				} else {
					this161 = t40;
				}
				var this163 = this161;
				var out10 = this163;
				var pi10 = Math.PI;
				var step20 = pi10 * 2 / 36;
				var positive10 = dif30 >= 0;
				var totalSteps10 = Math.ceil(Math.abs(dif30) / step20);
				var step21 = dif30 / totalSteps10;
				var angle10 = theta03;
				var cx10;
				var cy10;
				var bx10 = 0;
				var by10 = 0;
				var p210 = edgePoly6.length;
				var count6 = 0;
				var _g38 = 0;
				var _g117 = totalSteps10 + 1;
				while(_g38 < _g117) {
					var i18 = _g38++;
					cx10 = ax_3 + radius10 * Math.sin(angle10);
					cy10 = ay_3 + radius10 * Math.cos(angle10);
					if(i18 != 0) {
						var t42 = new trilateral_tri_Trilateral(ax_3,ay_3,bx10,by10,cx10,cy10);
						out10[out10.length] = t42;
						edgePoly6[p210++] = cx10;
						edgePoly6[p210++] = cy10;
					}
					angle10 += step21;
					bx10 = cx10;
					by10 = cy10;
				}
				var trilateralArray6 = out10;
				var this164 = _this3.triArr;
				var _g39 = 0;
				while(_g39 < trilateralArray6.length) {
					var t43 = trilateralArray6[_g39];
					++_g39;
					this164[this164.length] = t43;
				}
			} else {
				var radius11 = width_3 / 2;
				var edgePoly7 = _this3.pointsAnti;
				var t44 = [];
				var this165;
				if(t44 == null) {
					var t45 = [];
					var this166 = t45 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t45;
					this165 = this166;
				} else {
					this165 = t44;
				}
				var this167 = this165;
				var out11 = this167;
				var pi11 = Math.PI;
				var step22 = pi11 * 2 / 36;
				var positive11 = dif30 >= 0;
				var totalSteps11 = Math.ceil(Math.abs(dif30) / step22);
				var step23 = dif30 / totalSteps11;
				var angle11 = theta03;
				var cx11;
				var cy11;
				var bx11 = 0;
				var by11 = 0;
				var p211 = edgePoly7.length;
				var count7 = 0;
				var _g40 = 0;
				var _g118 = totalSteps11 + 1;
				while(_g40 < _g118) {
					var i19 = _g40++;
					cx11 = ax_3 + radius11 * Math.sin(angle11);
					cy11 = ay_3 + radius11 * Math.cos(angle11);
					if(i19 != 0) {
						var t46 = new trilateral_tri_Trilateral(ax_3,ay_3,bx11,by11,cx11,cy11);
						out11[out11.length] = t46;
						edgePoly7[p211++] = cx11;
						edgePoly7[p211++] = cy11;
					}
					angle11 += step23;
					bx11 = cx11;
					by11 = cy11;
				}
				var trilateralArray7 = out11;
				var this168 = _this3.triArr;
				var _g41 = 0;
				while(_g41 < trilateralArray7.length) {
					var t47 = trilateralArray7[_g41];
					++_g41;
					this168[this168.length] = t47;
				}
			}
			_this3.kax = _this3.dxPrev;
			_this3.kay = _this3.dyPrev;
			_this3.kbx = _this3.dx;
			_this3.kby = _this3.dy;
			_this3.ncx = _this3.exPrev;
			_this3.ncy = _this3.eyPrev;
			_this3.kcx = _this3.ex;
			_this3.kcy = _this3.ey;
			if(_this3.count != 0) {
				if(clockWise3) {
					var this169 = _this3.triArr;
					var tri52 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.dxOld,_this3.dyOld,_this3.jx,_this3.jy,0);
					this169[this169.length] = tri52;
					var this170 = _this3.triArr;
					var tri53 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.exPrev,_this3.eyPrev,_this3.jx,_this3.jy,0);
					this170[this170.length] = tri53;
				} else {
					var this171 = _this3.triArr;
					var tri54 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.exOld,_this3.eyOld,_this3.jx,_this3.jy,0);
					this171[this171.length] = tri54;
					var this172 = _this3.triArr;
					var tri55 = new trilateral_tri_Trilateral(_this3.ax,_this3.ay,_this3.dxPrev,_this3.dyPrev,_this3.jx,_this3.jy,0);
					this172[this172.length] = tri55;
				}
			}
			_this3.jxOld = _this3.jx;
			_this3.jyOld = _this3.jy;
			_this3.lastClock = clockWise3;
			_this3.count++;
			var l4 = path.points.length;
			var p5 = path.points[l4 - 1];
			var l23 = p5.length;
			p5[l23] = 700;
			p5[l23 + 1] = 700;
			var d3 = path.dim[path.dim.length - 1];
			if(700 < d3.minX) {
				d3.minX = 700;
			}
			if(700 > d3.maxX) {
				d3.maxX = 700;
			}
			if(700 < d3.minY) {
				d3.minY = 700;
			}
			if(700 > d3.maxY) {
				d3.maxY = 700;
			}
			path.x = 700;
			path.y = 700;
		}
		var repeat4 = path.x == 700 && path.y == 450;
		if(!repeat4) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,700,450);
			}
			var _this4 = path.contour;
			var ax_4 = path.x;
			var ay_4 = path.y;
			var width_4 = path.width;
			var oldAngle4 = _this4.dx != null ? _this4.angle1 : null;
			_this4.halfA = Math.PI / 2;
			_this4.ax = 700;
			_this4.ay = 450;
			_this4.bx = ax_4;
			_this4.by = ay_4;
			_this4.beta = Math.PI / 2 - _this4.halfA;
			_this4.r = width_4 / 2 * Math.cos(_this4.beta);
			_this4.theta = Math.atan2(_this4.ay - _this4.by,_this4.ax - _this4.bx);
			if(_this4.theta > 0) {
				if(_this4.halfA < 0) {
					_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
					_this4.angle1 = _this4.theta - _this4.halfA;
				} else {
					_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
					_this4.angle2 = _this4.theta + _this4.halfA;
				}
			} else if(_this4.halfA > 0) {
				_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
				_this4.angle2 = _this4.theta + _this4.halfA;
			} else {
				_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
				_this4.angle1 = _this4.theta - _this4.halfA;
			}
			if(_this4.dxPrev != null) {
				_this4.dxOld = _this4.dxPrev;
			}
			if(_this4.dyPrev != null) {
				_this4.dyOld = _this4.dyPrev;
			}
			if(_this4.exPrev != null) {
				_this4.exOld = _this4.exPrev;
			}
			if(_this4.eyPrev != null) {
				_this4.eyOld = _this4.eyPrev;
			}
			if(_this4.dx != null) {
				_this4.dxPrev = _this4.dx;
			}
			if(_this4.dy != null) {
				_this4.dyPrev = _this4.dy;
			}
			if(_this4.ex != null) {
				_this4.exPrev = _this4.ex;
			}
			if(_this4.ey != null) {
				_this4.eyPrev = _this4.ey;
			}
			_this4.dx = _this4.bx + _this4.r * Math.cos(_this4.angle1);
			_this4.dy = _this4.by + _this4.r * Math.sin(_this4.angle1);
			_this4.ex = _this4.bx + _this4.r * Math.cos(_this4.angle2);
			_this4.ey = _this4.by + _this4.r * Math.sin(_this4.angle2);
			_this4.ax = ax_4;
			_this4.ay = ay_4;
			_this4.bx = 700;
			_this4.by = 450;
			_this4.theta = Math.atan2(_this4.ay - _this4.by,_this4.ax - _this4.bx);
			if(_this4.theta > 0) {
				if(_this4.halfA < 0) {
					_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
					_this4.angle1 = _this4.theta - _this4.halfA;
				} else {
					_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
					_this4.angle2 = _this4.theta + _this4.halfA;
				}
			} else if(_this4.halfA > 0) {
				_this4.angle1 = _this4.theta + _this4.halfA - Math.PI;
				_this4.angle2 = _this4.theta + _this4.halfA;
			} else {
				_this4.angle2 = _this4.theta + _this4.halfA + Math.PI / 2;
				_this4.angle1 = _this4.theta - _this4.halfA;
			}
			if(_this4.dxPrev != null) {
				_this4.dxOld = _this4.dxPrev;
			}
			if(_this4.dyPrev != null) {
				_this4.dyOld = _this4.dyPrev;
			}
			if(_this4.exPrev != null) {
				_this4.exOld = _this4.exPrev;
			}
			if(_this4.eyPrev != null) {
				_this4.eyOld = _this4.eyPrev;
			}
			if(_this4.dx != null) {
				_this4.dxPrev = _this4.dx;
			}
			if(_this4.dy != null) {
				_this4.dyPrev = _this4.dy;
			}
			if(_this4.ex != null) {
				_this4.exPrev = _this4.ex;
			}
			if(_this4.ey != null) {
				_this4.eyPrev = _this4.ey;
			}
			_this4.dx = _this4.bx + _this4.r * Math.cos(_this4.angle1);
			_this4.dy = _this4.by + _this4.r * Math.sin(_this4.angle1);
			_this4.ex = _this4.bx + _this4.r * Math.cos(_this4.angle2);
			_this4.ey = _this4.by + _this4.r * Math.sin(_this4.angle2);
			var x8 = _this4.dxOld - 700;
			var y8 = _this4.dyOld - 450;
			var x9 = _this4.exOld - 700;
			var y9 = _this4.eyOld - 450;
			var clockWise4 = x8 * x8 + y8 * y8 > x9 * x9 + y9 * y9;
			var theta04;
			var theta111;
			if(clockWise4) {
				theta04 = -Math.atan2(_this4.ay - _this4.dyOld,_this4.ax - _this4.dxOld) - Math.PI / 2;
				theta111 = -Math.atan2(_this4.ay - _this4.eyPrev,_this4.ax - _this4.exPrev) - Math.PI / 2;
			} else {
				theta04 = -Math.atan2(_this4.ay - _this4.eyOld,_this4.ax - _this4.exOld) - Math.PI / 2;
				theta111 = -Math.atan2(_this4.ay - _this4.dyPrev,_this4.ax - _this4.dxPrev) - Math.PI / 2;
			}
			var dif40;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f68;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f68 = theta04;
				} else {
					var a68 = theta04 % (2 * Math.PI);
					f68 = a68 >= 0 ? a68 : a68 + 2 * Math.PI;
				}
				var this173 = f68;
				var za32 = this173;
				var f69;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f69 = theta111;
				} else {
					var a69 = theta111 % (2 * Math.PI);
					f69 = a69 >= 0 ? a69 : a69 + 2 * Math.PI;
				}
				var this174 = f69;
				var zb32 = this174;
				var fa32 = za32;
				var fb32 = zb32;
				var theta35 = Math.abs(fa32 - fb32);
				var clockwise32 = theta04 < theta111;
				var dif41 = clockwise32 ? theta35 : -theta35;
				dif40 = dif41 > 0 ? dif41 : 2 * Math.PI + dif41;
				break;
			case 1:
				var f70;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f70 = theta04;
				} else {
					var a70 = theta04 % (2 * Math.PI);
					f70 = a70 >= 0 ? a70 : a70 + 2 * Math.PI;
				}
				var this175 = f70;
				var za33 = this175;
				var f71;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f71 = theta111;
				} else {
					var a71 = theta111 % (2 * Math.PI);
					f71 = a71 >= 0 ? a71 : a71 + 2 * Math.PI;
				}
				var this176 = f71;
				var zb33 = this176;
				var fa33 = za33;
				var fb33 = zb33;
				var theta36 = Math.abs(fa33 - fb33);
				var clockwise33 = theta04 < theta111;
				var dif42 = clockwise33 ? theta36 : -theta36;
				dif40 = dif42 < 0 ? dif42 : -2 * Math.PI + dif42;
				break;
			case 2:
				var f72;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f72 = theta04;
				} else {
					var a72 = theta04 % (2 * Math.PI);
					f72 = a72 >= 0 ? a72 : a72 + 2 * Math.PI;
				}
				var this177 = f72;
				var za34 = this177;
				var f73;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f73 = theta111;
				} else {
					var a73 = theta111 % (2 * Math.PI);
					f73 = a73 >= 0 ? a73 : a73 + 2 * Math.PI;
				}
				var this178 = f73;
				var zb34 = this178;
				var fa34 = za34;
				var fb34 = zb34;
				var theta37 = Math.abs(fa34 - fb34);
				var smallest8 = theta37 <= Math.PI;
				var clockwise34 = theta04 < theta111;
				var dif43 = clockwise34 ? theta37 : -theta37;
				dif40 = smallest8 ? dif43 : clockwise34 ? -(2 * Math.PI - theta37) : 2 * Math.PI - theta37;
				break;
			case 3:
				var f74;
				if(theta04 >= 0 && theta04 > Math.PI) {
					f74 = theta04;
				} else {
					var a74 = theta04 % (2 * Math.PI);
					f74 = a74 >= 0 ? a74 : a74 + 2 * Math.PI;
				}
				var this179 = f74;
				var za35 = this179;
				var f75;
				if(theta111 >= 0 && theta111 > Math.PI) {
					f75 = theta111;
				} else {
					var a75 = theta111 % (2 * Math.PI);
					f75 = a75 >= 0 ? a75 : a75 + 2 * Math.PI;
				}
				var this180 = f75;
				var zb35 = this180;
				var fa35 = za35;
				var fb35 = zb35;
				var theta38 = Math.abs(fa35 - fb35);
				var largest8 = theta38 > Math.PI;
				var clockwise35 = theta04 < theta111;
				var dif44 = clockwise35 ? theta38 : -theta38;
				dif40 = largest8 ? dif44 : clockwise35 ? -(2 * Math.PI - theta38) : 2 * Math.PI - theta38;
				break;
			}
			if(_this4.count != 0) {
				var gamma8 = Math.abs(dif40) / 2;
				var h4 = width_4 / 2 / Math.cos(gamma8);
				var f76;
				if(theta04 <= Math.PI && theta04 > -Math.PI) {
					f76 = theta04;
				} else {
					var a76 = (theta04 + Math.PI) % (2 * Math.PI);
					f76 = a76 >= 0 ? a76 - Math.PI : a76 + Math.PI;
				}
				var this181 = f76;
				var start5 = this181;
				var start24 = start5;
				var delta4 = start24 + dif40 / 2 + Math.PI;
				_this4.jx = _this4.ax + h4 * Math.sin(delta4);
				_this4.jy = _this4.ay + h4 * Math.cos(delta4);
			}
			if(_this4.count == 0 && (_this4.endLine == 1 || _this4.endLine == 3)) {
				var ax4 = _this4.ax;
				var ay4 = _this4.ay;
				var radius12 = width_4 / 2;
				var beta4 = -_this4.angle1 - Math.PI / 2;
				var gamma9 = -_this4.angle1 - Math.PI / 2 + Math.PI;
				var temp4 = [];
				var this182 = _this4.triArr;
				var t48 = [];
				var this183;
				if(t48 == null) {
					var t49 = [];
					var this184 = t49 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t49;
					this183 = this184;
				} else {
					this183 = t48;
				}
				var this185 = this183;
				var out12 = this185;
				var pi12 = Math.PI;
				var step24 = pi12 * 2 / 36;
				var dif45;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f77;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f77 = beta4;
					} else {
						var a77 = beta4 % (2 * Math.PI);
						f77 = a77 >= 0 ? a77 : a77 + 2 * Math.PI;
					}
					var this186 = f77;
					var za36 = this186;
					var f78;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f78 = gamma9;
					} else {
						var a78 = gamma9 % (2 * Math.PI);
						f78 = a78 >= 0 ? a78 : a78 + 2 * Math.PI;
					}
					var this187 = f78;
					var zb36 = this187;
					var fa36 = za36;
					var fb36 = zb36;
					var theta39 = Math.abs(fa36 - fb36);
					var clockwise36 = beta4 < gamma9;
					var dif46 = clockwise36 ? theta39 : -theta39;
					dif45 = dif46 > 0 ? dif46 : 2 * Math.PI + dif46;
					break;
				case 1:
					var f79;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f79 = beta4;
					} else {
						var a79 = beta4 % (2 * Math.PI);
						f79 = a79 >= 0 ? a79 : a79 + 2 * Math.PI;
					}
					var this188 = f79;
					var za37 = this188;
					var f80;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f80 = gamma9;
					} else {
						var a80 = gamma9 % (2 * Math.PI);
						f80 = a80 >= 0 ? a80 : a80 + 2 * Math.PI;
					}
					var this189 = f80;
					var zb37 = this189;
					var fa37 = za37;
					var fb37 = zb37;
					var theta40 = Math.abs(fa37 - fb37);
					var clockwise37 = beta4 < gamma9;
					var dif47 = clockwise37 ? theta40 : -theta40;
					dif45 = dif47 < 0 ? dif47 : -2 * Math.PI + dif47;
					break;
				case 2:
					var f81;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f81 = beta4;
					} else {
						var a81 = beta4 % (2 * Math.PI);
						f81 = a81 >= 0 ? a81 : a81 + 2 * Math.PI;
					}
					var this190 = f81;
					var za38 = this190;
					var f82;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f82 = gamma9;
					} else {
						var a82 = gamma9 % (2 * Math.PI);
						f82 = a82 >= 0 ? a82 : a82 + 2 * Math.PI;
					}
					var this191 = f82;
					var zb38 = this191;
					var fa38 = za38;
					var fb38 = zb38;
					var theta41 = Math.abs(fa38 - fb38);
					var smallest9 = theta41 <= Math.PI;
					var clockwise38 = beta4 < gamma9;
					var dif48 = clockwise38 ? theta41 : -theta41;
					dif45 = smallest9 ? dif48 : clockwise38 ? -(2 * Math.PI - theta41) : 2 * Math.PI - theta41;
					break;
				case 3:
					var f83;
					if(beta4 >= 0 && beta4 > Math.PI) {
						f83 = beta4;
					} else {
						var a83 = beta4 % (2 * Math.PI);
						f83 = a83 >= 0 ? a83 : a83 + 2 * Math.PI;
					}
					var this192 = f83;
					var za39 = this192;
					var f84;
					if(gamma9 >= 0 && gamma9 > Math.PI) {
						f84 = gamma9;
					} else {
						var a84 = gamma9 % (2 * Math.PI);
						f84 = a84 >= 0 ? a84 : a84 + 2 * Math.PI;
					}
					var this193 = f84;
					var zb39 = this193;
					var fa39 = za39;
					var fb39 = zb39;
					var theta42 = Math.abs(fa39 - fb39);
					var largest9 = theta42 > Math.PI;
					var clockwise39 = beta4 < gamma9;
					var dif49 = clockwise39 ? theta42 : -theta42;
					dif45 = largest9 ? dif49 : clockwise39 ? -(2 * Math.PI - theta42) : 2 * Math.PI - theta42;
					break;
				}
				var positive12 = dif45 >= 0;
				var totalSteps12 = Math.ceil(Math.abs(dif45) / step24);
				var step25 = dif45 / totalSteps12;
				var angle12 = beta4;
				var cx12;
				var cy12;
				var bx12 = 0;
				var by12 = 0;
				var p212 = temp4.length;
				var _g42 = 0;
				var _g119 = totalSteps12 + 1;
				while(_g42 < _g119) {
					var i20 = _g42++;
					cx12 = ax4 + radius12 * Math.sin(angle12);
					cy12 = ay4 + radius12 * Math.cos(angle12);
					temp4[p212++] = cx12;
					temp4[p212++] = cy12;
					if(i20 != 0) {
						var t50 = new trilateral_tri_Trilateral(ax4,ay4,bx12,by12,cx12,cy12);
						out12[out12.length] = t50;
					}
					angle12 += step25;
					bx12 = cx12;
					by12 = cy12;
				}
				var triArr4 = out12;
				var _g43 = 0;
				while(_g43 < triArr4.length) {
					var t51 = triArr4[_g43];
					++_g43;
					this182[this182.length] = t51;
				}
				var pA4 = _this4.pointsAnti.length;
				var len4 = temp4.length / 2 | 0;
				var p44 = temp4.length / 4 | 0;
				var _g44 = 0;
				var _g120 = p44;
				while(_g44 < _g120) {
					var i21 = _g44++;
					_this4.pointsAnti[pA4++] = temp4[len4 - 2 * i21 + 1];
					_this4.pointsAnti[pA4++] = temp4[len4 - 2 * i21];
				}
				var pC4 = _this4.pointsClock.length;
				var _g211 = 0;
				var _g310 = p44;
				while(_g211 < _g310) {
					var i22 = _g211++;
					_this4.pointsClock[pC4++] = temp4[i22 * 2 + len4 + 1];
					_this4.pointsClock[pC4++] = temp4[i22 * 2 + len4];
				}
			}
			if(_this4.count != 0) {
				_this4.addQuads(clockWise4,width_4);
			}
			_this4.quadIndex = _this4.triArr.length;
			if(_this4.count == 0) {
				_this4.penultimateAX = _this4.dxPrev;
				_this4.penultimateAY = _this4.dyPrev;
				_this4.lastAntiX = _this4.ex;
				_this4.lastAntiY = _this4.ey;
				_this4.penultimateCX = _this4.dx;
				_this4.penultimateCY = _this4.dy;
				_this4.lastClockX = _this4.exPrev;
				_this4.lastClockY = _this4.eyPrev;
				var this194 = _this4.triArr;
				var tri56 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
				this194[this194.length] = tri56;
				var this195 = _this4.triArr;
				var tri57 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
				this195[this195.length] = tri57;
			} else {
				if(clockWise4 && !_this4.lastClock) {
					_this4.penultimateAX = _this4.jx;
					_this4.penultimateAY = _this4.jy;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.exPrev;
					_this4.lastClockY = _this4.eyPrev;
					var this196 = _this4.triArr;
					var tri58 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this196[this196.length] = tri58;
					var this197 = _this4.triArr;
					var tri59 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
					this197[this197.length] = tri59;
				}
				if(clockWise4 && _this4.lastClock) {
					_this4.penultimateAX = _this4.jx;
					_this4.penultimateAY = _this4.jy;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.exPrev;
					_this4.lastClockY = _this4.eyPrev;
					var this198 = _this4.triArr;
					var tri60 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this198[this198.length] = tri60;
					var this199 = _this4.triArr;
					var tri61 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.exPrev,_this4.eyPrev,0);
					this199[this199.length] = tri61;
				}
				if(!clockWise4 && !_this4.lastClock) {
					_this4.penultimateCX = _this4.dx;
					_this4.penultimateCY = _this4.dy;
					_this4.lastClockX = _this4.jx;
					_this4.lastClockY = _this4.jy;
					_this4.penultimateAX = _this4.dxPrev;
					_this4.penultimateAY = _this4.dyPrev;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					var this200 = _this4.triArr;
					var tri62 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.jx,_this4.jy,0);
					this200[this200.length] = tri62;
					var this201 = _this4.triArr;
					var tri63 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this201[this201.length] = tri63;
				}
				if(!clockWise4 && _this4.lastClock) {
					_this4.penultimateAX = _this4.dxPrev;
					_this4.penultimateAY = _this4.dyPrev;
					_this4.lastAntiX = _this4.ex;
					_this4.lastAntiY = _this4.ey;
					_this4.penultimateCX = _this4.jx;
					_this4.penultimateCY = _this4.jy;
					_this4.lastClockX = _this4.dx;
					_this4.lastClockY = _this4.dy;
					var this202 = _this4.triArr;
					var tri64 = new trilateral_tri_Trilateral(_this4.jx,_this4.jy,_this4.dx,_this4.dy,_this4.ex,_this4.ey,0);
					this202[this202.length] = tri64;
					var this203 = _this4.triArr;
					var tri65 = new trilateral_tri_Trilateral(_this4.dxPrev,_this4.dyPrev,_this4.jx,_this4.jy,_this4.ex,_this4.ey,0);
					this203[this203.length] = tri65;
				}
			}
			if(clockWise4) {
				var radius13 = width_4 / 2;
				var edgePoly8 = _this4.pointsClock;
				var t52 = [];
				var this204;
				if(t52 == null) {
					var t53 = [];
					var this205 = t53 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t53;
					this204 = this205;
				} else {
					this204 = t52;
				}
				var this206 = this204;
				var out13 = this206;
				var pi13 = Math.PI;
				var step26 = pi13 * 2 / 36;
				var positive13 = dif40 >= 0;
				var totalSteps13 = Math.ceil(Math.abs(dif40) / step26);
				var step27 = dif40 / totalSteps13;
				var angle13 = theta04;
				var cx13;
				var cy13;
				var bx13 = 0;
				var by13 = 0;
				var p213 = edgePoly8.length;
				var count8 = 0;
				var _g45 = 0;
				var _g121 = totalSteps13 + 1;
				while(_g45 < _g121) {
					var i23 = _g45++;
					cx13 = ax_4 + radius13 * Math.sin(angle13);
					cy13 = ay_4 + radius13 * Math.cos(angle13);
					if(i23 != 0) {
						var t54 = new trilateral_tri_Trilateral(ax_4,ay_4,bx13,by13,cx13,cy13);
						out13[out13.length] = t54;
						edgePoly8[p213++] = cx13;
						edgePoly8[p213++] = cy13;
					}
					angle13 += step27;
					bx13 = cx13;
					by13 = cy13;
				}
				var trilateralArray8 = out13;
				var this207 = _this4.triArr;
				var _g46 = 0;
				while(_g46 < trilateralArray8.length) {
					var t55 = trilateralArray8[_g46];
					++_g46;
					this207[this207.length] = t55;
				}
			} else {
				var radius14 = width_4 / 2;
				var edgePoly9 = _this4.pointsAnti;
				var t56 = [];
				var this208;
				if(t56 == null) {
					var t57 = [];
					var this209 = t57 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t57;
					this208 = this209;
				} else {
					this208 = t56;
				}
				var this210 = this208;
				var out14 = this210;
				var pi14 = Math.PI;
				var step28 = pi14 * 2 / 36;
				var positive14 = dif40 >= 0;
				var totalSteps14 = Math.ceil(Math.abs(dif40) / step28);
				var step29 = dif40 / totalSteps14;
				var angle14 = theta04;
				var cx14;
				var cy14;
				var bx14 = 0;
				var by14 = 0;
				var p214 = edgePoly9.length;
				var count9 = 0;
				var _g47 = 0;
				var _g122 = totalSteps14 + 1;
				while(_g47 < _g122) {
					var i24 = _g47++;
					cx14 = ax_4 + radius14 * Math.sin(angle14);
					cy14 = ay_4 + radius14 * Math.cos(angle14);
					if(i24 != 0) {
						var t58 = new trilateral_tri_Trilateral(ax_4,ay_4,bx14,by14,cx14,cy14);
						out14[out14.length] = t58;
						edgePoly9[p214++] = cx14;
						edgePoly9[p214++] = cy14;
					}
					angle14 += step29;
					bx14 = cx14;
					by14 = cy14;
				}
				var trilateralArray9 = out14;
				var this211 = _this4.triArr;
				var _g48 = 0;
				while(_g48 < trilateralArray9.length) {
					var t59 = trilateralArray9[_g48];
					++_g48;
					this211[this211.length] = t59;
				}
			}
			_this4.kax = _this4.dxPrev;
			_this4.kay = _this4.dyPrev;
			_this4.kbx = _this4.dx;
			_this4.kby = _this4.dy;
			_this4.ncx = _this4.exPrev;
			_this4.ncy = _this4.eyPrev;
			_this4.kcx = _this4.ex;
			_this4.kcy = _this4.ey;
			if(_this4.count != 0) {
				if(clockWise4) {
					var this212 = _this4.triArr;
					var tri66 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.dxOld,_this4.dyOld,_this4.jx,_this4.jy,0);
					this212[this212.length] = tri66;
					var this213 = _this4.triArr;
					var tri67 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.exPrev,_this4.eyPrev,_this4.jx,_this4.jy,0);
					this213[this213.length] = tri67;
				} else {
					var this214 = _this4.triArr;
					var tri68 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.exOld,_this4.eyOld,_this4.jx,_this4.jy,0);
					this214[this214.length] = tri68;
					var this215 = _this4.triArr;
					var tri69 = new trilateral_tri_Trilateral(_this4.ax,_this4.ay,_this4.dxPrev,_this4.dyPrev,_this4.jx,_this4.jy,0);
					this215[this215.length] = tri69;
				}
			}
			_this4.jxOld = _this4.jx;
			_this4.jyOld = _this4.jy;
			_this4.lastClock = clockWise4;
			_this4.count++;
			var l5 = path.points.length;
			var p6 = path.points[l5 - 1];
			var l24 = p6.length;
			p6[l24] = 700;
			p6[l24 + 1] = 450;
			var d4 = path.dim[path.dim.length - 1];
			if(700 < d4.minX) {
				d4.minX = 700;
			}
			if(700 > d4.maxX) {
				d4.maxX = 700;
			}
			if(450 < d4.minY) {
				d4.minY = 450;
			}
			if(450 > d4.maxY) {
				d4.maxY = 450;
			}
			path.x = 700;
			path.y = 450;
		}
		var repeat5 = path.x == 200 && path.y == 450;
		if(!repeat5) {
			if(path.widthFunction != null) {
				path.width = path.widthFunction(path.width,path.x,path.x,200,450);
			}
			var _this5 = path.contour;
			var ax_5 = path.x;
			var ay_5 = path.y;
			var width_5 = path.width;
			var oldAngle5 = _this5.dx != null ? _this5.angle1 : null;
			_this5.halfA = Math.PI / 2;
			_this5.ax = 200;
			_this5.ay = 450;
			_this5.bx = ax_5;
			_this5.by = ay_5;
			_this5.beta = Math.PI / 2 - _this5.halfA;
			_this5.r = width_5 / 2 * Math.cos(_this5.beta);
			_this5.theta = Math.atan2(_this5.ay - _this5.by,_this5.ax - _this5.bx);
			if(_this5.theta > 0) {
				if(_this5.halfA < 0) {
					_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
					_this5.angle1 = _this5.theta - _this5.halfA;
				} else {
					_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
					_this5.angle2 = _this5.theta + _this5.halfA;
				}
			} else if(_this5.halfA > 0) {
				_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
				_this5.angle2 = _this5.theta + _this5.halfA;
			} else {
				_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
				_this5.angle1 = _this5.theta - _this5.halfA;
			}
			if(_this5.dxPrev != null) {
				_this5.dxOld = _this5.dxPrev;
			}
			if(_this5.dyPrev != null) {
				_this5.dyOld = _this5.dyPrev;
			}
			if(_this5.exPrev != null) {
				_this5.exOld = _this5.exPrev;
			}
			if(_this5.eyPrev != null) {
				_this5.eyOld = _this5.eyPrev;
			}
			if(_this5.dx != null) {
				_this5.dxPrev = _this5.dx;
			}
			if(_this5.dy != null) {
				_this5.dyPrev = _this5.dy;
			}
			if(_this5.ex != null) {
				_this5.exPrev = _this5.ex;
			}
			if(_this5.ey != null) {
				_this5.eyPrev = _this5.ey;
			}
			_this5.dx = _this5.bx + _this5.r * Math.cos(_this5.angle1);
			_this5.dy = _this5.by + _this5.r * Math.sin(_this5.angle1);
			_this5.ex = _this5.bx + _this5.r * Math.cos(_this5.angle2);
			_this5.ey = _this5.by + _this5.r * Math.sin(_this5.angle2);
			_this5.ax = ax_5;
			_this5.ay = ay_5;
			_this5.bx = 200;
			_this5.by = 450;
			_this5.theta = Math.atan2(_this5.ay - _this5.by,_this5.ax - _this5.bx);
			if(_this5.theta > 0) {
				if(_this5.halfA < 0) {
					_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
					_this5.angle1 = _this5.theta - _this5.halfA;
				} else {
					_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
					_this5.angle2 = _this5.theta + _this5.halfA;
				}
			} else if(_this5.halfA > 0) {
				_this5.angle1 = _this5.theta + _this5.halfA - Math.PI;
				_this5.angle2 = _this5.theta + _this5.halfA;
			} else {
				_this5.angle2 = _this5.theta + _this5.halfA + Math.PI / 2;
				_this5.angle1 = _this5.theta - _this5.halfA;
			}
			if(_this5.dxPrev != null) {
				_this5.dxOld = _this5.dxPrev;
			}
			if(_this5.dyPrev != null) {
				_this5.dyOld = _this5.dyPrev;
			}
			if(_this5.exPrev != null) {
				_this5.exOld = _this5.exPrev;
			}
			if(_this5.eyPrev != null) {
				_this5.eyOld = _this5.eyPrev;
			}
			if(_this5.dx != null) {
				_this5.dxPrev = _this5.dx;
			}
			if(_this5.dy != null) {
				_this5.dyPrev = _this5.dy;
			}
			if(_this5.ex != null) {
				_this5.exPrev = _this5.ex;
			}
			if(_this5.ey != null) {
				_this5.eyPrev = _this5.ey;
			}
			_this5.dx = _this5.bx + _this5.r * Math.cos(_this5.angle1);
			_this5.dy = _this5.by + _this5.r * Math.sin(_this5.angle1);
			_this5.ex = _this5.bx + _this5.r * Math.cos(_this5.angle2);
			_this5.ey = _this5.by + _this5.r * Math.sin(_this5.angle2);
			var x10 = _this5.dxOld - 200;
			var y10 = _this5.dyOld - 450;
			var x11 = _this5.exOld - 200;
			var y11 = _this5.eyOld - 450;
			var clockWise5 = x10 * x10 + y10 * y10 > x11 * x11 + y11 * y11;
			var theta05;
			var theta112;
			if(clockWise5) {
				theta05 = -Math.atan2(_this5.ay - _this5.dyOld,_this5.ax - _this5.dxOld) - Math.PI / 2;
				theta112 = -Math.atan2(_this5.ay - _this5.eyPrev,_this5.ax - _this5.exPrev) - Math.PI / 2;
			} else {
				theta05 = -Math.atan2(_this5.ay - _this5.eyOld,_this5.ax - _this5.exOld) - Math.PI / 2;
				theta112 = -Math.atan2(_this5.ay - _this5.dyPrev,_this5.ax - _this5.dxPrev) - Math.PI / 2;
			}
			var dif50;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f85;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f85 = theta05;
				} else {
					var a85 = theta05 % (2 * Math.PI);
					f85 = a85 >= 0 ? a85 : a85 + 2 * Math.PI;
				}
				var this216 = f85;
				var za40 = this216;
				var f86;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f86 = theta112;
				} else {
					var a86 = theta112 % (2 * Math.PI);
					f86 = a86 >= 0 ? a86 : a86 + 2 * Math.PI;
				}
				var this217 = f86;
				var zb40 = this217;
				var fa40 = za40;
				var fb40 = zb40;
				var theta43 = Math.abs(fa40 - fb40);
				var clockwise40 = theta05 < theta112;
				var dif51 = clockwise40 ? theta43 : -theta43;
				dif50 = dif51 > 0 ? dif51 : 2 * Math.PI + dif51;
				break;
			case 1:
				var f87;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f87 = theta05;
				} else {
					var a87 = theta05 % (2 * Math.PI);
					f87 = a87 >= 0 ? a87 : a87 + 2 * Math.PI;
				}
				var this218 = f87;
				var za41 = this218;
				var f88;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f88 = theta112;
				} else {
					var a88 = theta112 % (2 * Math.PI);
					f88 = a88 >= 0 ? a88 : a88 + 2 * Math.PI;
				}
				var this219 = f88;
				var zb41 = this219;
				var fa41 = za41;
				var fb41 = zb41;
				var theta44 = Math.abs(fa41 - fb41);
				var clockwise41 = theta05 < theta112;
				var dif52 = clockwise41 ? theta44 : -theta44;
				dif50 = dif52 < 0 ? dif52 : -2 * Math.PI + dif52;
				break;
			case 2:
				var f89;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f89 = theta05;
				} else {
					var a89 = theta05 % (2 * Math.PI);
					f89 = a89 >= 0 ? a89 : a89 + 2 * Math.PI;
				}
				var this220 = f89;
				var za42 = this220;
				var f90;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f90 = theta112;
				} else {
					var a90 = theta112 % (2 * Math.PI);
					f90 = a90 >= 0 ? a90 : a90 + 2 * Math.PI;
				}
				var this221 = f90;
				var zb42 = this221;
				var fa42 = za42;
				var fb42 = zb42;
				var theta45 = Math.abs(fa42 - fb42);
				var smallest10 = theta45 <= Math.PI;
				var clockwise42 = theta05 < theta112;
				var dif53 = clockwise42 ? theta45 : -theta45;
				dif50 = smallest10 ? dif53 : clockwise42 ? -(2 * Math.PI - theta45) : 2 * Math.PI - theta45;
				break;
			case 3:
				var f91;
				if(theta05 >= 0 && theta05 > Math.PI) {
					f91 = theta05;
				} else {
					var a91 = theta05 % (2 * Math.PI);
					f91 = a91 >= 0 ? a91 : a91 + 2 * Math.PI;
				}
				var this222 = f91;
				var za43 = this222;
				var f92;
				if(theta112 >= 0 && theta112 > Math.PI) {
					f92 = theta112;
				} else {
					var a92 = theta112 % (2 * Math.PI);
					f92 = a92 >= 0 ? a92 : a92 + 2 * Math.PI;
				}
				var this223 = f92;
				var zb43 = this223;
				var fa43 = za43;
				var fb43 = zb43;
				var theta46 = Math.abs(fa43 - fb43);
				var largest10 = theta46 > Math.PI;
				var clockwise43 = theta05 < theta112;
				var dif54 = clockwise43 ? theta46 : -theta46;
				dif50 = largest10 ? dif54 : clockwise43 ? -(2 * Math.PI - theta46) : 2 * Math.PI - theta46;
				break;
			}
			if(_this5.count != 0) {
				var gamma10 = Math.abs(dif50) / 2;
				var h5 = width_5 / 2 / Math.cos(gamma10);
				var f93;
				if(theta05 <= Math.PI && theta05 > -Math.PI) {
					f93 = theta05;
				} else {
					var a93 = (theta05 + Math.PI) % (2 * Math.PI);
					f93 = a93 >= 0 ? a93 - Math.PI : a93 + Math.PI;
				}
				var this224 = f93;
				var start6 = this224;
				var start25 = start6;
				var delta5 = start25 + dif50 / 2 + Math.PI;
				_this5.jx = _this5.ax + h5 * Math.sin(delta5);
				_this5.jy = _this5.ay + h5 * Math.cos(delta5);
			}
			if(_this5.count == 0 && (_this5.endLine == 1 || _this5.endLine == 3)) {
				var ax5 = _this5.ax;
				var ay5 = _this5.ay;
				var radius15 = width_5 / 2;
				var beta5 = -_this5.angle1 - Math.PI / 2;
				var gamma11 = -_this5.angle1 - Math.PI / 2 + Math.PI;
				var temp5 = [];
				var this225 = _this5.triArr;
				var t60 = [];
				var this226;
				if(t60 == null) {
					var t61 = [];
					var this227 = t61 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t61;
					this226 = this227;
				} else {
					this226 = t60;
				}
				var this228 = this226;
				var out15 = this228;
				var pi15 = Math.PI;
				var step30 = pi15 * 2 / 36;
				var dif55;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f94;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f94 = beta5;
					} else {
						var a94 = beta5 % (2 * Math.PI);
						f94 = a94 >= 0 ? a94 : a94 + 2 * Math.PI;
					}
					var this229 = f94;
					var za44 = this229;
					var f95;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f95 = gamma11;
					} else {
						var a95 = gamma11 % (2 * Math.PI);
						f95 = a95 >= 0 ? a95 : a95 + 2 * Math.PI;
					}
					var this230 = f95;
					var zb44 = this230;
					var fa44 = za44;
					var fb44 = zb44;
					var theta47 = Math.abs(fa44 - fb44);
					var clockwise44 = beta5 < gamma11;
					var dif56 = clockwise44 ? theta47 : -theta47;
					dif55 = dif56 > 0 ? dif56 : 2 * Math.PI + dif56;
					break;
				case 1:
					var f96;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f96 = beta5;
					} else {
						var a96 = beta5 % (2 * Math.PI);
						f96 = a96 >= 0 ? a96 : a96 + 2 * Math.PI;
					}
					var this231 = f96;
					var za45 = this231;
					var f97;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f97 = gamma11;
					} else {
						var a97 = gamma11 % (2 * Math.PI);
						f97 = a97 >= 0 ? a97 : a97 + 2 * Math.PI;
					}
					var this232 = f97;
					var zb45 = this232;
					var fa45 = za45;
					var fb45 = zb45;
					var theta48 = Math.abs(fa45 - fb45);
					var clockwise45 = beta5 < gamma11;
					var dif57 = clockwise45 ? theta48 : -theta48;
					dif55 = dif57 < 0 ? dif57 : -2 * Math.PI + dif57;
					break;
				case 2:
					var f98;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f98 = beta5;
					} else {
						var a98 = beta5 % (2 * Math.PI);
						f98 = a98 >= 0 ? a98 : a98 + 2 * Math.PI;
					}
					var this233 = f98;
					var za46 = this233;
					var f99;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f99 = gamma11;
					} else {
						var a99 = gamma11 % (2 * Math.PI);
						f99 = a99 >= 0 ? a99 : a99 + 2 * Math.PI;
					}
					var this234 = f99;
					var zb46 = this234;
					var fa46 = za46;
					var fb46 = zb46;
					var theta49 = Math.abs(fa46 - fb46);
					var smallest11 = theta49 <= Math.PI;
					var clockwise46 = beta5 < gamma11;
					var dif58 = clockwise46 ? theta49 : -theta49;
					dif55 = smallest11 ? dif58 : clockwise46 ? -(2 * Math.PI - theta49) : 2 * Math.PI - theta49;
					break;
				case 3:
					var f100;
					if(beta5 >= 0 && beta5 > Math.PI) {
						f100 = beta5;
					} else {
						var a100 = beta5 % (2 * Math.PI);
						f100 = a100 >= 0 ? a100 : a100 + 2 * Math.PI;
					}
					var this235 = f100;
					var za47 = this235;
					var f101;
					if(gamma11 >= 0 && gamma11 > Math.PI) {
						f101 = gamma11;
					} else {
						var a101 = gamma11 % (2 * Math.PI);
						f101 = a101 >= 0 ? a101 : a101 + 2 * Math.PI;
					}
					var this236 = f101;
					var zb47 = this236;
					var fa47 = za47;
					var fb47 = zb47;
					var theta50 = Math.abs(fa47 - fb47);
					var largest11 = theta50 > Math.PI;
					var clockwise47 = beta5 < gamma11;
					var dif59 = clockwise47 ? theta50 : -theta50;
					dif55 = largest11 ? dif59 : clockwise47 ? -(2 * Math.PI - theta50) : 2 * Math.PI - theta50;
					break;
				}
				var positive15 = dif55 >= 0;
				var totalSteps15 = Math.ceil(Math.abs(dif55) / step30);
				var step31 = dif55 / totalSteps15;
				var angle15 = beta5;
				var cx15;
				var cy15;
				var bx15 = 0;
				var by15 = 0;
				var p215 = temp5.length;
				var _g49 = 0;
				var _g123 = totalSteps15 + 1;
				while(_g49 < _g123) {
					var i25 = _g49++;
					cx15 = ax5 + radius15 * Math.sin(angle15);
					cy15 = ay5 + radius15 * Math.cos(angle15);
					temp5[p215++] = cx15;
					temp5[p215++] = cy15;
					if(i25 != 0) {
						var t62 = new trilateral_tri_Trilateral(ax5,ay5,bx15,by15,cx15,cy15);
						out15[out15.length] = t62;
					}
					angle15 += step31;
					bx15 = cx15;
					by15 = cy15;
				}
				var triArr5 = out15;
				var _g50 = 0;
				while(_g50 < triArr5.length) {
					var t63 = triArr5[_g50];
					++_g50;
					this225[this225.length] = t63;
				}
				var pA5 = _this5.pointsAnti.length;
				var len5 = temp5.length / 2 | 0;
				var p45 = temp5.length / 4 | 0;
				var _g51 = 0;
				var _g124 = p45;
				while(_g51 < _g124) {
					var i26 = _g51++;
					_this5.pointsAnti[pA5++] = temp5[len5 - 2 * i26 + 1];
					_this5.pointsAnti[pA5++] = temp5[len5 - 2 * i26];
				}
				var pC5 = _this5.pointsClock.length;
				var _g212 = 0;
				var _g311 = p45;
				while(_g212 < _g311) {
					var i27 = _g212++;
					_this5.pointsClock[pC5++] = temp5[i27 * 2 + len5 + 1];
					_this5.pointsClock[pC5++] = temp5[i27 * 2 + len5];
				}
			}
			if(_this5.count != 0) {
				_this5.addQuads(clockWise5,width_5);
			}
			_this5.quadIndex = _this5.triArr.length;
			if(_this5.count == 0) {
				_this5.penultimateAX = _this5.dxPrev;
				_this5.penultimateAY = _this5.dyPrev;
				_this5.lastAntiX = _this5.ex;
				_this5.lastAntiY = _this5.ey;
				_this5.penultimateCX = _this5.dx;
				_this5.penultimateCY = _this5.dy;
				_this5.lastClockX = _this5.exPrev;
				_this5.lastClockY = _this5.eyPrev;
				var this237 = _this5.triArr;
				var tri70 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
				this237[this237.length] = tri70;
				var this238 = _this5.triArr;
				var tri71 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
				this238[this238.length] = tri71;
			} else {
				if(clockWise5 && !_this5.lastClock) {
					_this5.penultimateAX = _this5.jx;
					_this5.penultimateAY = _this5.jy;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.exPrev;
					_this5.lastClockY = _this5.eyPrev;
					var this239 = _this5.triArr;
					var tri72 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this239[this239.length] = tri72;
					var this240 = _this5.triArr;
					var tri73 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
					this240[this240.length] = tri73;
				}
				if(clockWise5 && _this5.lastClock) {
					_this5.penultimateAX = _this5.jx;
					_this5.penultimateAY = _this5.jy;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.exPrev;
					_this5.lastClockY = _this5.eyPrev;
					var this241 = _this5.triArr;
					var tri74 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this241[this241.length] = tri74;
					var this242 = _this5.triArr;
					var tri75 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.exPrev,_this5.eyPrev,0);
					this242[this242.length] = tri75;
				}
				if(!clockWise5 && !_this5.lastClock) {
					_this5.penultimateCX = _this5.dx;
					_this5.penultimateCY = _this5.dy;
					_this5.lastClockX = _this5.jx;
					_this5.lastClockY = _this5.jy;
					_this5.penultimateAX = _this5.dxPrev;
					_this5.penultimateAY = _this5.dyPrev;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					var this243 = _this5.triArr;
					var tri76 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.jx,_this5.jy,0);
					this243[this243.length] = tri76;
					var this244 = _this5.triArr;
					var tri77 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this244[this244.length] = tri77;
				}
				if(!clockWise5 && _this5.lastClock) {
					_this5.penultimateAX = _this5.dxPrev;
					_this5.penultimateAY = _this5.dyPrev;
					_this5.lastAntiX = _this5.ex;
					_this5.lastAntiY = _this5.ey;
					_this5.penultimateCX = _this5.jx;
					_this5.penultimateCY = _this5.jy;
					_this5.lastClockX = _this5.dx;
					_this5.lastClockY = _this5.dy;
					var this245 = _this5.triArr;
					var tri78 = new trilateral_tri_Trilateral(_this5.jx,_this5.jy,_this5.dx,_this5.dy,_this5.ex,_this5.ey,0);
					this245[this245.length] = tri78;
					var this246 = _this5.triArr;
					var tri79 = new trilateral_tri_Trilateral(_this5.dxPrev,_this5.dyPrev,_this5.jx,_this5.jy,_this5.ex,_this5.ey,0);
					this246[this246.length] = tri79;
				}
			}
			if(clockWise5) {
				var radius16 = width_5 / 2;
				var edgePoly10 = _this5.pointsClock;
				var t64 = [];
				var this247;
				if(t64 == null) {
					var t65 = [];
					var this248 = t65 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t65;
					this247 = this248;
				} else {
					this247 = t64;
				}
				var this249 = this247;
				var out16 = this249;
				var pi16 = Math.PI;
				var step32 = pi16 * 2 / 36;
				var positive16 = dif50 >= 0;
				var totalSteps16 = Math.ceil(Math.abs(dif50) / step32);
				var step33 = dif50 / totalSteps16;
				var angle16 = theta05;
				var cx16;
				var cy16;
				var bx16 = 0;
				var by16 = 0;
				var p216 = edgePoly10.length;
				var count10 = 0;
				var _g52 = 0;
				var _g125 = totalSteps16 + 1;
				while(_g52 < _g125) {
					var i28 = _g52++;
					cx16 = ax_5 + radius16 * Math.sin(angle16);
					cy16 = ay_5 + radius16 * Math.cos(angle16);
					if(i28 != 0) {
						var t66 = new trilateral_tri_Trilateral(ax_5,ay_5,bx16,by16,cx16,cy16);
						out16[out16.length] = t66;
						edgePoly10[p216++] = cx16;
						edgePoly10[p216++] = cy16;
					}
					angle16 += step33;
					bx16 = cx16;
					by16 = cy16;
				}
				var trilateralArray10 = out16;
				var this250 = _this5.triArr;
				var _g53 = 0;
				while(_g53 < trilateralArray10.length) {
					var t67 = trilateralArray10[_g53];
					++_g53;
					this250[this250.length] = t67;
				}
			} else {
				var radius17 = width_5 / 2;
				var edgePoly11 = _this5.pointsAnti;
				var t68 = [];
				var this251;
				if(t68 == null) {
					var t69 = [];
					var this252 = t69 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t69;
					this251 = this252;
				} else {
					this251 = t68;
				}
				var this253 = this251;
				var out17 = this253;
				var pi17 = Math.PI;
				var step34 = pi17 * 2 / 36;
				var positive17 = dif50 >= 0;
				var totalSteps17 = Math.ceil(Math.abs(dif50) / step34);
				var step35 = dif50 / totalSteps17;
				var angle17 = theta05;
				var cx17;
				var cy17;
				var bx17 = 0;
				var by17 = 0;
				var p217 = edgePoly11.length;
				var count11 = 0;
				var _g54 = 0;
				var _g126 = totalSteps17 + 1;
				while(_g54 < _g126) {
					var i29 = _g54++;
					cx17 = ax_5 + radius17 * Math.sin(angle17);
					cy17 = ay_5 + radius17 * Math.cos(angle17);
					if(i29 != 0) {
						var t70 = new trilateral_tri_Trilateral(ax_5,ay_5,bx17,by17,cx17,cy17);
						out17[out17.length] = t70;
						edgePoly11[p217++] = cx17;
						edgePoly11[p217++] = cy17;
					}
					angle17 += step35;
					bx17 = cx17;
					by17 = cy17;
				}
				var trilateralArray11 = out17;
				var this254 = _this5.triArr;
				var _g55 = 0;
				while(_g55 < trilateralArray11.length) {
					var t71 = trilateralArray11[_g55];
					++_g55;
					this254[this254.length] = t71;
				}
			}
			_this5.kax = _this5.dxPrev;
			_this5.kay = _this5.dyPrev;
			_this5.kbx = _this5.dx;
			_this5.kby = _this5.dy;
			_this5.ncx = _this5.exPrev;
			_this5.ncy = _this5.eyPrev;
			_this5.kcx = _this5.ex;
			_this5.kcy = _this5.ey;
			if(_this5.count != 0) {
				if(clockWise5) {
					var this255 = _this5.triArr;
					var tri80 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.dxOld,_this5.dyOld,_this5.jx,_this5.jy,0);
					this255[this255.length] = tri80;
					var this256 = _this5.triArr;
					var tri81 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.exPrev,_this5.eyPrev,_this5.jx,_this5.jy,0);
					this256[this256.length] = tri81;
				} else {
					var this257 = _this5.triArr;
					var tri82 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.exOld,_this5.eyOld,_this5.jx,_this5.jy,0);
					this257[this257.length] = tri82;
					var this258 = _this5.triArr;
					var tri83 = new trilateral_tri_Trilateral(_this5.ax,_this5.ay,_this5.dxPrev,_this5.dyPrev,_this5.jx,_this5.jy,0);
					this258[this258.length] = tri83;
				}
			}
			_this5.jxOld = _this5.jx;
			_this5.jyOld = _this5.jy;
			_this5.lastClock = clockWise5;
			_this5.count++;
			var l6 = path.points.length;
			var p7 = path.points[l6 - 1];
			var l25 = p7.length;
			p7[l25] = 200;
			p7[l25 + 1] = 450;
			var d5 = path.dim[path.dim.length - 1];
			if(200 < d5.minX) {
				d5.minX = 200;
			}
			if(200 > d5.maxX) {
				d5.maxX = 200;
			}
			if(450 < d5.minY) {
				d5.minY = 450;
			}
			if(450 > d5.maxY) {
				d5.maxY = 450;
			}
			path.x = 200;
			path.y = 450;
		}
		path.moveTo(0.,0.);
		var this259 = this.triangles;
		var triArr6 = path.trilateralArray;
		var colorID = this.appColors.indexOf(16744192);
		var tri84;
		var _g56 = 0;
		while(_g56 < triArr6.length) {
			var t72 = triArr6[_g56];
			++_g56;
			if(t72 != null) {
				var t73 = Object.create(trilateral_tri_Triangle.prototype);
				t73.id = 10;
				t73.ax = t72.ax;
				t73.ay = t72.ay;
				t73.bx = t72.bx;
				t73.by = t72.by;
				t73.cx = t72.cx;
				t73.cy = t72.cy;
				t73.mark = t72.mark;
				t73.depth = 0;
				t73.alpha = 1.;
				t73.colorID = colorID;
				t73.colorA = colorID;
				t73.colorB = colorID;
				t73.colorC = colorID;
				t73.windingAdjusted = t72.windingAdjusted;
				tri84 = t73;
				this259[this259.length] = tri84;
			}
		}
	}
	,pieTests: function() {
		var pieRadius = this.quarter / 3;
		var this1 = this.triangles;
		var ax = this.topLeft.x;
		var ay = this.topLeft.y;
		var beta = Math.PI;
		var gamma = Math.PI / 16;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + pieRadius * Math.sin(angle);
			cy = ay + pieRadius * Math.cos(angle);
			if(i != 0) {
				var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t2;
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var tri;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t3 = triArr[_g2];
			++_g2;
			if(t3 != null) {
				var t4 = Object.create(trilateral_tri_Triangle.prototype);
				t4.id = 0;
				t4.ax = t3.ax;
				t4.ay = t3.ay;
				t4.bx = t3.bx;
				t4.by = t3.by;
				t4.cx = t3.cx;
				t4.cy = t3.cy;
				t4.mark = t3.mark;
				t4.depth = 0;
				t4.alpha = 1.;
				t4.colorID = 1;
				t4.colorA = 1;
				t4.colorB = 1;
				t4.colorC = 1;
				t4.windingAdjusted = t3.windingAdjusted;
				tri = t4;
				this1[this1.length] = tri;
			}
		}
		var this13 = this.triangles;
		var ax1 = this.topRight.x;
		var ay1 = this.topRight.y;
		var beta1 = Math.PI;
		var gamma1 = Math.PI / 16;
		var t5 = [];
		var this14;
		if(t5 == null) {
			var t6 = [];
			var this15 = t6 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t6;
			this14 = this15;
		} else {
			this14 = t5;
		}
		var this16 = this14;
		var out1 = this16;
		var pi1 = Math.PI;
		var step2 = pi1 * 2 / 36;
		var dif5;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f8;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f8 = beta1;
			} else {
				var a8 = beta1 % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
			}
			var this17 = f8;
			var za4 = this17;
			var f9;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f9 = gamma1;
			} else {
				var a9 = gamma1 % (2 * Math.PI);
				f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
			}
			var this18 = f9;
			var zb4 = this18;
			var fa4 = za4;
			var fb4 = zb4;
			var theta4 = Math.abs(fa4 - fb4);
			var clockwise4 = beta1 < gamma1;
			var dif6 = clockwise4 ? theta4 : -theta4;
			dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
			break;
		case 1:
			var f10;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f10 = beta1;
			} else {
				var a10 = beta1 % (2 * Math.PI);
				f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
			}
			var this19 = f10;
			var za5 = this19;
			var f11;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f11 = gamma1;
			} else {
				var a11 = gamma1 % (2 * Math.PI);
				f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
			}
			var this20 = f11;
			var zb5 = this20;
			var fa5 = za5;
			var fb5 = zb5;
			var theta5 = Math.abs(fa5 - fb5);
			var clockwise5 = beta1 < gamma1;
			var dif7 = clockwise5 ? theta5 : -theta5;
			dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
			break;
		case 2:
			var f12;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f12 = beta1;
			} else {
				var a12 = beta1 % (2 * Math.PI);
				f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
			}
			var this21 = f12;
			var za6 = this21;
			var f13;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f13 = gamma1;
			} else {
				var a13 = gamma1 % (2 * Math.PI);
				f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
			}
			var this22 = f13;
			var zb6 = this22;
			var fa6 = za6;
			var fb6 = zb6;
			var theta6 = Math.abs(fa6 - fb6);
			var smallest1 = theta6 <= Math.PI;
			var clockwise6 = beta1 < gamma1;
			var dif8 = clockwise6 ? theta6 : -theta6;
			dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
			break;
		case 3:
			var f14;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f14 = beta1;
			} else {
				var a14 = beta1 % (2 * Math.PI);
				f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
			}
			var this23 = f14;
			var za7 = this23;
			var f15;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f15 = gamma1;
			} else {
				var a15 = gamma1 % (2 * Math.PI);
				f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
			}
			var this24 = f15;
			var zb7 = this24;
			var fa7 = za7;
			var fb7 = zb7;
			var theta7 = Math.abs(fa7 - fb7);
			var largest1 = theta7 > Math.PI;
			var clockwise7 = beta1 < gamma1;
			var dif9 = clockwise7 ? theta7 : -theta7;
			dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
			break;
		}
		var positive1 = dif5 >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
		var step3 = dif5 / totalSteps1;
		var angle1 = beta1;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var _g3 = 0;
		var _g11 = totalSteps1 + 1;
		while(_g3 < _g11) {
			var i1 = _g3++;
			cx1 = ax1 + pieRadius * Math.sin(angle1);
			cy1 = ay1 + pieRadius * Math.cos(angle1);
			if(i1 != 0) {
				var t7 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,cx1,cy1);
				out1[out1.length] = t7;
			}
			angle1 += step3;
			bx1 = cx1;
			by1 = cy1;
		}
		var triArr1 = out1;
		var tri1;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t8 = triArr1[_g4];
			++_g4;
			if(t8 != null) {
				var t9 = Object.create(trilateral_tri_Triangle.prototype);
				t9.id = 0;
				t9.ax = t8.ax;
				t9.ay = t8.ay;
				t9.bx = t8.bx;
				t9.by = t8.by;
				t9.cx = t8.cx;
				t9.cy = t8.cy;
				t9.mark = t8.mark;
				t9.depth = 0;
				t9.alpha = 1.;
				t9.colorID = 2;
				t9.colorA = 2;
				t9.colorB = 2;
				t9.colorC = 2;
				t9.windingAdjusted = t8.windingAdjusted;
				tri1 = t9;
				this13[this13.length] = tri1;
			}
		}
		var this25 = this.triangles;
		var ax2 = this.bottomLeft.x;
		var ay2 = this.bottomLeft.y;
		var beta2 = Math.PI;
		var gamma2 = Math.PI / 16;
		var t10 = [];
		var this26;
		if(t10 == null) {
			var t11 = [];
			var this27 = t11 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t11;
			this26 = this27;
		} else {
			this26 = t10;
		}
		var this28 = this26;
		var out2 = this28;
		var pi2 = Math.PI;
		var step4 = pi2 * 2 / 36;
		var dif10;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f16;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f16 = beta2;
			} else {
				var a16 = beta2 % (2 * Math.PI);
				f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
			}
			var this29 = f16;
			var za8 = this29;
			var f17;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f17 = gamma2;
			} else {
				var a17 = gamma2 % (2 * Math.PI);
				f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
			}
			var this30 = f17;
			var zb8 = this30;
			var fa8 = za8;
			var fb8 = zb8;
			var theta8 = Math.abs(fa8 - fb8);
			var clockwise8 = beta2 < gamma2;
			var dif11 = clockwise8 ? theta8 : -theta8;
			dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
			break;
		case 1:
			var f18;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f18 = beta2;
			} else {
				var a18 = beta2 % (2 * Math.PI);
				f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
			}
			var this31 = f18;
			var za9 = this31;
			var f19;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f19 = gamma2;
			} else {
				var a19 = gamma2 % (2 * Math.PI);
				f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
			}
			var this32 = f19;
			var zb9 = this32;
			var fa9 = za9;
			var fb9 = zb9;
			var theta9 = Math.abs(fa9 - fb9);
			var clockwise9 = beta2 < gamma2;
			var dif12 = clockwise9 ? theta9 : -theta9;
			dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
			break;
		case 2:
			var f20;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f20 = beta2;
			} else {
				var a20 = beta2 % (2 * Math.PI);
				f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
			}
			var this33 = f20;
			var za10 = this33;
			var f21;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f21 = gamma2;
			} else {
				var a21 = gamma2 % (2 * Math.PI);
				f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
			}
			var this34 = f21;
			var zb10 = this34;
			var fa10 = za10;
			var fb10 = zb10;
			var theta10 = Math.abs(fa10 - fb10);
			var smallest2 = theta10 <= Math.PI;
			var clockwise10 = beta2 < gamma2;
			var dif13 = clockwise10 ? theta10 : -theta10;
			dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
			break;
		case 3:
			var f22;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f22 = beta2;
			} else {
				var a22 = beta2 % (2 * Math.PI);
				f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
			}
			var this35 = f22;
			var za11 = this35;
			var f23;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f23 = gamma2;
			} else {
				var a23 = gamma2 % (2 * Math.PI);
				f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
			}
			var this36 = f23;
			var zb11 = this36;
			var fa11 = za11;
			var fb11 = zb11;
			var theta11 = Math.abs(fa11 - fb11);
			var largest2 = theta11 > Math.PI;
			var clockwise11 = beta2 < gamma2;
			var dif14 = clockwise11 ? theta11 : -theta11;
			dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
			break;
		}
		var positive2 = dif10 >= 0;
		var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
		var step5 = dif10 / totalSteps2;
		var angle2 = beta2;
		var cx2;
		var cy2;
		var bx2 = 0;
		var by2 = 0;
		var _g5 = 0;
		var _g12 = totalSteps2 + 1;
		while(_g5 < _g12) {
			var i2 = _g5++;
			cx2 = ax2 + pieRadius * Math.sin(angle2);
			cy2 = ay2 + pieRadius * Math.cos(angle2);
			if(i2 != 0) {
				var t12 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,cx2,cy2);
				out2[out2.length] = t12;
			}
			angle2 += step5;
			bx2 = cx2;
			by2 = cy2;
		}
		var triArr2 = out2;
		var tri2;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t13 = triArr2[_g6];
			++_g6;
			if(t13 != null) {
				var t14 = Object.create(trilateral_tri_Triangle.prototype);
				t14.id = 0;
				t14.ax = t13.ax;
				t14.ay = t13.ay;
				t14.bx = t13.bx;
				t14.by = t13.by;
				t14.cx = t13.cx;
				t14.cy = t13.cy;
				t14.mark = t13.mark;
				t14.depth = 0;
				t14.alpha = 1.;
				t14.colorID = 3;
				t14.colorA = 3;
				t14.colorB = 3;
				t14.colorC = 3;
				t14.windingAdjusted = t13.windingAdjusted;
				tri2 = t14;
				this25[this25.length] = tri2;
			}
		}
		var this37 = this.triangles;
		var ax3 = this.bottomRight.x;
		var ay3 = this.bottomRight.y;
		var beta3 = Math.PI;
		var gamma3 = Math.PI / 16;
		var t15 = [];
		var this38;
		if(t15 == null) {
			var t16 = [];
			var this39 = t16 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t16;
			this38 = this39;
		} else {
			this38 = t15;
		}
		var this40 = this38;
		var out3 = this40;
		var pi3 = Math.PI;
		var step6 = pi3 * 2 / 36;
		var dif15;
		switch(trilateral_angle_DifferencePreference.LARGE._hx_index) {
		case 0:
			var f24;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f24 = beta3;
			} else {
				var a24 = beta3 % (2 * Math.PI);
				f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
			}
			var this41 = f24;
			var za12 = this41;
			var f25;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f25 = gamma3;
			} else {
				var a25 = gamma3 % (2 * Math.PI);
				f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
			}
			var this42 = f25;
			var zb12 = this42;
			var fa12 = za12;
			var fb12 = zb12;
			var theta12 = Math.abs(fa12 - fb12);
			var clockwise12 = beta3 < gamma3;
			var dif16 = clockwise12 ? theta12 : -theta12;
			dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
			break;
		case 1:
			var f26;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f26 = beta3;
			} else {
				var a26 = beta3 % (2 * Math.PI);
				f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
			}
			var this43 = f26;
			var za13 = this43;
			var f27;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f27 = gamma3;
			} else {
				var a27 = gamma3 % (2 * Math.PI);
				f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
			}
			var this44 = f27;
			var zb13 = this44;
			var fa13 = za13;
			var fb13 = zb13;
			var theta13 = Math.abs(fa13 - fb13);
			var clockwise13 = beta3 < gamma3;
			var dif17 = clockwise13 ? theta13 : -theta13;
			dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
			break;
		case 2:
			var f28;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f28 = beta3;
			} else {
				var a28 = beta3 % (2 * Math.PI);
				f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
			}
			var this45 = f28;
			var za14 = this45;
			var f29;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f29 = gamma3;
			} else {
				var a29 = gamma3 % (2 * Math.PI);
				f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
			}
			var this46 = f29;
			var zb14 = this46;
			var fa14 = za14;
			var fb14 = zb14;
			var theta14 = Math.abs(fa14 - fb14);
			var smallest3 = theta14 <= Math.PI;
			var clockwise14 = beta3 < gamma3;
			var dif18 = clockwise14 ? theta14 : -theta14;
			dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
			break;
		case 3:
			var f30;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f30 = beta3;
			} else {
				var a30 = beta3 % (2 * Math.PI);
				f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
			}
			var this47 = f30;
			var za15 = this47;
			var f31;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f31 = gamma3;
			} else {
				var a31 = gamma3 % (2 * Math.PI);
				f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
			}
			var this48 = f31;
			var zb15 = this48;
			var fa15 = za15;
			var fb15 = zb15;
			var theta15 = Math.abs(fa15 - fb15);
			var largest3 = theta15 > Math.PI;
			var clockwise15 = beta3 < gamma3;
			var dif19 = clockwise15 ? theta15 : -theta15;
			dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
			break;
		}
		var positive3 = dif15 >= 0;
		var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
		var step7 = dif15 / totalSteps3;
		var angle3 = beta3;
		var cx3;
		var cy3;
		var bx3 = 0;
		var by3 = 0;
		var _g7 = 0;
		var _g13 = totalSteps3 + 1;
		while(_g7 < _g13) {
			var i3 = _g7++;
			cx3 = ax3 + pieRadius * Math.sin(angle3);
			cy3 = ay3 + pieRadius * Math.cos(angle3);
			if(i3 != 0) {
				var t17 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,cx3,cy3);
				out3[out3.length] = t17;
			}
			angle3 += step7;
			bx3 = cx3;
			by3 = cy3;
		}
		var triArr3 = out3;
		var tri3;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t18 = triArr3[_g8];
			++_g8;
			if(t18 != null) {
				var t19 = Object.create(trilateral_tri_Triangle.prototype);
				t19.id = 0;
				t19.ax = t18.ax;
				t19.ay = t18.ay;
				t19.bx = t18.bx;
				t19.by = t18.by;
				t19.cx = t18.cx;
				t19.cy = t18.cy;
				t19.mark = t18.mark;
				t19.depth = 0;
				t19.alpha = 1.;
				t19.colorID = 4;
				t19.colorA = 4;
				t19.colorB = 4;
				t19.colorC = 4;
				t19.windingAdjusted = t18.windingAdjusted;
				tri3 = t19;
				this37[this37.length] = tri3;
			}
		}
	}
	,pieArc: function() {
		var pieRadius = this.quarter / 3;
		var this1 = this.triangles;
		var ax = this.topLeft.x;
		var ay = this.topLeft.y;
		var radius = pieRadius + 40;
		var beta = Math.PI;
		var gamma = Math.PI / 16;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var dx = 0;
		var dy = 0;
		var ex = 0;
		var ey = 0;
		var r2 = radius - 30;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			ex = ax + r2 * Math.sin(angle);
			ey = ay + r2 * Math.cos(angle);
			if(i != 0) {
				var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
				var t11 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
				out[out.length] = t0;
				out[out.length] = t11;
			}
			angle += step1;
			bx = cx;
			by = cy;
			dx = ex;
			dy = ey;
		}
		var triArr = out;
		var tri;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t2 = triArr[_g2];
			++_g2;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = 0;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = 2;
				t3.colorA = 2;
				t3.colorB = 2;
				t3.colorC = 2;
				t3.windingAdjusted = t2.windingAdjusted;
				tri = t3;
				this1[this1.length] = tri;
			}
		}
		var this13 = this.triangles;
		var ax1 = this.topRight.x;
		var ay1 = this.topRight.y;
		var radius1 = pieRadius + 40;
		var beta1 = Math.PI;
		var gamma1 = Math.PI / 16;
		var t4 = [];
		var this14;
		if(t4 == null) {
			var t5 = [];
			var this15 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
			this14 = this15;
		} else {
			this14 = t4;
		}
		var this16 = this14;
		var out1 = this16;
		var pi1 = Math.PI;
		var step2 = pi1 * 2 / 36;
		var dif5;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f8;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f8 = beta1;
			} else {
				var a8 = beta1 % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
			}
			var this17 = f8;
			var za4 = this17;
			var f9;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f9 = gamma1;
			} else {
				var a9 = gamma1 % (2 * Math.PI);
				f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
			}
			var this18 = f9;
			var zb4 = this18;
			var fa4 = za4;
			var fb4 = zb4;
			var theta4 = Math.abs(fa4 - fb4);
			var clockwise4 = beta1 < gamma1;
			var dif6 = clockwise4 ? theta4 : -theta4;
			dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
			break;
		case 1:
			var f10;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f10 = beta1;
			} else {
				var a10 = beta1 % (2 * Math.PI);
				f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
			}
			var this19 = f10;
			var za5 = this19;
			var f11;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f11 = gamma1;
			} else {
				var a11 = gamma1 % (2 * Math.PI);
				f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
			}
			var this20 = f11;
			var zb5 = this20;
			var fa5 = za5;
			var fb5 = zb5;
			var theta5 = Math.abs(fa5 - fb5);
			var clockwise5 = beta1 < gamma1;
			var dif7 = clockwise5 ? theta5 : -theta5;
			dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
			break;
		case 2:
			var f12;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f12 = beta1;
			} else {
				var a12 = beta1 % (2 * Math.PI);
				f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
			}
			var this21 = f12;
			var za6 = this21;
			var f13;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f13 = gamma1;
			} else {
				var a13 = gamma1 % (2 * Math.PI);
				f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
			}
			var this22 = f13;
			var zb6 = this22;
			var fa6 = za6;
			var fb6 = zb6;
			var theta6 = Math.abs(fa6 - fb6);
			var smallest1 = theta6 <= Math.PI;
			var clockwise6 = beta1 < gamma1;
			var dif8 = clockwise6 ? theta6 : -theta6;
			dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
			break;
		case 3:
			var f14;
			if(beta1 >= 0 && beta1 > Math.PI) {
				f14 = beta1;
			} else {
				var a14 = beta1 % (2 * Math.PI);
				f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
			}
			var this23 = f14;
			var za7 = this23;
			var f15;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f15 = gamma1;
			} else {
				var a15 = gamma1 % (2 * Math.PI);
				f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
			}
			var this24 = f15;
			var zb7 = this24;
			var fa7 = za7;
			var fb7 = zb7;
			var theta7 = Math.abs(fa7 - fb7);
			var largest1 = theta7 > Math.PI;
			var clockwise7 = beta1 < gamma1;
			var dif9 = clockwise7 ? theta7 : -theta7;
			dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
			break;
		}
		var positive1 = dif5 >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
		var step3 = dif5 / totalSteps1;
		var angle1 = beta1;
		var cx1;
		var cy1;
		var bx1 = 0;
		var by1 = 0;
		var dx1 = 0;
		var dy1 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = radius1 - 30;
		var _g3 = 0;
		var _g11 = totalSteps1 + 1;
		while(_g3 < _g11) {
			var i1 = _g3++;
			cx1 = ax1 + radius1 * Math.sin(angle1);
			cy1 = ay1 + radius1 * Math.cos(angle1);
			ex1 = ax1 + r21 * Math.sin(angle1);
			ey1 = ay1 + r21 * Math.cos(angle1);
			if(i1 != 0) {
				var t01 = new trilateral_tri_Trilateral(dx1,dy1,bx1,by1,cx1,cy1);
				var t12 = new trilateral_tri_Trilateral(dx1,dy1,cx1,cy1,ex1,ey1);
				out1[out1.length] = t01;
				out1[out1.length] = t12;
			}
			angle1 += step3;
			bx1 = cx1;
			by1 = cy1;
			dx1 = ex1;
			dy1 = ey1;
		}
		var triArr1 = out1;
		var tri1;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t6 = triArr1[_g4];
			++_g4;
			if(t6 != null) {
				var t7 = Object.create(trilateral_tri_Triangle.prototype);
				t7.id = 0;
				t7.ax = t6.ax;
				t7.ay = t6.ay;
				t7.bx = t6.bx;
				t7.by = t6.by;
				t7.cx = t6.cx;
				t7.cy = t6.cy;
				t7.mark = t6.mark;
				t7.depth = 0;
				t7.alpha = 1.;
				t7.colorID = 3;
				t7.colorA = 3;
				t7.colorB = 3;
				t7.colorC = 3;
				t7.windingAdjusted = t6.windingAdjusted;
				tri1 = t7;
				this13[this13.length] = tri1;
			}
		}
		var this25 = this.triangles;
		var ax2 = this.bottomLeft.x;
		var ay2 = this.bottomLeft.y;
		var radius2 = pieRadius + 40;
		var beta2 = Math.PI;
		var gamma2 = Math.PI / 16;
		var t8 = [];
		var this26;
		if(t8 == null) {
			var t9 = [];
			var this27 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
			this26 = this27;
		} else {
			this26 = t8;
		}
		var this28 = this26;
		var out2 = this28;
		var pi2 = Math.PI;
		var step4 = pi2 * 2 / 36;
		var dif10;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f16;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f16 = beta2;
			} else {
				var a16 = beta2 % (2 * Math.PI);
				f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
			}
			var this29 = f16;
			var za8 = this29;
			var f17;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f17 = gamma2;
			} else {
				var a17 = gamma2 % (2 * Math.PI);
				f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
			}
			var this30 = f17;
			var zb8 = this30;
			var fa8 = za8;
			var fb8 = zb8;
			var theta8 = Math.abs(fa8 - fb8);
			var clockwise8 = beta2 < gamma2;
			var dif11 = clockwise8 ? theta8 : -theta8;
			dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
			break;
		case 1:
			var f18;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f18 = beta2;
			} else {
				var a18 = beta2 % (2 * Math.PI);
				f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
			}
			var this31 = f18;
			var za9 = this31;
			var f19;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f19 = gamma2;
			} else {
				var a19 = gamma2 % (2 * Math.PI);
				f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
			}
			var this32 = f19;
			var zb9 = this32;
			var fa9 = za9;
			var fb9 = zb9;
			var theta9 = Math.abs(fa9 - fb9);
			var clockwise9 = beta2 < gamma2;
			var dif12 = clockwise9 ? theta9 : -theta9;
			dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
			break;
		case 2:
			var f20;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f20 = beta2;
			} else {
				var a20 = beta2 % (2 * Math.PI);
				f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
			}
			var this33 = f20;
			var za10 = this33;
			var f21;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f21 = gamma2;
			} else {
				var a21 = gamma2 % (2 * Math.PI);
				f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
			}
			var this34 = f21;
			var zb10 = this34;
			var fa10 = za10;
			var fb10 = zb10;
			var theta10 = Math.abs(fa10 - fb10);
			var smallest2 = theta10 <= Math.PI;
			var clockwise10 = beta2 < gamma2;
			var dif13 = clockwise10 ? theta10 : -theta10;
			dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
			break;
		case 3:
			var f22;
			if(beta2 >= 0 && beta2 > Math.PI) {
				f22 = beta2;
			} else {
				var a22 = beta2 % (2 * Math.PI);
				f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
			}
			var this35 = f22;
			var za11 = this35;
			var f23;
			if(gamma2 >= 0 && gamma2 > Math.PI) {
				f23 = gamma2;
			} else {
				var a23 = gamma2 % (2 * Math.PI);
				f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
			}
			var this36 = f23;
			var zb11 = this36;
			var fa11 = za11;
			var fb11 = zb11;
			var theta11 = Math.abs(fa11 - fb11);
			var largest2 = theta11 > Math.PI;
			var clockwise11 = beta2 < gamma2;
			var dif14 = clockwise11 ? theta11 : -theta11;
			dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
			break;
		}
		var positive2 = dif10 >= 0;
		var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
		var step5 = dif10 / totalSteps2;
		var angle2 = beta2;
		var cx2;
		var cy2;
		var bx2 = 0;
		var by2 = 0;
		var dx2 = 0;
		var dy2 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = radius2 - 30;
		var _g5 = 0;
		var _g12 = totalSteps2 + 1;
		while(_g5 < _g12) {
			var i2 = _g5++;
			cx2 = ax2 + radius2 * Math.sin(angle2);
			cy2 = ay2 + radius2 * Math.cos(angle2);
			ex2 = ax2 + r22 * Math.sin(angle2);
			ey2 = ay2 + r22 * Math.cos(angle2);
			if(i2 != 0) {
				var t02 = new trilateral_tri_Trilateral(dx2,dy2,bx2,by2,cx2,cy2);
				var t13 = new trilateral_tri_Trilateral(dx2,dy2,cx2,cy2,ex2,ey2);
				out2[out2.length] = t02;
				out2[out2.length] = t13;
			}
			angle2 += step5;
			bx2 = cx2;
			by2 = cy2;
			dx2 = ex2;
			dy2 = ey2;
		}
		var triArr2 = out2;
		var tri2;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t10 = triArr2[_g6];
			++_g6;
			if(t10 != null) {
				var t14 = Object.create(trilateral_tri_Triangle.prototype);
				t14.id = 0;
				t14.ax = t10.ax;
				t14.ay = t10.ay;
				t14.bx = t10.bx;
				t14.by = t10.by;
				t14.cx = t10.cx;
				t14.cy = t10.cy;
				t14.mark = t10.mark;
				t14.depth = 0;
				t14.alpha = 1.;
				t14.colorID = 4;
				t14.colorA = 4;
				t14.colorB = 4;
				t14.colorC = 4;
				t14.windingAdjusted = t10.windingAdjusted;
				tri2 = t14;
				this25[this25.length] = tri2;
			}
		}
		var this37 = this.triangles;
		var ax3 = this.bottomRight.x;
		var ay3 = this.bottomRight.y;
		var radius3 = pieRadius + 40;
		var beta3 = Math.PI;
		var gamma3 = Math.PI / 16;
		var t15 = [];
		var this38;
		if(t15 == null) {
			var t16 = [];
			var this39 = t16 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t16;
			this38 = this39;
		} else {
			this38 = t15;
		}
		var this40 = this38;
		var out3 = this40;
		var pi3 = Math.PI;
		var step6 = pi3 * 2 / 36;
		var dif15;
		switch(trilateral_angle_DifferencePreference.LARGE._hx_index) {
		case 0:
			var f24;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f24 = beta3;
			} else {
				var a24 = beta3 % (2 * Math.PI);
				f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
			}
			var this41 = f24;
			var za12 = this41;
			var f25;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f25 = gamma3;
			} else {
				var a25 = gamma3 % (2 * Math.PI);
				f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
			}
			var this42 = f25;
			var zb12 = this42;
			var fa12 = za12;
			var fb12 = zb12;
			var theta12 = Math.abs(fa12 - fb12);
			var clockwise12 = beta3 < gamma3;
			var dif16 = clockwise12 ? theta12 : -theta12;
			dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
			break;
		case 1:
			var f26;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f26 = beta3;
			} else {
				var a26 = beta3 % (2 * Math.PI);
				f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
			}
			var this43 = f26;
			var za13 = this43;
			var f27;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f27 = gamma3;
			} else {
				var a27 = gamma3 % (2 * Math.PI);
				f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
			}
			var this44 = f27;
			var zb13 = this44;
			var fa13 = za13;
			var fb13 = zb13;
			var theta13 = Math.abs(fa13 - fb13);
			var clockwise13 = beta3 < gamma3;
			var dif17 = clockwise13 ? theta13 : -theta13;
			dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
			break;
		case 2:
			var f28;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f28 = beta3;
			} else {
				var a28 = beta3 % (2 * Math.PI);
				f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
			}
			var this45 = f28;
			var za14 = this45;
			var f29;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f29 = gamma3;
			} else {
				var a29 = gamma3 % (2 * Math.PI);
				f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
			}
			var this46 = f29;
			var zb14 = this46;
			var fa14 = za14;
			var fb14 = zb14;
			var theta14 = Math.abs(fa14 - fb14);
			var smallest3 = theta14 <= Math.PI;
			var clockwise14 = beta3 < gamma3;
			var dif18 = clockwise14 ? theta14 : -theta14;
			dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
			break;
		case 3:
			var f30;
			if(beta3 >= 0 && beta3 > Math.PI) {
				f30 = beta3;
			} else {
				var a30 = beta3 % (2 * Math.PI);
				f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
			}
			var this47 = f30;
			var za15 = this47;
			var f31;
			if(gamma3 >= 0 && gamma3 > Math.PI) {
				f31 = gamma3;
			} else {
				var a31 = gamma3 % (2 * Math.PI);
				f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
			}
			var this48 = f31;
			var zb15 = this48;
			var fa15 = za15;
			var fb15 = zb15;
			var theta15 = Math.abs(fa15 - fb15);
			var largest3 = theta15 > Math.PI;
			var clockwise15 = beta3 < gamma3;
			var dif19 = clockwise15 ? theta15 : -theta15;
			dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
			break;
		}
		var positive3 = dif15 >= 0;
		var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
		var step7 = dif15 / totalSteps3;
		var angle3 = beta3;
		var cx3;
		var cy3;
		var bx3 = 0;
		var by3 = 0;
		var dx3 = 0;
		var dy3 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = radius3 - 30;
		var _g7 = 0;
		var _g13 = totalSteps3 + 1;
		while(_g7 < _g13) {
			var i3 = _g7++;
			cx3 = ax3 + radius3 * Math.sin(angle3);
			cy3 = ay3 + radius3 * Math.cos(angle3);
			ex3 = ax3 + r23 * Math.sin(angle3);
			ey3 = ay3 + r23 * Math.cos(angle3);
			if(i3 != 0) {
				var t03 = new trilateral_tri_Trilateral(dx3,dy3,bx3,by3,cx3,cy3);
				var t17 = new trilateral_tri_Trilateral(dx3,dy3,cx3,cy3,ex3,ey3);
				out3[out3.length] = t03;
				out3[out3.length] = t17;
			}
			angle3 += step7;
			bx3 = cx3;
			by3 = cy3;
			dx3 = ex3;
			dy3 = ey3;
		}
		var triArr3 = out3;
		var tri3;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t18 = triArr3[_g8];
			++_g8;
			if(t18 != null) {
				var t19 = Object.create(trilateral_tri_Triangle.prototype);
				t19.id = 0;
				t19.ax = t18.ax;
				t19.ay = t18.ay;
				t19.bx = t18.bx;
				t19.by = t18.by;
				t19.cx = t18.cx;
				t19.cy = t18.cy;
				t19.mark = t18.mark;
				t19.depth = 0;
				t19.alpha = 1.;
				t19.colorID = 5;
				t19.colorA = 5;
				t19.colorB = 5;
				t19.colorC = 5;
				t19.windingAdjusted = t18.windingAdjusted;
				tri3 = t19;
				this37[this37.length] = tri3;
			}
		}
	}
};
var geom_Mat4x3 = function(a,b,c,d,e,f,g,h,i,j,k,l) {
	this.l = 0.;
	this.k = 0.;
	this.j = 0.;
	this.i = 0.;
	this.h = 0.;
	this.g = 0.;
	this.f = 0.;
	this.e = 0.;
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
	this.g = g;
	this.h = h;
	this.i = i;
	this.j = j;
	this.k = k;
	this.l = l;
};
geom_Mat4x3.__name__ = true;
var geom__$Matrix4x3_Matrix4x3_$Impl_$ = {};
geom__$Matrix4x3_Matrix4x3_$Impl_$.__name__ = true;
geom__$Matrix4x3_Matrix4x3_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.unit = function() {
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.zero = function() {
	var this1 = new geom_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.radianX = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.rotateX = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	var s1 = this2;
	var this3 = new geom_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c + s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.radianY = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.rotateY = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	var s1 = this2;
	var this3 = new geom_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c + s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.radianZ = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.rotateZ = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	var s1 = this2;
	var this3 = new geom_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c + s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.sxyz = function(x,y,z) {
	var this1 = new geom_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,z,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.scaleXYZ = function(this1,x,y,z) {
	var this2 = new geom_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,z,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.sx = function(x) {
	var this1 = new geom_Mat4x3(x,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.scaleX = function(this1,x) {
	var this2 = new geom_Mat4x3(x,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.sy = function(y) {
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,y,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.scaleY = function(this1,y) {
	var this2 = new geom_Mat4x3(1.,0.,0.,0.,0.,y,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.sz = function(z) {
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,z,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.scaleZ = function(this1,z) {
	var this2 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,z,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.scale = function(this1,s) {
	var this2 = new geom_Mat4x3(s,0.,0.,0.,0.,s,0.,0.,0.,0.,s,0.);
	var s1 = this2;
	var this3 = new geom_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c + s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	var s2 = this3;
	var this4 = new geom_Mat4x3(this1.a * s2.a + this1.b * s2.e + this1.c * s2.i,this1.a * s2.b + this1.b * s2.f + this1.c * s2.j,this1.a * s2.c + this1.b * s2.g + this1.c + s2.k,this1.a * s2.d + this1.b * s2.h + this1.c * s2.l + this1.d,this1.e * s2.a + this1.f * s2.e + this1.g * s2.i,this1.e * s2.b + this1.f * s2.f + this1.g * s2.j,this1.e * s2.c + this1.f * s2.g + this1.g * s2.k,this1.e * s2.d + this1.f * s2.h + this1.g * s2.l + this1.h,this1.i * s2.a + this1.j * s2.e + this1.k * s2.i,this1.i * s2.b + this1.j * s2.f + this1.k * s2.j,this1.i * s2.c + this1.j * s2.g + this1.k * s2.k,this1.i * s2.d + this1.j * s2.h + this1.k * s2.l + this1.l);
	return this4;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.txyz = function(x,y,z) {
	var this1 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.translateXYZ = function(this1,x,y,z) {
	var this2 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.tx = function(x) {
	var this1 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.translateX = function(this1,x) {
	var this2 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.ty = function(y) {
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,y,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.translateY = function(this1,y) {
	var this2 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.tz = function(z) {
	var this1 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,z);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.translateZ = function(this1,z) {
	var this2 = new geom_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,z);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.txy = function(x,y) {
	var this1 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.translateXY = function(this1,x,y) {
	var this2 = new geom_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c + s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.add = function(m0,m1) {
	var this1 = new geom_Mat4x3(m0.a + m1.a,m0.b + m1.b,m0.c + m1.c,m0.d + m1.d,m0.e + m1.e,m0.f + m1.f,m0.d + m1.d,m0.h + m1.h,m0.i + m1.i,m0.j + m1.j,m0.k + m1.k,m0.l + m1.l);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.sub = function(m0,m1) {
	var this1 = new geom_Mat4x3(m0.a - m1.a,m0.b - m1.b,m0.c - m1.c,m0.d - m1.d,m0.e - m1.e,m0.f - m1.f,m0.d - m1.d,m0.h - m1.h,m0.i - m1.i,m0.j - m1.j,m0.k - m1.k,m0.l - m1.l);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.multiply = function(r,s) {
	var this1 = new geom_Mat4x3(r.a * s.a + r.b * s.e + r.c * s.i,r.a * s.b + r.b * s.f + r.c * s.j,r.a * s.c + r.b * s.g + r.c + s.k,r.a * s.d + r.b * s.h + r.c * s.l + r.d,r.e * s.a + r.f * s.e + r.g * s.i,r.e * s.b + r.f * s.f + r.g * s.j,r.e * s.c + r.f * s.g + r.g * s.k,r.e * s.d + r.f * s.h + r.g * s.l + r.h,r.i * s.a + r.j * s.e + r.k * s.i,r.i * s.b + r.j * s.f + r.k * s.j,r.i * s.c + r.j * s.g + r.k * s.k,r.i * s.d + r.j * s.h + r.k * s.l + r.l);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.cofactor = function(this1,a,b,c,d,e,f,g,h,i) {
	return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.det = function(this1) {
	var m = 0.;
	var n = 0.;
	var o = 0.;
	var p = 1.;
	var d = this1.j;
	var e = this1.k;
	var f = this1.l;
	var d1 = this1.i;
	var e1 = this1.k;
	var f1 = this1.l;
	var d2 = this1.i;
	var e2 = this1.j;
	var f2 = this1.l;
	var d3 = this1.i;
	var e3 = this1.j;
	var f3 = this1.k;
	return this1.a * (this1.f * (e * p - f * o) - this1.g * (d * p - f * n) + this1.h * (d * o - e * n)) - this1.b * (this1.e * (e1 * p - f1 * o) - this1.g * (d1 * p - f1 * m) + this1.h * (d1 * o - e1 * m)) + this1.c * (this1.e * (e2 * n - f2 * p) - this1.f * (d2 * n - f2 * m) + this1.h * (d2 * p - e2 * m)) - this1.d * (this1.e * (e3 * o - f3 * n) - this1.f * (d3 * o - f3 * m) + this1.g * (d3 * n - e3 * m));
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.inverse = function(this1) {
	var a = this1.a;
	var b = this1.b;
	var c = this1.c;
	var d = this1.d;
	var e = this1.e;
	var f = this1.f;
	var g = this1.g;
	var h = this1.h;
	var i = this1.i;
	var j = this1.j;
	var k = this1.k;
	var l = this1.l;
	var m = 0.;
	var n = 0.;
	var o = 0.;
	var p = 1.;
	var q = j * o * h - n * k * h + n * g * l - f * o * l - j * g * p + f * k * p;
	var r = m * k * h - i * o * h - m * g * l + e * o * l + i * g * p - e * k * p;
	var s = i * n * h - m * j * h + m * f * l - e * n * l - i * f * p + e * j * p;
	var t = m * j * g - i * n * g - m * f * k + e * n * k + i * f * o - e * j * o;
	var det = a * q + b * r + c * s + d * t;
	if(det == 0) {
		return null;
	} else {
		var detI = 1 / det;
		var this2 = new geom_Mat4x3(q * detI,(n * k * d - j * o * d - n * c * l + b * o * l + j * c * p - b * k * p) * detI,(f * o * d - n * g * d + n * c * h - b * o * h - f * c * p + b * g * p) * detI,(j * g * d - f * k * d - j * c * h + b * k * h + f * c * l - b * g * l) * detI,r * detI,(i * o * d - m * k * d + m * c * l - a * o * l - i * c * p + a * k * p) * detI,(m * g * d - e * o * d - m * c * h + a * o * h + e * c * p - a * g * p) * detI,(e * k * d - i * g * d + i * c * h - a * k * h - e * c * l + a * g * l) * detI,s * detI,(m * j * d - i * n * d - m * b * l + a * n * l + i * b * p - a * j * p) * detI,(e * n * d - m * f * d + m * b * h - a * n * h - e * b * p + a * f * p) * detI,(i * f * d - e * j * d - i * b * h + a * j * h + e * b * l - a * f * l) * detI);
		return this2;
	}
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.projectionWindow = function(wid,hi,fov) {
	var halfWid = wid / 2;
	var halfHi = hi / 2;
	var tanHalf = Math.tan(fov / 2);
	var scale = halfWid / tanHalf;
	var this1 = new geom_Mat4x3(scale,-0.,-scale,0.,0.,-scale,-halfHi / tanHalf,0.,0.,0.,-1,0.);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.invertNormalizedRotation = function(this1) {
	var this2 = new geom_Mat4x3(this1.a,this1.e,this1.i,0.,this1.b,this1.f,this1.j,0.,this1.c,this1.g,this1.k,0.);
	return this2;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.fromArr = function(arr) {
	var this1 = new geom_Mat4x3(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8],arr[9],arr[10],arr[11]);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.toArray = function(this1) {
	return [this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l];
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.fromVec = function(v) {
	var this1 = new geom_Mat4x3(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11]);
	return this1;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.toVector = function(this1) {
	var this2 = new Array(12);
	var vec = this2;
	vec[0] = this1.a;
	vec[1] = this1.b;
	vec[2] = this1.c;
	vec[3] = this1.d;
	vec[4] = this1.e;
	vec[5] = this1.f;
	vec[6] = this1.g;
	vec[7] = this1.h;
	vec[8] = this1.i;
	vec[9] = this1.j;
	vec[10] = this1.k;
	vec[11] = this1.l;
	return vec;
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a = v;
		case 1:
			return this1.b = v;
		case 2:
			return this1.c = v;
		case 3:
			return this1.d = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e = v;
		case 1:
			return this1.f = v;
		case 2:
			return this1.g = v;
		case 3:
			return this1.h = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i = v;
		case 1:
			return this1.j = v;
		case 2:
			return this1.k = v;
		case 3:
			return this1.l = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
	}
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.b;
		case 2:
			return this1.c;
		case 3:
			return this1.d;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e;
		case 1:
			return this1.f;
		case 2:
			return this1.g;
		case 3:
			return this1.h;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i;
		case 1:
			return this1.j;
		case 2:
			return this1.k;
		case 3:
			return this1.l;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
	}
};
geom__$Matrix4x3_Matrix4x3_$Impl_$.toFloat32Array = function(this1,arr) {
	arr.set([this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,0.,0.,0.,1.]);
	return arr;
};
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.__name__ = true;
htmlHelper_tools_AnimateTimer.create = function() {
	if(htmlHelper_tools_AnimateTimer.s != null) {
		return;
	}
	htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
	htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
	window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
	htmlHelper_tools_AnimateTimer.loop(60.0);
};
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
htmlHelper_tools_AnimateTimer.kill = function() {
	if(htmlHelper_tools_AnimateTimer.s == null) {
		return;
	}
	window.document.getElementsByTagName("head")[0].removeChild(htmlHelper_tools_AnimateTimer.s);
	htmlHelper_tools_AnimateTimer.onFrame = null;
	htmlHelper_tools_AnimateTimer.s = null;
};
htmlHelper_tools_AnimateTimer.tween = function(t,b,e,d,f) {
	if(t > d) {
		return null;
	}
	return f(t,b,e - b,d);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_html__$CanvasElement_CanvasUtil = function() { };
js_html__$CanvasElement_CanvasUtil.__name__ = true;
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var name = "webgl";
	var ctx = canvas.getContext(name,attribs);
	if(ctx != null) {
		return ctx;
	}
	var name1 = "experimental-webgl";
	var ctx1 = canvas.getContext(name1,attribs);
	if(ctx1 != null) {
		return ctx1;
	}
	return null;
};
var khaMath_Matrix4 = function(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33) {
	this._00 = _00;
	this._10 = _10;
	this._20 = _20;
	this._30 = _30;
	this._01 = _01;
	this._11 = _11;
	this._21 = _21;
	this._31 = _31;
	this._02 = _02;
	this._12 = _12;
	this._22 = _22;
	this._32 = _32;
	this._03 = _03;
	this._13 = _13;
	this._23 = _23;
	this._33 = _33;
};
khaMath_Matrix4.__name__ = true;
khaMath_Matrix4.orthogonalProjection = function(left,right,bottom,top,zn,zf) {
	var tx = -(right + left) / (right - left);
	var ty = -(top + bottom) / (top - bottom);
	var tz = -(zf + zn) / (zf - zn);
	return new khaMath_Matrix4(2 / (right - left),0,0,tx,0,2 / (top - bottom),0,ty,0,0,-2 / (zf - zn),tz,0,0,0,1);
};
khaMath_Matrix4.perspectiveProjection = function(fovY,aspect,zn,zf) {
	var uh = 1.0 / Math.tan(fovY / 2 * (Math.PI / 180));
	var uw = uh / aspect;
	return new khaMath_Matrix4(uw,0,0,0,0,uh,0,0,0,0,(zf + zn) / (zn - zf),2 * zf * zn / (zn - zf),0,0,-1,0);
};
khaMath_Matrix4.lookAt = function(eye,at,up) {
	var zaxis = new khaMath_Vector3(at.x - eye.x,at.y - eye.y,at.z - eye.z);
	zaxis.set_length(1);
	var _x = zaxis.y * up.z - zaxis.z * up.y;
	var _y = zaxis.z * up.x - zaxis.x * up.z;
	var _z = zaxis.x * up.y - zaxis.y * up.x;
	var xaxis = new khaMath_Vector3(_x,_y,_z);
	xaxis.set_length(1);
	var _x1 = xaxis.y * zaxis.z - xaxis.z * zaxis.y;
	var _y1 = xaxis.z * zaxis.x - xaxis.x * zaxis.z;
	var _z1 = xaxis.x * zaxis.y - xaxis.y * zaxis.x;
	var yaxis_x = _x1;
	var yaxis_y = _y1;
	var yaxis_z = _z1;
	return new khaMath_Matrix4(xaxis.x,xaxis.y,xaxis.z,-(xaxis.x * eye.x + xaxis.y * eye.y + xaxis.z * eye.z),yaxis_x,yaxis_y,yaxis_z,-(yaxis_x * eye.x + yaxis_y * eye.y + yaxis_z * eye.z),-zaxis.x,-zaxis.y,-zaxis.z,zaxis.x * eye.x + zaxis.y * eye.y + zaxis.z * eye.z,0,0,0,1);
};
var khaMath_Vector3 = function(x,y,z) {
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
};
khaMath_Vector3.__name__ = true;
khaMath_Vector3.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		return length;
	}
};
var khaMath_Vector4 = function(x,y,z,w) {
	if(w == null) {
		w = 1;
	}
	if(z == null) {
		z = 0;
	}
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
khaMath_Vector4.__name__ = true;
khaMath_Vector4.prototype = {
	get_length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,set_length: function(length) {
		var currentLength = this.get_length();
		if(currentLength == 0) {
			return 0;
		}
		var mul = length / currentLength;
		this.x *= mul;
		this.y *= mul;
		this.z *= mul;
		this.w *= mul;
		return length;
	}
};
var shaders_Shaders = function() { };
shaders_Shaders.__name__ = true;
var trilateral_angle_DifferencePreference = $hxEnums["trilateral.angle.DifferencePreference"] = { __ename__ : true, __constructs__ : ["CLOCKWISE","ANTICLOCKWISE","SMALL","LARGE"]
	,CLOCKWISE: {_hx_index:0,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,ANTICLOCKWISE: {_hx_index:1,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,SMALL: {_hx_index:2,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,LARGE: {_hx_index:3,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
};
var trilateral_angle_Angles = function() { };
trilateral_angle_Angles.__name__ = true;
trilateral_angle_Angles.pi2pi = function(angle) {
	if(angle <= Math.PI && angle > -Math.PI) {
		return angle;
	} else {
		var a = (angle + Math.PI) % (2 * Math.PI);
		if(a >= 0) {
			return a - Math.PI;
		} else {
			return a + Math.PI;
		}
	}
};
trilateral_angle_Angles.zeroto2pi = function(angle) {
	if(angle >= 0 && angle > Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		if(a >= 0) {
			return a;
		} else {
			return a + 2 * Math.PI;
		}
	}
};
trilateral_angle_Angles.zerotoMinus2pi = function(angle) {
	if(angle <= 0 && angle > -Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		var a1 = a >= 0 ? a : a + 2 * Math.PI;
		return -(Math.PI * 2 - a1);
	}
};
trilateral_angle_Angles.differencePrefer = function(a,b,prefer) {
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(a >= 0 && a > Math.PI) {
			f = a;
		} else {
			var a1 = a % (2 * Math.PI);
			f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this1 = f;
		var za = this1;
		var f1;
		if(b >= 0 && b > Math.PI) {
			f1 = b;
		} else {
			var a2 = b % (2 * Math.PI);
			f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this2 = f1;
		var zb = this2;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = a < b;
		var dif = clockwise ? theta : -theta;
		if(dif > 0) {
			return dif;
		} else {
			return 2 * Math.PI + dif;
		}
		break;
	case 1:
		var f2;
		if(a >= 0 && a > Math.PI) {
			f2 = a;
		} else {
			var a3 = a % (2 * Math.PI);
			f2 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this3 = f2;
		var za1 = this3;
		var f3;
		if(b >= 0 && b > Math.PI) {
			f3 = b;
		} else {
			var a4 = b % (2 * Math.PI);
			f3 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this4 = f3;
		var zb1 = this4;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = a < b;
		var dif1 = clockwise1 ? theta1 : -theta1;
		if(dif1 < 0) {
			return dif1;
		} else {
			return -2 * Math.PI + dif1;
		}
		break;
	case 2:
		var f4;
		if(a >= 0 && a > Math.PI) {
			f4 = a;
		} else {
			var a5 = a % (2 * Math.PI);
			f4 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this5 = f4;
		var za2 = this5;
		var f5;
		if(b >= 0 && b > Math.PI) {
			f5 = b;
		} else {
			var a6 = b % (2 * Math.PI);
			f5 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this6 = f5;
		var zb2 = this6;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = a < b;
		var dif2 = clockwise2 ? theta2 : -theta2;
		if(smallest) {
			return dif2;
		} else if(clockwise2) {
			return -(2 * Math.PI - theta2);
		} else {
			return 2 * Math.PI - theta2;
		}
		break;
	case 3:
		var f6;
		if(a >= 0 && a > Math.PI) {
			f6 = a;
		} else {
			var a7 = a % (2 * Math.PI);
			f6 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this7 = f6;
		var za3 = this7;
		var f7;
		if(b >= 0 && b > Math.PI) {
			f7 = b;
		} else {
			var a8 = b % (2 * Math.PI);
			f7 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this8 = f7;
		var zb3 = this8;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = a < b;
		var dif3 = clockwise3 ? theta3 : -theta3;
		if(largest) {
			return dif3;
		} else if(clockwise3) {
			return -(2 * Math.PI - theta3);
		} else {
			return 2 * Math.PI - theta3;
		}
		break;
	}
};
trilateral_angle_Angles.difference = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var clockwise = a < b;
	if(clockwise) {
		return theta;
	} else {
		return -theta;
	}
};
trilateral_angle_Angles.differenceClockWise = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(dif > 0) {
		return dif;
	} else {
		return 2 * Math.PI + dif;
	}
};
trilateral_angle_Angles.differenceAntiClockwise = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(dif < 0) {
		return dif;
	} else {
		return -2 * Math.PI + dif;
	}
};
trilateral_angle_Angles.differenceSmall = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var smallest = theta <= Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(smallest) {
		return dif;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
trilateral_angle_Angles.differenceLarge = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var largest = theta > Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	if(largest) {
		return dif;
	} else if(clockwise) {
		return -(2 * Math.PI - theta);
	} else {
		return 2 * Math.PI - theta;
	}
};
trilateral_angle_Angles.differenceSmallLarge = function(a,b) {
	var f;
	if(a >= 0 && a > Math.PI) {
		f = a;
	} else {
		var a1 = a % (2 * Math.PI);
		f = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
	}
	var this1 = f;
	var za = this1;
	var f1;
	if(b >= 0 && b > Math.PI) {
		f1 = b;
	} else {
		var a2 = b % (2 * Math.PI);
		f1 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
	}
	var this2 = f1;
	var zb = this2;
	var fa = za;
	var fb = zb;
	var theta = Math.abs(fa - fb);
	var smallest = theta <= Math.PI;
	var clockwise = a < b;
	var dif = clockwise ? theta : -theta;
	var other = clockwise ? -(2 * Math.PI - theta) : 2 * Math.PI - theta;
	if(smallest) {
		return { small : dif, large : other};
	} else {
		return { small : other, large : dif};
	}
};
var trilateral_angle__$Fraction_FractionArray_$Impl_$ = {};
trilateral_angle__$Fraction_FractionArray_$Impl_$.__name__ = true;
trilateral_angle__$Fraction_FractionArray_$Impl_$._new = function(val) {
	var this1 = val == null ? [] : val;
	return this1;
};
trilateral_angle__$Fraction_FractionArray_$Impl_$.add = function(this1,val) {
	this1[this1.length] = val;
};
trilateral_angle__$Fraction_FractionArray_$Impl_$.toString = function(this1) {
	var l = this1.length;
	var str = "";
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var this2 = this1[i];
		var n = this2.numerator;
		var d = this2.denominator;
		var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this2.positive ? "" + n : "-" + n : this2.positive ? "" + n + "/" + d : "-" + n + "/" + d;
		str = str + "\n" + out;
	}
	return str;
};
var trilateral_angle__$Fraction_Fraction_$Impl_$ = {};
trilateral_angle__$Fraction_Fraction_$Impl_$.__name__ = true;
trilateral_angle__$Fraction_Fraction_$Impl_$._new = function(numerator,denominator,positive,value) {
	if(positive == null) {
		positive = true;
	}
	var numNeg = numerator < 0;
	var denoNeg = denominator < 0;
	if(value == null) {
		value = positive ? numerator / denominator : -numerator / denominator;
	}
	if(numNeg || denoNeg) {
		if(!(numNeg && denoNeg)) {
			positive = !positive;
		}
		if(numNeg) {
			numerator = -numerator;
		}
		if(denoNeg) {
			denominator = -denominator;
		}
	}
	var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
	return this1;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.optimize = function(this1) {
	var f = this1.value;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.optimizeFraction = function(this1) {
	var f = this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.toFloat = function(this1) {
	if(this1.positive) {
		return this1.numerator / this1.denominator;
	} else {
		return -this1.numerator / this1.denominator;
	}
};
trilateral_angle__$Fraction_Fraction_$Impl_$.float = function(this1) {
	return this1.value;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.verbose = function(this1) {
	return "{ numerator:" + this1.numerator + ", denominator: " + this1.denominator + ", positive: " + (this1.positive == null ? "null" : "" + this1.positive) + ", value: " + this1.value + " }";
};
trilateral_angle__$Fraction_Fraction_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	return frac;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.toString = function(this1) {
	var n = this1.numerator;
	var d = this1.denominator;
	var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
	return out;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.fromFloat = function(f) {
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.firstFloat = function(f) {
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var fracStore = arr[0];
	return fracStore;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.byDenominator = function(this1,val) {
	var n = this1.numerator;
	var d = this1.denominator;
	var out = n == 0 ? "0" : n == d ? "1" : d == 1 ? this1.positive ? "" + n : "-" + n : this1.positive ? "" + n + "/" + d : "-" + n + "/" + d;
	var out1 = out;
	if(!(this1.denominator == val || out1 == "0" || out1 == "1")) {
		var dom = Math.round(this1.value * val);
		var numerator = dom;
		var denominator = val;
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this2 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		var frac = this2;
		var n1 = frac.numerator;
		var d1 = frac.denominator;
		var out2 = n1 == 0 ? "0" : n1 == d1 ? "1" : d1 == 1 ? frac.positive ? "" + n1 : "-" + n1 : frac.positive ? "" + n1 + "/" + d1 : "-" + n1 + "/" + d1;
		out1 = out2;
	}
	return out1;
};
trilateral_angle__$Fraction_Fraction_$Impl_$.all = function(f) {
	return trilateral_angle_Fracs.approximateFractions(f);
};
trilateral_angle__$Fraction_Fraction_$Impl_$.similarToFraction = function(this1) {
	var f = this1.positive ? this1.numerator / this1.denominator : -this1.numerator / this1.denominator;
	return trilateral_angle_Fracs.approximateFractions(f);
};
trilateral_angle__$Fraction_Fraction_$Impl_$.similarToValue = function(this1) {
	return trilateral_angle_Fracs.approximateFractions(this1.value);
};
var trilateral_angle_Fracs = function() { };
trilateral_angle_Fracs.__name__ = true;
trilateral_angle_Fracs.grabDecimalInput = function(decimalVal) {
	var decimal = Math.abs(parseFloat(decimalVal));
	if(isNaN(decimal)) {
		return 0.;
	} else {
		return decimal;
	}
};
trilateral_angle_Fracs.approximateFractions = function(f) {
	var positive = f <= 0 ? false : true;
	var numerators = [0,1];
	var denominators = [1,0];
	var f2 = f <= 0 ? -f : f;
	var fStr = f2 == null ? "null" : "" + f2;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = f2;
	var numIntDigits = Std.string(L2).length;
	if(L2 == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	var maxNumerator = L;
	var d2 = f2;
	var calcD;
	var prevCalcD = null;
	var this1 = [];
	var arrFraction = this1;
	var j = 0;
	var _g = 2;
	while(_g < 1000) {
		var i1 = _g++;
		var L21 = Math.floor(d2);
		numerators[i1] = L21 * numerators[i1 - 1] + numerators[i1 - 2] | 0;
		if(Math.abs(numerators[i1]) > maxNumerator) {
			break;
		}
		denominators[i1] = L21 * denominators[i1 - 1] + denominators[i1 - 2] | 0;
		calcD = numerators[i1] / denominators[i1];
		if(calcD == prevCalcD) {
			break;
		}
		var numerator = numerators[i1];
		var denominator = denominators[i1];
		var positive1 = positive;
		var value = f;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive1 ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive1 = !positive1;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this2 = { numerator : numerator, denominator : denominator, positive : positive1, value : value};
		arrFraction[arrFraction.length] = this2;
		if(calcD == f2) {
			break;
		}
		prevCalcD = calcD;
		d2 = 1 / (d2 - L21);
	}
	return arrFraction;
};
trilateral_angle_Fracs.getMaxNumerator = function(f) {
	var fStr = f == null ? "null" : "" + f;
	var digits = "";
	var ix = fStr.indexOf(".");
	if(ix == -1) {
		digits = fStr;
	} else if(ix == 0) {
		digits = HxOverrides.substr(fStr,1,fStr.length);
	} else if(ix < fStr.length) {
		digits = HxOverrides.substr(fStr,0,ix) + HxOverrides.substr(fStr,ix + 1,fStr.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = f;
	var numIntDigits = (L2 == null ? "null" : "" + L2).length;
	if(L2 == 0) {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(digits);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
trilateral_angle_Fracs.extractDigitStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	return digits;
};
trilateral_angle_Fracs.getMaxNumeratorStr = function(fStr) {
	var f2 = "";
	var ixe = fStr.indexOf("E");
	if(ixe == -1) {
		ixe = fStr.indexOf("e");
	}
	if(ixe == -1) {
		f2 = fStr;
	} else {
		f2 = HxOverrides.substr(fStr,0,ixe);
	}
	var digits = "";
	var ix = f2.indexOf(".");
	if(ix == -1) {
		digits = f2;
	} else if(ix == 0) {
		digits = HxOverrides.substr(f2,1,f2.length);
	} else if(ix < f2.length) {
		digits = HxOverrides.substr(f2,0,ix) + HxOverrides.substr(f2,ix + 1,f2.length);
	}
	var LStr = digits;
	var numDigits = LStr.length;
	var L2 = fStr;
	var numIntDigits = L2.length;
	if(L2 == "0") {
		numIntDigits = 0;
	}
	var numDigitsPastDecimal = numDigits - numIntDigits;
	var i = numDigitsPastDecimal;
	var L = parseFloat(fStr);
	while(i > 0 && L % 2 == 0) {
		L /= 2;
		--i;
	}
	i = numDigitsPastDecimal;
	while(i > 0 && L % 5 == 0) {
		L /= 5;
		--i;
	}
	return L;
};
var trilateral_angle__$Pi2pi_Pi2pi_$Impl_$ = {};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.__name__ = true;
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.addition = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.divide = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.times = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromFraction = function(val) {
	var f = (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
	var f1;
	if(f <= Math.PI && f > -Math.PI) {
		f1 = f;
	} else {
		var a = (f + Math.PI) % (2 * Math.PI);
		f1 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	var frac3 = frac;
	var f1 = (frac3.positive ? frac3.numerator / frac3.denominator : -frac3.numerator / frac3.denominator) * Math.PI;
	var f2;
	if(f1 <= Math.PI && f1 > -Math.PI) {
		f2 = f1;
	} else {
		var a = (f1 + Math.PI) % (2 * Math.PI);
		f2 = a >= 0 ? a - Math.PI : a + Math.PI;
	}
	var this2 = f2;
	return this2;
};
trilateral_angle__$Pi2pi_Pi2pi_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$ = {};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.__name__ = true;
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$._new = function(f) {
	var this1 = f;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromFloat = function(f) {
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.additionPi = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.subtractionPi = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.dividePi = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.timesPi = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.addition = function(this1,b) {
	var f = this1 + b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.subtraction = function(this1,b) {
	var f = this1 - b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.divide = function(this1,b) {
	var f = this1 / b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.times = function(this1,b) {
	var f = this1 * b;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f1;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.get_degrees = function(this1) {
	return this1 * 180 / Math.PI;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.set_degrees = function(this1,val) {
	this1 = Math.PI * val / 180;
	return val;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromFraction = function(val) {
	var f = (val.positive ? val.numerator / val.denominator : -val.numerator / val.denominator) * Math.PI;
	var f1;
	if(f >= 0 && f > Math.PI) {
		f1 = f;
	} else {
		var a = f % (2 * Math.PI);
		f1 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this1 = f1;
	return this1;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.tofraction = function(this1) {
	var f = this1 / Math.PI;
	var arr = trilateral_angle_Fracs.approximateFractions(f);
	var dist = Infinity;
	var dif;
	var l = arr.length;
	var fracFloat;
	var frac = trilateral_angle__$Fraction_Fraction_$Impl_$;
	var fracStore = arr[0];
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		var frac1 = arr[i];
		fracFloat = frac1.positive ? frac1.numerator / frac1.denominator : -frac1.numerator / frac1.denominator;
		dif = Math.abs(fracFloat - f);
		if(dif < dist) {
			dist = dif;
			fracStore = frac1;
		}
	}
	return fracStore;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.fromString = function(val) {
	var i = val.indexOf("/");
	var frac;
	if(i != -1) {
		var numerator = Std.parseInt(HxOverrides.substr(val,0,i));
		var denominator = Std.parseInt(HxOverrides.substr(val,i + 1,val.length));
		var positive = true;
		var value = null;
		var numNeg = numerator < 0;
		var denoNeg = denominator < 0;
		if(value == null) {
			value = positive ? numerator / denominator : -numerator / denominator;
		}
		if(numNeg || denoNeg) {
			if(!(numNeg && denoNeg)) {
				positive = !positive;
			}
			if(numNeg) {
				numerator = -numerator;
			}
			if(denoNeg) {
				denominator = -denominator;
			}
		}
		var this1 = { numerator : numerator, denominator : denominator, positive : positive, value : value};
		frac = this1;
	} else {
		var f = parseFloat(val);
		var arr = trilateral_angle_Fracs.approximateFractions(f);
		var dist = Infinity;
		var dif;
		var l = arr.length;
		var fracFloat;
		var frac1 = trilateral_angle__$Fraction_Fraction_$Impl_$;
		var fracStore = arr[0];
		var _g = 0;
		var _g1 = l;
		while(_g < _g1) {
			var i1 = _g++;
			var frac2 = arr[i1];
			fracFloat = frac2.positive ? frac2.numerator / frac2.denominator : -frac2.numerator / frac2.denominator;
			dif = Math.abs(fracFloat - f);
			if(dif < dist) {
				dist = dif;
				fracStore = frac2;
			}
		}
		frac = fracStore;
	}
	var frac3 = frac;
	var f1 = (frac3.positive ? frac3.numerator / frac3.denominator : -frac3.numerator / frac3.denominator) * Math.PI;
	var f2;
	if(f1 >= 0 && f1 > Math.PI) {
		f2 = f1;
	} else {
		var a = f1 % (2 * Math.PI);
		f2 = a >= 0 ? a : a + 2 * Math.PI;
	}
	var this2 = f2;
	return this2;
};
trilateral_angle__$ZeroTo2pi_ZeroTo2pi_$Impl_$.toString = function(this1) {
	return Std.string(this1);
};
var trilateral_geom_Algebra = function() { };
trilateral_geom_Algebra.__name__ = true;
trilateral_geom_Algebra.theta = function(p0,p1) {
	var dx = p0.x - p1.x;
	var dy = p0.y - p1.y;
	return Math.atan2(dy,dx);
};
trilateral_geom_Algebra.dist = function(p0,p1) {
	var dx = p0.x - p1.x;
	var dy = p0.y - p1.y;
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.adjustWinding = function(A_,B_,C_) {
	var p0_x = B_.x - A_.x;
	var p0_y = B_.y - A_.y;
	var p1_x = C_.x - A_.x;
	var p1_y = C_.y - A_.y;
	var val = !(p0_x * p1_y - p0_y * p1_x < 0);
	return val;
};
trilateral_geom_Algebra.subtract = function(p0,p1) {
	return { x : p0.x - p1.x, y : p0.y - p1.y};
};
trilateral_geom_Algebra.cross = function(p0,p1) {
	return p0.x * p1.y - p0.y * p1.x;
};
trilateral_geom_Algebra.sign = function(n) {
	return Math.abs(n) / n | 0;
};
trilateral_geom_Algebra.quadratic = function(t,s,c,e) {
	var u = 1 - t;
	return Math.pow(u,2) * s + 2 * u * t * c + Math.pow(t,2) * e;
};
trilateral_geom_Algebra.cubic = function(t,s,c1,c2,e) {
	var u = 1 - t;
	return Math.pow(u,3) * s + 3 * Math.pow(u,2) * t * c1 + 3 * u * Math.pow(t,2) * c2 + Math.pow(t,3) * e;
};
trilateral_geom_Algebra.quadCurve = function(p,ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,2) * ax + 2 * u * t * bx + Math.pow(t,2) * cx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * by + Math.pow(t,2) * cy;
		t += step;
	}
	p[l++] = cx;
	p[l++] = cy;
	return p;
};
trilateral_geom_Algebra.cubicCurve = function(p,ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
	var l = p.length;
	p[l++] = ax;
	p[l++] = ay;
	var t = step;
	while(t < 1.) {
		var u = 1 - t;
		p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * bx + 3 * u * Math.pow(t,2) * cx + Math.pow(t,3) * dx;
		var u1 = 1 - t;
		p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * by + 3 * u1 * Math.pow(t,2) * cy + Math.pow(t,3) * dy;
		t += step;
	}
	p[l++] = dx;
	p[l++] = dy;
	return p;
};
trilateral_geom_Algebra.calculateQuadStep = function(ax,ay,bx,by,cx,cy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
};
trilateral_geom_Algebra.calculateCubicStep = function(ax,ay,bx,by,cx,cy,dx,dy) {
	var x = ax - bx;
	var y = ay - by;
	var x1 = bx - cx;
	var y1 = by - cy;
	var x2 = cx - dx;
	var y2 = cy - dy;
	var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x1 * x1 + y1 * y1) + Math.sqrt(x2 * x2 + y2 * y2);
	if(approxDistance == 0) {
		approxDistance = 0.000001;
	}
	return Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
};
trilateral_geom_Algebra.lineAB = function(A,B,width) {
	var dx = A.x - B.x;
	var dy = A.y - B.y;
	var P_x = A.x - width / 2;
	var P_y = A.y;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = A.x + width / 2;
	var pivotY = A.y;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.lineABCoord = function(ax,ay,bx,by,width) {
	var dx = ax - bx;
	var dy = ay - by;
	var P_x = ax - width / 2;
	var P_y = ay;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = ax + width / 2;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - ay;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + ay};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - ay;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + ay};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - ay;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + ay};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - ay;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + ay};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.rotateVectorLine = function(pos,dim,omega,pivotX,pivotY) {
	var px = pos.x;
	var py = pos.y;
	var dx = dim.x;
	var dy = dim.y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx, y : py};
	var C_ = { x : px + dx, y : py + dy};
	var D_ = { x : px, y : py + dy};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	return { A : A_, B : B_, C : C_, D : D_};
};
trilateral_geom_Algebra.pivotCheap = function(p,sin,cos,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * cos - py * sin;
	py = py * cos + px * sin;
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.pivot = function(p,omega,pivotX,pivotY) {
	var px = p.x - pivotX;
	var py = p.y - pivotY;
	var px2 = px * Math.cos(omega) - py * Math.sin(omega);
	py = py * Math.cos(omega) + px * Math.sin(omega);
	return { x : px2 + pivotX, y : py + pivotY};
};
trilateral_geom_Algebra.thetaCheap = function(dx,dy) {
	return Math.atan2(dy,dx);
};
trilateral_geom_Algebra.distCheap = function(dx,dy) {
	return dx * dx + dy * dy;
};
trilateral_geom_Algebra.distance = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return Math.sqrt(x * x + y * y);
};
var trilateral_geom_Contour = function(triArr_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.counter = 0;
	this.count = 0;
	this.pointsAnti = [];
	this.pointsClock = [];
	this.triArr = triArr_;
	this.endLine = endLine_;
};
trilateral_geom_Contour.__name__ = true;
trilateral_geom_Contour.thetaCompute = function(px,py,qx,qy) {
	return Math.atan2(py - qy,px - qx);
};
trilateral_geom_Contour.dist = function(px,py,qx,qy) {
	var x = px - qx;
	var y = py - qy;
	return x * x + y * y;
};
trilateral_geom_Contour.prototype = {
	reset: function() {
		this.angleA = 0;
		this.count = 0;
		this.kax = 0;
		this.kay = 0;
		this.kbx = 0;
		this.kby = 0;
		this.kcx = 0;
		this.kcy = 0;
		this.ncx = 0;
		this.ncy = 0;
		this.ax = 0;
		this.ay = 0;
		this.bx = 0;
		this.by = 0;
		this.cx = 0;
		this.cy = 0;
		this.dx = null;
		this.dy = null;
		this.ex = null;
		this.ey = null;
		this.pointsClock.length = 0;
		this.pointsAnti.length = 0;
	}
	,triangleJoin: function(ax_,ay_,bx_,by_,width_,curveEnds,overlap) {
		if(overlap == null) {
			overlap = false;
		}
		if(curveEnds == null) {
			curveEnds = false;
		}
		var oldAngle = this.dx != null ? this.angle1 : null;
		this.halfA = Math.PI / 2;
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var x = this.dxOld - bx_;
		var y = this.dyOld - by_;
		var x1 = this.exOld - bx_;
		var y1 = this.eyOld - by_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(this.ay - this.dyOld,this.ax - this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.eyPrev,this.ax - this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(this.ay - this.eyOld,this.ax - this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(this.ay - this.dyPrev,this.ax - this.dxPrev) - Math.PI / 2;
		}
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f = theta0;
			} else {
				var a = theta0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this1 = f;
			var za = this1;
			var f1;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f1 = theta1;
			} else {
				var a1 = theta1 % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this2 = f1;
			var zb = this2;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = theta0 < theta1;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f2 = theta0;
			} else {
				var a2 = theta0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this3 = f2;
			var za1 = this3;
			var f3;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f3 = theta1;
			} else {
				var a3 = theta1 % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this4 = f3;
			var zb1 = this4;
			var fa1 = za1;
			var fb1 = zb1;
			var theta2 = Math.abs(fa1 - fb1);
			var clockwise1 = theta0 < theta1;
			var dif2 = clockwise1 ? theta2 : -theta2;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f4 = theta0;
			} else {
				var a4 = theta0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this5 = f4;
			var za2 = this5;
			var f5;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f5 = theta1;
			} else {
				var a5 = theta1 % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this6 = f5;
			var zb2 = this6;
			var fa2 = za2;
			var fb2 = zb2;
			var theta3 = Math.abs(fa2 - fb2);
			var smallest = theta3 <= Math.PI;
			var clockwise2 = theta0 < theta1;
			var dif3 = clockwise2 ? theta3 : -theta3;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		case 3:
			var f6;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f6 = theta0;
			} else {
				var a6 = theta0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this7 = f6;
			var za3 = this7;
			var f7;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f7 = theta1;
			} else {
				var a7 = theta1 % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this8 = f7;
			var zb3 = this8;
			var fa3 = za3;
			var fb3 = zb3;
			var theta4 = Math.abs(fa3 - fb3);
			var largest = theta4 > Math.PI;
			var clockwise3 = theta0 < theta1;
			var dif4 = clockwise3 ? theta4 : -theta4;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
			break;
		}
		if(!overlap && this.count != 0) {
			var gamma = Math.abs(dif) / 2;
			var h = width_ / 2 / Math.cos(gamma);
			var f8;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f8 = theta0;
			} else {
				var a8 = (theta0 + Math.PI) % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
			}
			var this9 = f8;
			var start = this9;
			var start2 = start;
			var delta = start2 + dif / 2 + Math.PI;
			this.jx = this.ax + h * Math.sin(delta);
			this.jy = this.ay + h * Math.cos(delta);
		}
		if(this.count == 0 && (this.endLine == 1 || this.endLine == 3)) {
			var ax = this.ax;
			var ay = this.ay;
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma1 = -this.angle1 - Math.PI / 2 + Math.PI;
			var temp = [];
			var this10 = this.triArr;
			var t = [];
			var this11;
			if(t == null) {
				var t1 = [];
				var this12 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this11 = this12;
			} else {
				this11 = t;
			}
			var this13 = this11;
			var out = this13;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f9;
				if(beta >= 0 && beta > Math.PI) {
					f9 = beta;
				} else {
					var a9 = beta % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this14 = f9;
				var za4 = this14;
				var f10;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f10 = gamma1;
				} else {
					var a10 = gamma1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this15 = f10;
				var zb4 = this15;
				var fa4 = za4;
				var fb4 = zb4;
				var theta5 = Math.abs(fa4 - fb4);
				var clockwise4 = beta < gamma1;
				var dif6 = clockwise4 ? theta5 : -theta5;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f11;
				if(beta >= 0 && beta > Math.PI) {
					f11 = beta;
				} else {
					var a11 = beta % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this16 = f11;
				var za5 = this16;
				var f12;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f12 = gamma1;
				} else {
					var a12 = gamma1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this17 = f12;
				var zb5 = this17;
				var fa5 = za5;
				var fb5 = zb5;
				var theta6 = Math.abs(fa5 - fb5);
				var clockwise5 = beta < gamma1;
				var dif7 = clockwise5 ? theta6 : -theta6;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f13;
				if(beta >= 0 && beta > Math.PI) {
					f13 = beta;
				} else {
					var a13 = beta % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this18 = f13;
				var za6 = this18;
				var f14;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f14 = gamma1;
				} else {
					var a14 = gamma1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this19 = f14;
				var zb6 = this19;
				var fa6 = za6;
				var fb6 = zb6;
				var theta7 = Math.abs(fa6 - fb6);
				var smallest1 = theta7 <= Math.PI;
				var clockwise6 = beta < gamma1;
				var dif8 = clockwise6 ? theta7 : -theta7;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			case 3:
				var f15;
				if(beta >= 0 && beta > Math.PI) {
					f15 = beta;
				} else {
					var a15 = beta % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this20 = f15;
				var za7 = this20;
				var f16;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f16 = gamma1;
				} else {
					var a16 = gamma1 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this21 = f16;
				var zb7 = this21;
				var fa7 = za7;
				var fb7 = zb7;
				var theta8 = Math.abs(fa7 - fb7);
				var largest1 = theta8 > Math.PI;
				var clockwise7 = beta < gamma1;
				var dif9 = clockwise7 ? theta8 : -theta8;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
				break;
			}
			var positive = dif5 >= 0;
			var totalSteps = Math.ceil(Math.abs(dif5) / step);
			var step1 = dif5 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var p2 = temp.length;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				temp[p2++] = cx;
				temp[p2++] = cy;
				if(i != 0) {
					var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t2;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t3 = triArr[_g2];
				++_g2;
				this10[this10.length] = t3;
			}
			var pA = this.pointsAnti.length;
			var len = temp.length / 2 | 0;
			var p4 = temp.length / 4 | 0;
			var _g3 = 0;
			var _g11 = p4;
			while(_g3 < _g11) {
				var i1 = _g3++;
				this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
				this.pointsAnti[pA++] = temp[len - 2 * i1];
			}
			var pC = this.pointsClock.length;
			var _g21 = 0;
			var _g31 = p4;
			while(_g21 < _g31) {
				var i2 = _g21++;
				this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
				this.pointsClock[pC++] = temp[i2 * 2 + len];
			}
		}
		if(overlap) {
			var this22 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this22[this22.length] = tri;
			var this23 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this23[this23.length] = tri1;
		} else {
			if(this.count != 0) {
				this.addQuads(clockWise,width_);
			}
			this.quadIndex = this.triArr.length;
			if(this.count == 0) {
				this.penultimateAX = this.dxPrev;
				this.penultimateAY = this.dyPrev;
				this.lastAntiX = this.ex;
				this.lastAntiY = this.ey;
				this.penultimateCX = this.dx;
				this.penultimateCY = this.dy;
				this.lastClockX = this.exPrev;
				this.lastClockY = this.eyPrev;
				var this24 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this24[this24.length] = tri2;
				var this25 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this25[this25.length] = tri3;
			} else {
				if(clockWise && !this.lastClock) {
					this.penultimateAX = this.jx;
					this.penultimateAY = this.jy;
					this.lastAntiX = this.ex;
					this.lastAntiY = this.ey;
					this.penultimateCX = this.dx;
					this.penultimateCY = this.dy;
					this.lastClockX = this.exPrev;
					this.lastClockY = this.eyPrev;
					var this26 = this.triArr;
					var tri4 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this26[this26.length] = tri4;
					var this27 = this.triArr;
					var tri5 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this27[this27.length] = tri5;
				}
				if(clockWise && this.lastClock) {
					this.penultimateAX = this.jx;
					this.penultimateAY = this.jy;
					this.lastAntiX = this.ex;
					this.lastAntiY = this.ey;
					this.penultimateCX = this.dx;
					this.penultimateCY = this.dy;
					this.lastClockX = this.exPrev;
					this.lastClockY = this.eyPrev;
					var this28 = this.triArr;
					var tri6 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this28[this28.length] = tri6;
					var this29 = this.triArr;
					var tri7 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
					this29[this29.length] = tri7;
				}
				if(!clockWise && !this.lastClock) {
					this.penultimateCX = this.dx;
					this.penultimateCY = this.dy;
					this.lastClockX = this.jx;
					this.lastClockY = this.jy;
					this.penultimateAX = this.dxPrev;
					this.penultimateAY = this.dyPrev;
					this.lastAntiX = this.ex;
					this.lastAntiY = this.ey;
					var this30 = this.triArr;
					var tri8 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
					this30[this30.length] = tri8;
					var this31 = this.triArr;
					var tri9 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
					this31[this31.length] = tri9;
				}
				if(!clockWise && this.lastClock) {
					this.penultimateAX = this.dxPrev;
					this.penultimateAY = this.dyPrev;
					this.lastAntiX = this.ex;
					this.lastAntiY = this.ey;
					this.penultimateCX = this.jx;
					this.penultimateCY = this.jy;
					this.lastClockX = this.dx;
					this.lastClockY = this.dy;
					var this32 = this.triArr;
					var tri10 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
					this32[this32.length] = tri10;
					var this33 = this.triArr;
					var tri11 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
					this33[this33.length] = tri11;
				}
			}
		}
		if(curveEnds) {
			if(clockWise) {
				var radius1 = width_ / 2;
				var edgePoly = this.pointsClock;
				var t4 = [];
				var this34;
				if(t4 == null) {
					var t5 = [];
					var this35 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
					this34 = this35;
				} else {
					this34 = t4;
				}
				var this36 = this34;
				var out1 = this36;
				var pi1 = Math.PI;
				var step2 = pi1 * 2 / 36;
				var positive1 = dif >= 0;
				var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
				var step3 = dif / totalSteps1;
				var angle1 = theta0;
				var cx1;
				var cy1;
				var bx1 = 0;
				var by1 = 0;
				var p21 = edgePoly.length;
				var count = 0;
				var _g4 = 0;
				var _g12 = totalSteps1 + 1;
				while(_g4 < _g12) {
					var i3 = _g4++;
					cx1 = ax_ + radius1 * Math.sin(angle1);
					cy1 = ay_ + radius1 * Math.cos(angle1);
					if(i3 != 0) {
						var t6 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
						out1[out1.length] = t6;
						edgePoly[p21++] = cx1;
						edgePoly[p21++] = cy1;
					}
					angle1 += step3;
					bx1 = cx1;
					by1 = cy1;
				}
				var trilateralArray = out1;
				var this37 = this.triArr;
				var _g5 = 0;
				while(_g5 < trilateralArray.length) {
					var t7 = trilateralArray[_g5];
					++_g5;
					this37[this37.length] = t7;
				}
			} else {
				var radius2 = width_ / 2;
				var edgePoly1 = this.pointsAnti;
				var t8 = [];
				var this38;
				if(t8 == null) {
					var t9 = [];
					var this39 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
					this38 = this39;
				} else {
					this38 = t8;
				}
				var this40 = this38;
				var out2 = this40;
				var pi2 = Math.PI;
				var step4 = pi2 * 2 / 36;
				var positive2 = dif >= 0;
				var totalSteps2 = Math.ceil(Math.abs(dif) / step4);
				var step5 = dif / totalSteps2;
				var angle2 = theta0;
				var cx2;
				var cy2;
				var bx2 = 0;
				var by2 = 0;
				var p22 = edgePoly1.length;
				var count1 = 0;
				var _g6 = 0;
				var _g13 = totalSteps2 + 1;
				while(_g6 < _g13) {
					var i4 = _g6++;
					cx2 = ax_ + radius2 * Math.sin(angle2);
					cy2 = ay_ + radius2 * Math.cos(angle2);
					if(i4 != 0) {
						var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
						out2[out2.length] = t10;
						edgePoly1[p22++] = cx2;
						edgePoly1[p22++] = cy2;
					}
					angle2 += step5;
					bx2 = cx2;
					by2 = cy2;
				}
				var trilateralArray1 = out2;
				var this41 = this.triArr;
				var _g7 = 0;
				while(_g7 < trilateralArray1.length) {
					var t11 = trilateralArray1[_g7];
					++_g7;
					this41[this41.length] = t11;
				}
			}
		} else if(this.count != 0) {
			if(overlap) {
				if(clockWise) {
					var this42 = this.triArr;
					var tri12 = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
					this42[this42.length] = tri12;
				} else {
					var this43 = this.triArr;
					var tri13 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
					this43[this43.length] = tri13;
				}
			} else if(clockWise) {
				var this44 = this.triArr;
				var tri14 = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this44[this44.length] = tri14;
			} else {
				var this45 = this.triArr;
				var tri15 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this45[this45.length] = tri15;
			}
		}
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kcx = this.ex;
		this.kcy = this.ey;
		if(curveEnds && !overlap && this.count != 0) {
			if(clockWise) {
				var this46 = this.triArr;
				var tri16 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
				this46[this46.length] = tri16;
				var this47 = this.triArr;
				var tri17 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
				this47[this47.length] = tri17;
			} else {
				var this48 = this.triArr;
				var tri18 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
				this48[this48.length] = tri18;
				var this49 = this.triArr;
				var tri19 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
				this49[this49.length] = tri19;
			}
		}
		this.jxOld = this.jx;
		this.jyOld = this.jy;
		this.lastClock = clockWise;
		this.count++;
		return this.triArr;
	}
	,overlapQuad: function() {
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
		this1[this1.length] = tri;
		var this2 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
		this2[this2.length] = tri1;
	}
	,end: function(width_) {
		this.endEdges();
		if(this.count != 0) {
			var ax = this.bx;
			var ay = this.by;
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma = -this.angle1 - Math.PI / 2 - Math.PI;
			var temp = [];
			var this1 = this.triArr;
			var t = [];
			var this2;
			if(t == null) {
				var t1 = [];
				var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this2 = this3;
			} else {
				this2 = t;
			}
			var this4 = this2;
			var out = this4;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(beta >= 0 && beta > Math.PI) {
					f = beta;
				} else {
					var a = beta % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this5 = f;
				var za = this5;
				var f1;
				if(gamma >= 0 && gamma > Math.PI) {
					f1 = gamma;
				} else {
					var a1 = gamma % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this6 = f1;
				var zb = this6;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(fa - fb);
				var clockwise = beta < gamma;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(beta >= 0 && beta > Math.PI) {
					f2 = beta;
				} else {
					var a2 = beta % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this7 = f2;
				var za1 = this7;
				var f3;
				if(gamma >= 0 && gamma > Math.PI) {
					f3 = gamma;
				} else {
					var a3 = gamma % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this8 = f3;
				var zb1 = this8;
				var fa1 = za1;
				var fb1 = zb1;
				var theta1 = Math.abs(fa1 - fb1);
				var clockwise1 = beta < gamma;
				var dif2 = clockwise1 ? theta1 : -theta1;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(beta >= 0 && beta > Math.PI) {
					f4 = beta;
				} else {
					var a4 = beta % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this9 = f4;
				var za2 = this9;
				var f5;
				if(gamma >= 0 && gamma > Math.PI) {
					f5 = gamma;
				} else {
					var a5 = gamma % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this10 = f5;
				var zb2 = this10;
				var fa2 = za2;
				var fb2 = zb2;
				var theta2 = Math.abs(fa2 - fb2);
				var smallest = theta2 <= Math.PI;
				var clockwise2 = beta < gamma;
				var dif3 = clockwise2 ? theta2 : -theta2;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
				break;
			case 3:
				var f6;
				if(beta >= 0 && beta > Math.PI) {
					f6 = beta;
				} else {
					var a6 = beta % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this11 = f6;
				var za3 = this11;
				var f7;
				if(gamma >= 0 && gamma > Math.PI) {
					f7 = gamma;
				} else {
					var a7 = gamma % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this12 = f7;
				var zb3 = this12;
				var fa3 = za3;
				var fb3 = zb3;
				var theta3 = Math.abs(fa3 - fb3);
				var largest = theta3 > Math.PI;
				var clockwise3 = beta < gamma;
				var dif4 = clockwise3 ? theta3 : -theta3;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			}
			var positive = dif >= 0;
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var p2 = temp.length;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				temp[p2++] = cx;
				temp[p2++] = cy;
				if(i != 0) {
					var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t2;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t3 = triArr[_g2];
				++_g2;
				this1[this1.length] = t3;
			}
			var pA = this.pointsAnti.length;
			var len = temp.length / 2 | 0;
			var _g3 = 0;
			var _g11 = len + 2;
			while(_g3 < _g11) {
				var i1 = _g3++;
				this.pointsAnti[pA++] = temp[i1];
			}
			var pC = this.pointsClock.length;
			var _g21 = 1;
			var _g31 = len / 2 + 1 | 0;
			while(_g21 < _g31) {
				var i2 = _g21++;
				this.pointsClock[pC++] = temp[temp.length - 2 * i2];
				this.pointsClock[pC++] = temp[temp.length - 2 * i2 - 1];
			}
		}
	}
	,add: function(trilateral1) {
		var this1 = this.triArr;
		this1[this1.length] = trilateral1;
	}
	,addArray: function(trilateralArray) {
		var this1 = this.triArr;
		var _g = 0;
		while(_g < trilateralArray.length) {
			var t = trilateralArray[_g];
			++_g;
			this1[this1.length] = t;
		}
	}
	,addTri: function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
		if(mark_ == null) {
			mark_ = 0;
		}
		var this1 = this.triArr;
		var tri = new trilateral_tri_Trilateral(ax_,ay_,bx_,by_,cx_,cy_,mark_);
		this1[this1.length] = tri;
	}
	,addPieXstart: function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
		if(sides == null) {
			sides = 36;
		}
		if(mark == null) {
			mark = 0;
		}
		var temp = [];
		var this1 = this.triArr;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / sides;
		var dif;
		switch(prefer._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var p2 = temp.length;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			temp[p2++] = cx;
			temp[p2++] = cy;
			if(i != 0) {
				var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t2;
				if(mark != 0) {
					t2.mark = mark;
				}
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t3 = triArr[_g2];
			++_g2;
			this1[this1.length] = t3;
		}
		var pA = this.pointsAnti.length;
		var len = temp.length / 2 | 0;
		var p4 = temp.length / 4 | 0;
		var _g3 = 0;
		var _g11 = p4;
		while(_g3 < _g11) {
			var i1 = _g3++;
			this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
			this.pointsAnti[pA++] = temp[len - 2 * i1];
		}
		var pC = this.pointsClock.length;
		var _g21 = 0;
		var _g31 = p4;
		while(_g21 < _g31) {
			var i2 = _g21++;
			this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
			this.pointsClock[pC++] = temp[i2 * 2 + len];
		}
	}
	,addPieX: function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
		if(sides == null) {
			sides = 36;
		}
		if(mark == null) {
			mark = 0;
		}
		var temp = [];
		var this1 = this.triArr;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / sides;
		var dif;
		switch(prefer._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var p2 = temp.length;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			temp[p2++] = cx;
			temp[p2++] = cy;
			if(i != 0) {
				var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t2;
				if(mark != 0) {
					t2.mark = mark;
				}
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t3 = triArr[_g2];
			++_g2;
			this1[this1.length] = t3;
		}
		var pA = this.pointsAnti.length;
		var len = temp.length / 2 | 0;
		var _g3 = 0;
		var _g11 = len + 2;
		while(_g3 < _g11) {
			var i1 = _g3++;
			this.pointsAnti[pA++] = temp[i1];
		}
		var pC = this.pointsClock.length;
		var _g21 = 1;
		var _g31 = len / 2 + 1 | 0;
		while(_g21 < _g31) {
			var i2 = _g21++;
			this.pointsClock[pC++] = temp[temp.length - 2 * i2];
			this.pointsClock[pC++] = temp[temp.length - 2 * i2 - 1];
		}
	}
	,addPie: function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
		if(sides == null) {
			sides = 36;
		}
		if(mark == null) {
			mark = 0;
		}
		var this1 = this.triArr;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / sides;
		var dif;
		switch(prefer._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx = ax + radius * Math.sin(angle);
			cy = ay + radius * Math.cos(angle);
			if(i != 0) {
				var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
				out[out.length] = t2;
				if(mark != 0) {
					t2.mark = mark;
				}
			}
			angle += step1;
			bx = cx;
			by = cy;
		}
		var triArr = out;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t3 = triArr[_g2];
			++_g2;
			this1[this1.length] = t3;
		}
	}
	,computeJ: function(width_,theta0,dif) {
		var gamma = Math.abs(dif) / 2;
		var h = width_ / 2 / Math.cos(gamma);
		var f;
		if(theta0 <= Math.PI && theta0 > -Math.PI) {
			f = theta0;
		} else {
			var a = (theta0 + Math.PI) % (2 * Math.PI);
			f = a >= 0 ? a - Math.PI : a + Math.PI;
		}
		var this1 = f;
		var start = this1;
		var start2 = start;
		var delta = start2 + dif / 2 + Math.PI;
		this.jx = this.ax + h * Math.sin(delta);
		this.jy = this.ay + h * Math.cos(delta);
	}
	,addDot: function(x,y,color,width_) {
		var w = width_ * 0.07;
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		var out = this3;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = x + w * Math.sin(theta);
			by = y + w * Math.cos(theta);
			theta += step;
			cx = x + w * Math.sin(theta);
			cy = y + w * Math.cos(theta);
			var t2 = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = t2;
			t2.mark = color;
		}
		var trilateralArray = out;
		var this4 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t3 = trilateralArray[_g2];
			++_g2;
			this4[this4.length] = t3;
		}
	}
	,addSmallTriangles: function(clockWise,width_) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxOld,this.dyOld,this.jx,this.jy,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		} else {
			var this3 = this.triArr;
			var tri2 = new trilateral_tri_Trilateral(this.ax,this.ay,this.exOld,this.eyOld,this.jx,this.jy,0);
			this3[this3.length] = tri2;
			var this4 = this.triArr;
			var tri3 = new trilateral_tri_Trilateral(this.ax,this.ay,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this4[this4.length] = tri3;
		}
	}
	,addTriangleCorners: function(oldx_,oldy_,prevx_,prevy_,width_) {
		var w = width_ * 0.07;
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		var out = this3;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = oldx_ + w * Math.sin(theta);
			by = oldy_ + w * Math.cos(theta);
			theta += step;
			cx = oldx_ + w * Math.sin(theta);
			cy = oldy_ + w * Math.cos(theta);
			var t2 = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t2;
			t2.mark = 4;
		}
		var trilateralArray = out;
		var this4 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t3 = trilateralArray[_g2];
			++_g2;
			this4[this4.length] = t3;
		}
		var t4 = [];
		var this5;
		if(t4 == null) {
			var t5 = [];
			var this6 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
			this5 = this6;
		} else {
			this5 = t4;
		}
		var this7 = this5;
		var out1 = this7;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g3 = 0;
		var _g11 = 36;
		while(_g3 < _g11) {
			var i1 = _g3++;
			bx1 = prevx_ + w * Math.sin(theta1);
			by1 = prevy_ + w * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + w * Math.sin(theta1);
			cy1 = prevy_ + w * Math.cos(theta1);
			var t6 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t6;
			t6.mark = 3;
		}
		var trilateralArray1 = out1;
		var this8 = this.triArr;
		var _g4 = 0;
		while(_g4 < trilateralArray1.length) {
			var t7 = trilateralArray1[_g4];
			++_g4;
			this8[this8.length] = t7;
		}
		var ax = this.ax;
		var ay = this.ay;
		var t8 = [];
		var this9;
		if(t8 == null) {
			var t9 = [];
			var this10 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
			this9 = this10;
		} else {
			this9 = t8;
		}
		var this11 = this9;
		var out2 = this11;
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g5 = 0;
		var _g12 = 36;
		while(_g5 < _g12) {
			var i2 = _g5++;
			bx2 = ax + w * Math.sin(theta2);
			by2 = ay + w * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + w * Math.sin(theta2);
			cy2 = ay + w * Math.cos(theta2);
			var t10 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t10;
			t10.mark = 10;
		}
		var trilateralArray2 = out2;
		var this12 = this.triArr;
		var _g6 = 0;
		while(_g6 < trilateralArray2.length) {
			var t11 = trilateralArray2[_g6];
			++_g6;
			this12[this12.length] = t11;
		}
		var ax1 = this.jx;
		var ay1 = this.jy;
		var t12 = [];
		var this13;
		if(t12 == null) {
			var t13 = [];
			var this14 = t13 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t13;
			this13 = this14;
		} else {
			this13 = t12;
		}
		var this15 = this13;
		var out3 = this15;
		var pi3 = Math.PI;
		var theta3 = pi3 / 2;
		var step3 = pi3 * 2 / 36;
		var bx3;
		var by3;
		var cx3;
		var cy3;
		var _g7 = 0;
		var _g13 = 36;
		while(_g7 < _g13) {
			var i3 = _g7++;
			bx3 = ax1 + w * Math.sin(theta3);
			by3 = ay1 + w * Math.cos(theta3);
			theta3 += step3;
			cx3 = ax1 + w * Math.sin(theta3);
			cy3 = ay1 + w * Math.cos(theta3);
			var t14 = new trilateral_tri_Trilateral(ax1,ay1,bx3,by3,cx3,cy3);
			out3[out3.length] = t14;
			t14.mark = 5;
		}
		var trilateralArray3 = out3;
		var this16 = this.triArr;
		var _g8 = 0;
		while(_g8 < trilateralArray3.length) {
			var t15 = trilateralArray3[_g8];
			++_g8;
			this16[this16.length] = t15;
		}
	}
	,addTriangleCornersLess: function(oldx_,oldy_,prevx_,prevy_,width_) {
		var w = width_ * 0.07;
		var t = [];
		var this1;
		if(t == null) {
			var t1 = [];
			var this2 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this1 = this2;
		} else {
			this1 = t;
		}
		var this3 = this1;
		var out = this3;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = oldx_ + w * Math.sin(theta);
			by = oldy_ + w * Math.cos(theta);
			theta += step;
			cx = oldx_ + w * Math.sin(theta);
			cy = oldy_ + w * Math.cos(theta);
			var t2 = new trilateral_tri_Trilateral(oldx_,oldy_,bx,by,cx,cy);
			out[out.length] = t2;
			t2.mark = 4;
		}
		var trilateralArray = out;
		var this4 = this.triArr;
		var _g2 = 0;
		while(_g2 < trilateralArray.length) {
			var t3 = trilateralArray[_g2];
			++_g2;
			this4[this4.length] = t3;
		}
		var t4 = [];
		var this5;
		if(t4 == null) {
			var t5 = [];
			var this6 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
			this5 = this6;
		} else {
			this5 = t4;
		}
		var this7 = this5;
		var out1 = this7;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2;
		var step1 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g3 = 0;
		var _g11 = 36;
		while(_g3 < _g11) {
			var i1 = _g3++;
			bx1 = prevx_ + w * Math.sin(theta1);
			by1 = prevy_ + w * Math.cos(theta1);
			theta1 += step1;
			cx1 = prevx_ + w * Math.sin(theta1);
			cy1 = prevy_ + w * Math.cos(theta1);
			var t6 = new trilateral_tri_Trilateral(prevx_,prevy_,bx1,by1,cx1,cy1);
			out1[out1.length] = t6;
			t6.mark = 3;
		}
		var trilateralArray1 = out1;
		var this8 = this.triArr;
		var _g4 = 0;
		while(_g4 < trilateralArray1.length) {
			var t7 = trilateralArray1[_g4];
			++_g4;
			this8[this8.length] = t7;
		}
		var ax = this.jx;
		var ay = this.jy;
		var t8 = [];
		var this9;
		if(t8 == null) {
			var t9 = [];
			var this10 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
			this9 = this10;
		} else {
			this9 = t8;
		}
		var this11 = this9;
		var out2 = this11;
		var pi2 = Math.PI;
		var theta2 = pi2 / 2;
		var step2 = pi2 * 2 / 36;
		var bx2;
		var by2;
		var cx2;
		var cy2;
		var _g5 = 0;
		var _g12 = 36;
		while(_g5 < _g12) {
			var i2 = _g5++;
			bx2 = ax + w * Math.sin(theta2);
			by2 = ay + w * Math.cos(theta2);
			theta2 += step2;
			cx2 = ax + w * Math.sin(theta2);
			cy2 = ay + w * Math.cos(theta2);
			var t10 = new trilateral_tri_Trilateral(ax,ay,bx2,by2,cx2,cy2);
			out2[out2.length] = t10;
			t10.mark = 5;
		}
		var trilateralArray2 = out2;
		var this12 = this.triArr;
		var _g6 = 0;
		while(_g6 < trilateralArray2.length) {
			var t11 = trilateralArray2[_g6];
			++_g6;
			this12[this12.length] = t11;
		}
	}
	,connectQuadsWhenQuadsOverlay: function(clockWise,width_) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.ax,this.ay,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.ax,this.ay,0);
			this2[this2.length] = tri1;
		}
	}
	,connectQuads: function(clockWise,width_) {
		if(clockWise) {
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxOld,this.dyOld,this.exPrev,this.eyPrev,this.jx,this.jy,0);
			this1[this1.length] = tri;
		} else {
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.exOld,this.eyOld,this.dxPrev,this.dyPrev,this.jx,this.jy,0);
			this2[this2.length] = tri1;
		}
	}
	,addInitialQuads: function(clockWise,width_) {
		this.quadIndex = this.triArr.length;
		if(this.count == 0) {
			this.penultimateAX = this.dxPrev;
			this.penultimateAY = this.dyPrev;
			this.lastAntiX = this.ex;
			this.lastAntiY = this.ey;
			this.penultimateCX = this.dx;
			this.penultimateCY = this.dy;
			this.lastClockX = this.exPrev;
			this.lastClockY = this.eyPrev;
			var this1 = this.triArr;
			var tri = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
			this1[this1.length] = tri;
			var this2 = this.triArr;
			var tri1 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.exPrev,this.eyPrev,0);
			this2[this2.length] = tri1;
		} else {
			if(clockWise && !this.lastClock) {
				this.penultimateAX = this.jx;
				this.penultimateAY = this.jy;
				this.lastAntiX = this.ex;
				this.lastAntiY = this.ey;
				this.penultimateCX = this.dx;
				this.penultimateCY = this.dy;
				this.lastClockX = this.exPrev;
				this.lastClockY = this.eyPrev;
				var this3 = this.triArr;
				var tri2 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this3[this3.length] = tri2;
				var this4 = this.triArr;
				var tri3 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this4[this4.length] = tri3;
			}
			if(clockWise && this.lastClock) {
				this.penultimateAX = this.jx;
				this.penultimateAY = this.jy;
				this.lastAntiX = this.ex;
				this.lastAntiY = this.ey;
				this.penultimateCX = this.dx;
				this.penultimateCY = this.dy;
				this.lastClockX = this.exPrev;
				this.lastClockY = this.eyPrev;
				var this5 = this.triArr;
				var tri4 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this5[this5.length] = tri4;
				var this6 = this.triArr;
				var tri5 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.exPrev,this.eyPrev,0);
				this6[this6.length] = tri5;
			}
			if(!clockWise && !this.lastClock) {
				this.penultimateCX = this.dx;
				this.penultimateCY = this.dy;
				this.lastClockX = this.jx;
				this.lastClockY = this.jy;
				this.penultimateAX = this.dxPrev;
				this.penultimateAY = this.dyPrev;
				this.lastAntiX = this.ex;
				this.lastAntiY = this.ey;
				var this7 = this.triArr;
				var tri6 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.jx,this.jy,0);
				this7[this7.length] = tri6;
				var this8 = this.triArr;
				var tri7 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.dx,this.dy,this.ex,this.ey,0);
				this8[this8.length] = tri7;
			}
			if(!clockWise && this.lastClock) {
				this.penultimateAX = this.dxPrev;
				this.penultimateAY = this.dyPrev;
				this.lastAntiX = this.ex;
				this.lastAntiY = this.ey;
				this.penultimateCX = this.jx;
				this.penultimateCY = this.jy;
				this.lastClockX = this.dx;
				this.lastClockY = this.dy;
				var this9 = this.triArr;
				var tri8 = new trilateral_tri_Trilateral(this.jx,this.jy,this.dx,this.dy,this.ex,this.ey,0);
				this9[this9.length] = tri8;
				var this10 = this.triArr;
				var tri9 = new trilateral_tri_Trilateral(this.dxPrev,this.dyPrev,this.jx,this.jy,this.ex,this.ey,0);
				this10[this10.length] = tri9;
			}
		}
	}
	,endEdges: function() {
		var pC = this.pointsClock.length;
		var pA = this.pointsAnti.length;
		this.pointsClock[pC++] = this.penultimateCX;
		this.pointsClock[pC++] = this.penultimateCY;
		this.pointsClock[pC++] = this.lastClockX;
		this.pointsClock[pC++] = this.lastClockY;
		this.pointsAnti[pA++] = this.penultimateAX;
		this.pointsAnti[pA++] = this.penultimateAY;
		this.pointsAnti[pA++] = this.lastAntiX;
		this.pointsAnti[pA++] = this.lastAntiY;
	}
	,addQuads: function(clockWise,width_) {
		var pC = 0;
		var pA = 0;
		if(clockWise && !this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jxOld;
				this.pointsClock[pC++] = this.jyOld;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jxOld,this.jyOld);
			}
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
		}
		if(clockWise && this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				this.pointsAnti[pA++] = this.kbx;
				this.pointsAnti[pA++] = this.kby;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.kax;
				this.pointsClock[pC++] = this.kay;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jxOld;
				this.pointsAnti[pA++] = this.jyOld;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.ncx,this.ncy);
			}
		}
		if(!clockWise && !this.lastClock) {
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jxOld;
				this.pointsClock[pC++] = this.jyOld;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.jxOld,this.jyOld);
			}
		}
		if(!clockWise && this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jxOld;
				this.pointsAnti[pA++] = this.jyOld;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
			}
		}
	}
	,storeLastQuads: function() {
		this.kax = this.dxPrev;
		this.kay = this.dyPrev;
		this.kbx = this.dx;
		this.kby = this.dy;
		this.ncx = this.exPrev;
		this.ncy = this.eyPrev;
		this.kcx = this.ex;
		this.kcy = this.ey;
	}
	,isClockwise: function(x,y) {
		var x1 = this.dxOld - x;
		var y1 = this.dyOld - y;
		var x2 = this.exOld - x;
		var y2 = this.eyOld - y;
		return x1 * x1 + y1 * y1 > x2 * x2 + y2 * y2;
	}
	,line: function(ax_,ay_,bx_,by_,width_,endLineCurve) {
		if(endLineCurve == null) {
			endLineCurve = 0;
		}
		this.ax = bx_;
		this.ay = by_;
		this.bx = ax_;
		this.by = ay_;
		this.halfA = Math.PI / 2;
		this.beta = Math.PI / 2 - this.halfA;
		this.r = width_ / 2 * Math.cos(this.beta);
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		var dxPrev_ = this.dx;
		var dyPrev_ = this.dy;
		var exPrev_ = this.ex;
		var eyPrev_ = this.ey;
		this.ax = ax_;
		this.ay = ay_;
		this.bx = bx_;
		this.by = by_;
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
		switch(endLineCurve) {
		case 0:
			break;
		case 1:
			var radius = width_ / 2;
			var beta = -this.angle1 - Math.PI / 2;
			var gamma = -this.angle1 - Math.PI / 2 + Math.PI;
			var this1 = this.triArr;
			var t = [];
			var this2;
			if(t == null) {
				var t1 = [];
				var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this2 = this3;
			} else {
				this2 = t;
			}
			var this4 = this2;
			var out = this4;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f;
				if(beta >= 0 && beta > Math.PI) {
					f = beta;
				} else {
					var a = beta % (2 * Math.PI);
					f = a >= 0 ? a : a + 2 * Math.PI;
				}
				var this5 = f;
				var za = this5;
				var f1;
				if(gamma >= 0 && gamma > Math.PI) {
					f1 = gamma;
				} else {
					var a1 = gamma % (2 * Math.PI);
					f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
				}
				var this6 = f1;
				var zb = this6;
				var fa = za;
				var fb = zb;
				var theta = Math.abs(fa - fb);
				var clockwise = beta < gamma;
				var dif1 = clockwise ? theta : -theta;
				dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
				break;
			case 1:
				var f2;
				if(beta >= 0 && beta > Math.PI) {
					f2 = beta;
				} else {
					var a2 = beta % (2 * Math.PI);
					f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
				}
				var this7 = f2;
				var za1 = this7;
				var f3;
				if(gamma >= 0 && gamma > Math.PI) {
					f3 = gamma;
				} else {
					var a3 = gamma % (2 * Math.PI);
					f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
				}
				var this8 = f3;
				var zb1 = this8;
				var fa1 = za1;
				var fb1 = zb1;
				var theta1 = Math.abs(fa1 - fb1);
				var clockwise1 = beta < gamma;
				var dif2 = clockwise1 ? theta1 : -theta1;
				dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
				break;
			case 2:
				var f4;
				if(beta >= 0 && beta > Math.PI) {
					f4 = beta;
				} else {
					var a4 = beta % (2 * Math.PI);
					f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
				}
				var this9 = f4;
				var za2 = this9;
				var f5;
				if(gamma >= 0 && gamma > Math.PI) {
					f5 = gamma;
				} else {
					var a5 = gamma % (2 * Math.PI);
					f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
				}
				var this10 = f5;
				var zb2 = this10;
				var fa2 = za2;
				var fb2 = zb2;
				var theta2 = Math.abs(fa2 - fb2);
				var smallest = theta2 <= Math.PI;
				var clockwise2 = beta < gamma;
				var dif3 = clockwise2 ? theta2 : -theta2;
				dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
				break;
			case 3:
				var f6;
				if(beta >= 0 && beta > Math.PI) {
					f6 = beta;
				} else {
					var a6 = beta % (2 * Math.PI);
					f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
				}
				var this11 = f6;
				var za3 = this11;
				var f7;
				if(gamma >= 0 && gamma > Math.PI) {
					f7 = gamma;
				} else {
					var a7 = gamma % (2 * Math.PI);
					f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
				}
				var this12 = f7;
				var zb3 = this12;
				var fa3 = za3;
				var fb3 = zb3;
				var theta3 = Math.abs(fa3 - fb3);
				var largest = theta3 > Math.PI;
				var clockwise3 = beta < gamma;
				var dif4 = clockwise3 ? theta3 : -theta3;
				dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
				break;
			}
			var positive = dif >= 0;
			var totalSteps = Math.ceil(Math.abs(dif) / step);
			var step1 = dif / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax_ + radius * Math.sin(angle);
				cy = ay_ + radius * Math.cos(angle);
				if(i != 0) {
					var t2 = new trilateral_tri_Trilateral(ax_,ay_,bx,by,cx,cy);
					out[out.length] = t2;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t3 = triArr[_g2];
				++_g2;
				this1[this1.length] = t3;
			}
			break;
		case 2:
			var radius1 = width_ / 2;
			var beta1 = -this.angle1 - Math.PI / 2;
			var gamma1 = -this.angle1 - Math.PI / 2 - Math.PI;
			var this13 = this.triArr;
			var t4 = [];
			var this14;
			if(t4 == null) {
				var t5 = [];
				var this15 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
				this14 = this15;
			} else {
				this14 = t4;
			}
			var this16 = this14;
			var out1 = this16;
			var pi1 = Math.PI;
			var step2 = pi1 * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f8;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f8 = beta1;
				} else {
					var a8 = beta1 % (2 * Math.PI);
					f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
				}
				var this17 = f8;
				var za4 = this17;
				var f9;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f9 = gamma1;
				} else {
					var a9 = gamma1 % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this18 = f9;
				var zb4 = this18;
				var fa4 = za4;
				var fb4 = zb4;
				var theta4 = Math.abs(fa4 - fb4);
				var clockwise4 = beta1 < gamma1;
				var dif6 = clockwise4 ? theta4 : -theta4;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f10;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f10 = beta1;
				} else {
					var a10 = beta1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this19 = f10;
				var za5 = this19;
				var f11;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f11 = gamma1;
				} else {
					var a11 = gamma1 % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this20 = f11;
				var zb5 = this20;
				var fa5 = za5;
				var fb5 = zb5;
				var theta5 = Math.abs(fa5 - fb5);
				var clockwise5 = beta1 < gamma1;
				var dif7 = clockwise5 ? theta5 : -theta5;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f12;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f12 = beta1;
				} else {
					var a12 = beta1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this21 = f12;
				var za6 = this21;
				var f13;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f13 = gamma1;
				} else {
					var a13 = gamma1 % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this22 = f13;
				var zb6 = this22;
				var fa6 = za6;
				var fb6 = zb6;
				var theta6 = Math.abs(fa6 - fb6);
				var smallest1 = theta6 <= Math.PI;
				var clockwise6 = beta1 < gamma1;
				var dif8 = clockwise6 ? theta6 : -theta6;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
				break;
			case 3:
				var f14;
				if(beta1 >= 0 && beta1 > Math.PI) {
					f14 = beta1;
				} else {
					var a14 = beta1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this23 = f14;
				var za7 = this23;
				var f15;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f15 = gamma1;
				} else {
					var a15 = gamma1 % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this24 = f15;
				var zb7 = this24;
				var fa7 = za7;
				var fb7 = zb7;
				var theta7 = Math.abs(fa7 - fb7);
				var largest1 = theta7 > Math.PI;
				var clockwise7 = beta1 < gamma1;
				var dif9 = clockwise7 ? theta7 : -theta7;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			}
			var positive1 = dif5 >= 0;
			var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
			var step3 = dif5 / totalSteps1;
			var angle1 = beta1;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var _g3 = 0;
			var _g11 = totalSteps1 + 1;
			while(_g3 < _g11) {
				var i1 = _g3++;
				cx1 = bx_ + radius1 * Math.sin(angle1);
				cy1 = by_ + radius1 * Math.cos(angle1);
				if(i1 != 0) {
					var t6 = new trilateral_tri_Trilateral(bx_,by_,bx1,by1,cx1,cy1);
					out1[out1.length] = t6;
				}
				angle1 += step3;
				bx1 = cx1;
				by1 = cy1;
			}
			var triArr1 = out1;
			var _g4 = 0;
			while(_g4 < triArr1.length) {
				var t7 = triArr1[_g4];
				++_g4;
				this13[this13.length] = t7;
			}
			break;
		case 3:
			var radius2 = width_ / 2;
			var beta2 = -this.angle1 - Math.PI / 2;
			var gamma2 = -this.angle1 - Math.PI / 2 + Math.PI;
			var this25 = this.triArr;
			var t8 = [];
			var this26;
			if(t8 == null) {
				var t9 = [];
				var this27 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
				this26 = this27;
			} else {
				this26 = t8;
			}
			var this28 = this26;
			var out2 = this28;
			var pi2 = Math.PI;
			var step4 = pi2 * 2 / 36;
			var dif10;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f16;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f16 = beta2;
				} else {
					var a16 = beta2 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this29 = f16;
				var za8 = this29;
				var f17;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f17 = gamma2;
				} else {
					var a17 = gamma2 % (2 * Math.PI);
					f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
				}
				var this30 = f17;
				var zb8 = this30;
				var fa8 = za8;
				var fb8 = zb8;
				var theta8 = Math.abs(fa8 - fb8);
				var clockwise8 = beta2 < gamma2;
				var dif11 = clockwise8 ? theta8 : -theta8;
				dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
				break;
			case 1:
				var f18;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f18 = beta2;
				} else {
					var a18 = beta2 % (2 * Math.PI);
					f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
				}
				var this31 = f18;
				var za9 = this31;
				var f19;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f19 = gamma2;
				} else {
					var a19 = gamma2 % (2 * Math.PI);
					f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
				}
				var this32 = f19;
				var zb9 = this32;
				var fa9 = za9;
				var fb9 = zb9;
				var theta9 = Math.abs(fa9 - fb9);
				var clockwise9 = beta2 < gamma2;
				var dif12 = clockwise9 ? theta9 : -theta9;
				dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
				break;
			case 2:
				var f20;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f20 = beta2;
				} else {
					var a20 = beta2 % (2 * Math.PI);
					f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
				}
				var this33 = f20;
				var za10 = this33;
				var f21;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f21 = gamma2;
				} else {
					var a21 = gamma2 % (2 * Math.PI);
					f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
				}
				var this34 = f21;
				var zb10 = this34;
				var fa10 = za10;
				var fb10 = zb10;
				var theta10 = Math.abs(fa10 - fb10);
				var smallest2 = theta10 <= Math.PI;
				var clockwise10 = beta2 < gamma2;
				var dif13 = clockwise10 ? theta10 : -theta10;
				dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
				break;
			case 3:
				var f22;
				if(beta2 >= 0 && beta2 > Math.PI) {
					f22 = beta2;
				} else {
					var a22 = beta2 % (2 * Math.PI);
					f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
				}
				var this35 = f22;
				var za11 = this35;
				var f23;
				if(gamma2 >= 0 && gamma2 > Math.PI) {
					f23 = gamma2;
				} else {
					var a23 = gamma2 % (2 * Math.PI);
					f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
				}
				var this36 = f23;
				var zb11 = this36;
				var fa11 = za11;
				var fb11 = zb11;
				var theta11 = Math.abs(fa11 - fb11);
				var largest2 = theta11 > Math.PI;
				var clockwise11 = beta2 < gamma2;
				var dif14 = clockwise11 ? theta11 : -theta11;
				dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
				break;
			}
			var positive2 = dif10 >= 0;
			var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
			var step5 = dif10 / totalSteps2;
			var angle2 = beta2;
			var cx2;
			var cy2;
			var bx2 = 0;
			var by2 = 0;
			var _g5 = 0;
			var _g12 = totalSteps2 + 1;
			while(_g5 < _g12) {
				var i2 = _g5++;
				cx2 = ax_ + radius2 * Math.sin(angle2);
				cy2 = ay_ + radius2 * Math.cos(angle2);
				if(i2 != 0) {
					var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
					out2[out2.length] = t10;
				}
				angle2 += step5;
				bx2 = cx2;
				by2 = cy2;
			}
			var triArr2 = out2;
			var _g6 = 0;
			while(_g6 < triArr2.length) {
				var t11 = triArr2[_g6];
				++_g6;
				this25[this25.length] = t11;
			}
			var radius3 = width_ / 2;
			var beta3 = -this.angle1 - Math.PI / 2;
			var gamma3 = -this.angle1 - Math.PI / 2 - Math.PI;
			var this37 = this.triArr;
			var t12 = [];
			var this38;
			if(t12 == null) {
				var t13 = [];
				var this39 = t13 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t13;
				this38 = this39;
			} else {
				this38 = t12;
			}
			var this40 = this38;
			var out3 = this40;
			var pi3 = Math.PI;
			var step6 = pi3 * 2 / 36;
			var dif15;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f24;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f24 = beta3;
				} else {
					var a24 = beta3 % (2 * Math.PI);
					f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
				}
				var this41 = f24;
				var za12 = this41;
				var f25;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f25 = gamma3;
				} else {
					var a25 = gamma3 % (2 * Math.PI);
					f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
				}
				var this42 = f25;
				var zb12 = this42;
				var fa12 = za12;
				var fb12 = zb12;
				var theta12 = Math.abs(fa12 - fb12);
				var clockwise12 = beta3 < gamma3;
				var dif16 = clockwise12 ? theta12 : -theta12;
				dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
				break;
			case 1:
				var f26;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f26 = beta3;
				} else {
					var a26 = beta3 % (2 * Math.PI);
					f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
				}
				var this43 = f26;
				var za13 = this43;
				var f27;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f27 = gamma3;
				} else {
					var a27 = gamma3 % (2 * Math.PI);
					f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
				}
				var this44 = f27;
				var zb13 = this44;
				var fa13 = za13;
				var fb13 = zb13;
				var theta13 = Math.abs(fa13 - fb13);
				var clockwise13 = beta3 < gamma3;
				var dif17 = clockwise13 ? theta13 : -theta13;
				dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
				break;
			case 2:
				var f28;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f28 = beta3;
				} else {
					var a28 = beta3 % (2 * Math.PI);
					f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
				}
				var this45 = f28;
				var za14 = this45;
				var f29;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f29 = gamma3;
				} else {
					var a29 = gamma3 % (2 * Math.PI);
					f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
				}
				var this46 = f29;
				var zb14 = this46;
				var fa14 = za14;
				var fb14 = zb14;
				var theta14 = Math.abs(fa14 - fb14);
				var smallest3 = theta14 <= Math.PI;
				var clockwise14 = beta3 < gamma3;
				var dif18 = clockwise14 ? theta14 : -theta14;
				dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
				break;
			case 3:
				var f30;
				if(beta3 >= 0 && beta3 > Math.PI) {
					f30 = beta3;
				} else {
					var a30 = beta3 % (2 * Math.PI);
					f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
				}
				var this47 = f30;
				var za15 = this47;
				var f31;
				if(gamma3 >= 0 && gamma3 > Math.PI) {
					f31 = gamma3;
				} else {
					var a31 = gamma3 % (2 * Math.PI);
					f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
				}
				var this48 = f31;
				var zb15 = this48;
				var fa15 = za15;
				var fb15 = zb15;
				var theta15 = Math.abs(fa15 - fb15);
				var largest3 = theta15 > Math.PI;
				var clockwise15 = beta3 < gamma3;
				var dif19 = clockwise15 ? theta15 : -theta15;
				dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
				break;
			}
			var positive3 = dif15 >= 0;
			var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
			var step7 = dif15 / totalSteps3;
			var angle3 = beta3;
			var cx3;
			var cy3;
			var bx3 = 0;
			var by3 = 0;
			var _g7 = 0;
			var _g13 = totalSteps3 + 1;
			while(_g7 < _g13) {
				var i3 = _g7++;
				cx3 = bx_ + radius3 * Math.sin(angle3);
				cy3 = by_ + radius3 * Math.cos(angle3);
				if(i3 != 0) {
					var t14 = new trilateral_tri_Trilateral(bx_,by_,bx3,by3,cx3,cy3);
					out3[out3.length] = t14;
				}
				angle3 += step7;
				bx3 = cx3;
				by3 = cy3;
			}
			var triArr3 = out3;
			var _g8 = 0;
			while(_g8 < triArr3.length) {
				var t15 = triArr3[_g8];
				++_g8;
				this37[this37.length] = t15;
			}
			break;
		}
		var this49 = this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,exPrev_,eyPrev_,0);
		this49[this49.length] = tri;
		var this50 = this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,this.dx,this.dy,this.ex,this.ey,0);
		this50[this50.length] = tri1;
	}
	,computeDE: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
		if(this.dxPrev != null) {
			this.dxOld = this.dxPrev;
		}
		if(this.dyPrev != null) {
			this.dyOld = this.dyPrev;
		}
		if(this.exPrev != null) {
			this.exOld = this.exPrev;
		}
		if(this.eyPrev != null) {
			this.eyOld = this.eyPrev;
		}
		if(this.dx != null) {
			this.dxPrev = this.dx;
		}
		if(this.dy != null) {
			this.dyPrev = this.dy;
		}
		if(this.ex != null) {
			this.exPrev = this.ex;
		}
		if(this.ey != null) {
			this.eyPrev = this.ey;
		}
		this.dx = this.bx + this.r * Math.cos(this.angle1);
		this.dy = this.by + this.r * Math.sin(this.angle1);
		this.ex = this.bx + this.r * Math.cos(this.angle2);
		this.ey = this.by + this.r * Math.sin(this.angle2);
	}
	,anglesCompute: function() {
		this.theta = Math.atan2(this.ay - this.by,this.ax - this.bx);
		if(this.theta > 0) {
			if(this.halfA < 0) {
				this.angle2 = this.theta + this.halfA + Math.PI / 2;
				this.angle1 = this.theta - this.halfA;
			} else {
				this.angle1 = this.theta + this.halfA - Math.PI;
				this.angle2 = this.theta + this.halfA;
			}
		} else if(this.halfA > 0) {
			this.angle1 = this.theta + this.halfA - Math.PI;
			this.angle2 = this.theta + this.halfA;
		} else {
			this.angle2 = this.theta + this.halfA + Math.PI / 2;
			this.angle1 = this.theta - this.halfA;
		}
	}
	,thetaComputeAdj: function(qx,qy) {
		return -Math.atan2(this.ay - qy,this.ax - qx) - Math.PI / 2;
	}
};
var trilateral_justPath_EllipseArc = function(arc_) {
	this.arc = arc_;
};
trilateral_justPath_EllipseArc.__name__ = true;
trilateral_justPath_EllipseArc.prototype = {
	alphaPoint: function() {
		var theta = this.arc.alpha;
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
	,omegaPoint: function() {
		var theta = this.arc.omega;
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
	,lineRender: function(moveTo,lineTo,dA,renderFirst) {
		if(renderFirst == null) {
			renderFirst = true;
		}
		var sign = this.arc.delta > 0 ? 1 : -1;
		var totalSteps = Math.ceil(Math.abs(this.arc.delta) / dA);
		var theta = this.arc.alpha;
		var step = this.arc.delta / totalSteps;
		if(renderFirst) {
			var px = this.arc.cx + this.arc.rx * Math.cos(theta);
			var py = this.arc.cy + this.arc.ry * Math.sin(theta);
			px -= this.arc.cx;
			py -= this.arc.cy;
			var dx = px;
			var dy = py;
			px = dx * this.arc.phiCos - dy * this.arc.phiSin;
			py = dx * this.arc.phiSin + dy * this.arc.phiCos;
			this.x = px + this.arc.cx;
			this.y = py + this.arc.cy;
			moveTo(this.x,this.y);
		}
		var _g = 1;
		var _g1 = totalSteps;
		while(_g < _g1) {
			var i = _g++;
			theta += step;
			var px1 = this.arc.cx + this.arc.rx * Math.cos(theta);
			var py1 = this.arc.cy + this.arc.ry * Math.sin(theta);
			px1 -= this.arc.cx;
			py1 -= this.arc.cy;
			var dx1 = px1;
			var dy1 = py1;
			px1 = dx1 * this.arc.phiCos - dy1 * this.arc.phiSin;
			py1 = dx1 * this.arc.phiSin + dy1 * this.arc.phiCos;
			this.x = px1 + this.arc.cx;
			this.y = py1 + this.arc.cy;
			lineTo(this.x,this.y);
		}
		var theta1 = this.arc.omega;
		var px2 = this.arc.cx + this.arc.rx * Math.cos(theta1);
		var py2 = this.arc.cy + this.arc.ry * Math.sin(theta1);
		px2 -= this.arc.cx;
		py2 -= this.arc.cy;
		var dx2 = px2;
		var dy2 = py2;
		px2 = dx2 * this.arc.phiCos - dy2 * this.arc.phiSin;
		py2 = dx2 * this.arc.phiSin + dy2 * this.arc.phiCos;
		this.x = px2 + this.arc.cx;
		this.y = py2 + this.arc.cy;
		lineTo(this.x,this.y);
	}
	,calculatePoint: function(theta) {
		var px = this.arc.cx + this.arc.rx * Math.cos(theta);
		var py = this.arc.cy + this.arc.ry * Math.sin(theta);
		px -= this.arc.cx;
		py -= this.arc.cy;
		var dx = px;
		var dy = py;
		px = dx * this.arc.phiCos - dy * this.arc.phiSin;
		py = dx * this.arc.phiSin + dy * this.arc.phiCos;
		this.x = px + this.arc.cx;
		this.y = py + this.arc.cy;
	}
};
var trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$ = {};
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$.__name__ = true;
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$._new = function(sx,sy,xr,yr,phi,large,sweep,ex,ey) {
	var mx = (sx - ex) / 2;
	var my = (sy - ey) / 2;
	var ax = (sx + ex) / 2;
	var ay = (sy + ey) / 2;
	phi %= 360;
	phi = phi * Math.PI / 180;
	var sin = Math.sin(phi);
	var cos = Math.cos(phi);
	var x1 = mx * cos + my * sin;
	var y1 = -mx * sin + my * cos;
	var rx = Math.abs(xr);
	var ry = Math.abs(yr);
	var rxx = rx * rx;
	var ryy = ry * ry;
	var xx1 = x1 * x1;
	var yy1 = y1 * y1;
	var check = xx1 / rxx + yy1 / ryy;
	if(check > 1) {
		rx *= Math.sqrt(check);
		ry *= Math.sqrt(check);
		rxx = rx * rx;
		ryy = ry * ry;
	}
	var sign = large == sweep ? -1 : 1;
	var sq = (rxx * ryy - rxx * yy1 - ryy * xx1) / (rxx * yy1 + ryy * xx1);
	sq = sq < 0 ? 0 : sq;
	var coef = sign * Math.sqrt(sq);
	var cx1 = coef * rx * y1 / ry;
	var cy1 = -coef * ry * x1 / rx;
	var cx = ax + cx1 * cos - cy1 * sin;
	var cy = ay + cx1 * sin + cy1 * cos;
	var phiSin = Math.sin(-phi);
	var phiCos = Math.cos(-phi);
	sx -= cx;
	sy -= cy;
	var dx = sx;
	var dy = sy;
	sx = dx * phiCos - dy * phiSin;
	sy = dx * phiSin + dy * phiCos;
	sx += cx;
	sy += cy;
	ex -= cx;
	ey -= cy;
	var dx1 = ex;
	var dy1 = ey;
	ex = dx1 * phiCos - dy1 * phiSin;
	ey = dx1 * phiSin + dy1 * phiCos;
	ex += cx;
	ey += cy;
	var alpha = Math.atan2(rx * (cy - sy),ry * (cx - sx)) - Math.PI;
	var omega = Math.atan2(rx * (cy - ey),ry * (cx - ex)) - Math.PI;
	var delta = alpha - omega;
	if(sweep == 1 && delta > 0) {
		delta -= 2 * Math.PI;
	} else if(sweep == 0 && delta < 0) {
		delta += 2 * Math.PI;
	}
	var this1 = { cx : cx, cy : cy, rx : rx, ry : ry, alpha : alpha, omega : omega, delta : -delta, phi : phi, phiSin : Math.sin(phi), phiCos : Math.cos(phi)};
	return this1;
};
trilateral_justPath__$EllipseArc_ConverterArc_$Impl_$.zeroto2pi = function(angle) {
	if(angle >= 0 && angle > Math.PI) {
		return angle;
	} else {
		var a = angle % (2 * Math.PI);
		if(a >= 0) {
			return a;
		} else {
			return a + 2 * Math.PI;
		}
	}
};
var trilateral_justPath_StoreF6 = function() {
	this.count = 0;
	this.l = 0;
};
trilateral_justPath_StoreF6.__name__ = true;
trilateral_justPath_StoreF6.prototype = {
	clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
		this.s6 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		default:
			if(this.s6 == null) {
				this.s6 = new trilateral_justPath_StoreF6();
			}
			this.s6.push(v);
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		default:
			if(this.s6 != null) {
				this.s6.pop();
			}
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		if(this.s6 == null) {
			this.s6 = new trilateral_justPath_StoreF6();
		}
		this.s6.unshift(this.s5);
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = null;
			if(this.s6 != null) {
				this.s5 = this.s6.shift();
			}
			this.l--;
		}
		return out;
	}
	,toString: function() {
		if(this.s6 == null) {
			return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
		} else {
			return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + this.s6.toString();
		}
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		default:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			if(this.s6 != null) {
				out += this.s6.populatedToString();
			}
		}
		return out;
	}
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
		if(this.s6 != null) {
			this.s6.resetIterator();
		}
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			out = this.s6.next();
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			out = this.s6.last();
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		default:
			out = this.s6.penultimate();
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			default:
				var _this = _g.s6;
				var out1 = null;
				switch(_this.count) {
				case 0:
					out1 = _this.s0;
					break;
				case 1:
					out1 = _this.s1;
					break;
				case 2:
					out1 = _this.s2;
					break;
				case 3:
					out1 = _this.s3;
					break;
				case 4:
					out1 = _this.s4;
					break;
				case 5:
					out1 = _this.s5;
					break;
				default:
					out1 = _this.s6.next();
				}
				_this.count++;
				out = out1;
			}
			_g.count++;
			var i = out;
			arr.push(i);
		}
	}
};
var trilateral_justPath_StoreF8 = function() {
	this.count = 0;
	this.l = 0;
};
trilateral_justPath_StoreF8.__name__ = true;
trilateral_justPath_StoreF8.prototype = {
	clear: function() {
		this.l = 0;
		this.s0 = null;
		this.s1 = null;
		this.s2 = null;
		this.s3 = null;
		this.s4 = null;
		this.s5 = null;
		this.s6 = null;
		this.s7 = null;
	}
	,length: function() {
		return this.l;
	}
	,push: function(v) {
		switch(this.l) {
		case 0:
			this.s0 = v;
			break;
		case 1:
			this.s1 = v;
			break;
		case 2:
			this.s2 = v;
			break;
		case 3:
			this.s3 = v;
			break;
		case 4:
			this.s4 = v;
			break;
		case 5:
			this.s5 = v;
			break;
		case 6:
			this.s6 = v;
			break;
		case 7:
			this.s7 = v;
			break;
		default:
		}
		this.l++;
	}
	,pop: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			this.s0 = null;
			break;
		case 1:
			out = this.s1;
			this.s1 = null;
			break;
		case 2:
			out = this.s2;
			this.s2 = null;
			break;
		case 3:
			out = this.s3;
			this.s3 = null;
			break;
		case 4:
			out = this.s4;
			this.s4 = null;
			break;
		case 5:
			out = this.s5;
			this.s5 = null;
			break;
		case 6:
			out = this.s6;
			this.s6 = null;
			break;
		case 7:
			out = this.s7;
			this.s6 = null;
			break;
		default:
		}
		this.l--;
		return out;
	}
	,unshift: function(v) {
		this.s7 = this.s6;
		this.s6 = this.s5;
		this.s5 = this.s4;
		this.s4 = this.s3;
		this.s3 = this.s2;
		this.s2 = this.s1;
		this.s0 = v;
		this.l++;
	}
	,shift: function() {
		var out = this.s0;
		if(this.l != 0) {
			this.s0 = this.s1;
			this.s1 = this.s2;
			this.s2 = this.s3;
			this.s3 = this.s4;
			this.s4 = this.s5;
			this.s5 = this.s6;
			this.s6 = this.s7;
			this.s7 = null;
			this.l--;
		}
		return out;
	}
	,toString: function() {
		return "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
	}
	,populatedToString: function() {
		var out = "";
		switch(this.l - 1) {
		case 0:
			out = "" + this.s0;
			break;
		case 1:
			out = "" + this.s0 + ", " + this.s1;
			break;
		case 2:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2;
			break;
		case 3:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3;
			break;
		case 4:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4;
			break;
		case 5:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5;
			break;
		case 6:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6;
			break;
		case 7:
			out = "" + this.s0 + ", " + this.s1 + ", " + this.s2 + ", " + this.s3 + ", " + this.s4 + ", " + this.s5 + ", " + this.s6 + ", " + this.s7;
			break;
		default:
		}
		return out;
	}
	,hasNext: function() {
		return this.count < this.l + 1;
	}
	,resetIterator: function() {
		this.count = 0;
	}
	,next: function() {
		var out = null;
		switch(this.count) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		this.count++;
		return out;
	}
	,first: function() {
		return this.s0;
	}
	,last: function() {
		var out = null;
		switch(this.l) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,penultimate: function() {
		var out = null;
		switch(this.l - 1) {
		case 0:
			out = this.s0;
			break;
		case 1:
			out = this.s1;
			break;
		case 2:
			out = this.s2;
			break;
		case 3:
			out = this.s3;
			break;
		case 4:
			out = this.s4;
			break;
		case 5:
			out = this.s5;
			break;
		case 6:
			out = this.s6;
			break;
		case 7:
			out = this.s7;
			break;
		default:
		}
		return out;
	}
	,toArray: function() {
		var arr = [];
		this.count = 0;
		var _g = this;
		while(_g.count < _g.l + 1) {
			var out = null;
			switch(_g.count) {
			case 0:
				out = _g.s0;
				break;
			case 1:
				out = _g.s1;
				break;
			case 2:
				out = _g.s2;
				break;
			case 3:
				out = _g.s3;
				break;
			case 4:
				out = _g.s4;
				break;
			case 5:
				out = _g.s5;
				break;
			case 6:
				out = _g.s6;
				break;
			case 7:
				out = _g.s7;
				break;
			default:
			}
			_g.count++;
			var i = out;
			arr.push(i);
		}
	}
};
var trilateral_justPath_SvgPath = function(pathContext_) {
	this.l = 0;
	this.c = 0;
	this.controlY = 0.;
	this.controlX = 0.;
	this.lastY = 0.;
	this.lastX = 0.;
	this.pos = 0;
	this.str = "";
	this.pathContext = pathContext_;
};
trilateral_justPath_SvgPath.__name__ = true;
trilateral_justPath_SvgPath.prototype = {
	quickTriangle: function(x0,y0,off) {
		this.pathContext.moveTo(x0,y0 - off);
		this.pathContext.lineTo(x0 + off,y0 + off);
		this.pathContext.lineTo(x0 - off,y0 + off);
		this.pathContext.lineTo(x0,y0 - off);
	}
	,parse: function(str_) {
		this.str = str_;
		this.pos = 0;
		this.l = this.str.length;
		this.c = this.str.charCodeAt(this.pos++);
		var count = 0;
		this.store = new trilateral_justPath_StoreF6();
		while(this.pos < this.l) {
			switch(this.c) {
			case 65:
				var _this = this.store;
				_this.l = 0;
				_this.s0 = null;
				_this.s1 = null;
				_this.s2 = null;
				_this.s3 = null;
				_this.s4 = null;
				_this.s5 = null;
				_this.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count1 = 0;
				var temp = "";
				var exit = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this1 = this.store;
								var v = parseFloat(temp);
								switch(_this1.l) {
								case 0:
									_this1.s0 = v;
									break;
								case 1:
									_this1.s1 = v;
									break;
								case 2:
									_this1.s2 = v;
									break;
								case 3:
									_this1.s3 = v;
									break;
								case 4:
									_this1.s4 = v;
									break;
								case 5:
									_this1.s5 = v;
									break;
								default:
									if(_this1.s6 == null) {
										_this1.s6 = new trilateral_justPath_StoreF6();
									}
									var _this2 = _this1.s6;
									switch(_this2.l) {
									case 0:
										_this2.s0 = v;
										break;
									case 1:
										_this2.s1 = v;
										break;
									case 2:
										_this2.s2 = v;
										break;
									case 3:
										_this2.s3 = v;
										break;
									case 4:
										_this2.s4 = v;
										break;
									case 5:
										_this2.s5 = v;
										break;
									default:
										if(_this2.s6 == null) {
											_this2.s6 = new trilateral_justPath_StoreF6();
										}
										_this2.s6.push(v);
									}
									_this2.l++;
								}
								_this1.l++;
							} else {
								var _this3 = this.store;
								var v1 = parseFloat(temp);
								switch(_this3.l) {
								case 0:
									_this3.s0 = v1;
									break;
								case 1:
									_this3.s1 = v1;
									break;
								case 2:
									_this3.s2 = v1;
									break;
								case 3:
									_this3.s3 = v1;
									break;
								case 4:
									_this3.s4 = v1;
									break;
								case 5:
									_this3.s5 = v1;
									break;
								default:
									if(_this3.s6 == null) {
										_this3.s6 = new trilateral_justPath_StoreF6();
									}
									var _this4 = _this3.s6;
									switch(_this4.l) {
									case 0:
										_this4.s0 = v1;
										break;
									case 1:
										_this4.s1 = v1;
										break;
									case 2:
										_this4.s2 = v1;
										break;
									case 3:
										_this4.s3 = v1;
										break;
									case 4:
										_this4.s4 = v1;
										break;
									case 5:
										_this4.s5 = v1;
										break;
									default:
										if(_this4.s6 == null) {
											_this4.s6 = new trilateral_justPath_StoreF6();
										}
										_this4.s6.push(v1);
									}
									_this4.l++;
								}
								_this3.l++;
							}
							temp = "";
						}
						break;
					case 45:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this5 = this.store;
								var v2 = parseFloat(temp);
								switch(_this5.l) {
								case 0:
									_this5.s0 = v2;
									break;
								case 1:
									_this5.s1 = v2;
									break;
								case 2:
									_this5.s2 = v2;
									break;
								case 3:
									_this5.s3 = v2;
									break;
								case 4:
									_this5.s4 = v2;
									break;
								case 5:
									_this5.s5 = v2;
									break;
								default:
									if(_this5.s6 == null) {
										_this5.s6 = new trilateral_justPath_StoreF6();
									}
									var _this6 = _this5.s6;
									switch(_this6.l) {
									case 0:
										_this6.s0 = v2;
										break;
									case 1:
										_this6.s1 = v2;
										break;
									case 2:
										_this6.s2 = v2;
										break;
									case 3:
										_this6.s3 = v2;
										break;
									case 4:
										_this6.s4 = v2;
										break;
									case 5:
										_this6.s5 = v2;
										break;
									default:
										if(_this6.s6 == null) {
											_this6.s6 = new trilateral_justPath_StoreF6();
										}
										_this6.s6.push(v2);
									}
									_this6.l++;
								}
								_this5.l++;
							} else {
								var _this7 = this.store;
								var v3 = parseFloat(temp);
								switch(_this7.l) {
								case 0:
									_this7.s0 = v3;
									break;
								case 1:
									_this7.s1 = v3;
									break;
								case 2:
									_this7.s2 = v3;
									break;
								case 3:
									_this7.s3 = v3;
									break;
								case 4:
									_this7.s4 = v3;
									break;
								case 5:
									_this7.s5 = v3;
									break;
								default:
									if(_this7.s6 == null) {
										_this7.s6 = new trilateral_justPath_StoreF6();
									}
									var _this8 = _this7.s6;
									switch(_this8.l) {
									case 0:
										_this8.s0 = v3;
										break;
									case 1:
										_this8.s1 = v3;
										break;
									case 2:
										_this8.s2 = v3;
										break;
									case 3:
										_this8.s3 = v3;
										break;
									case 4:
										_this8.s4 = v3;
										break;
									case 5:
										_this8.s5 = v3;
										break;
									default:
										if(_this8.s6 == null) {
											_this8.s6 = new trilateral_justPath_StoreF6();
										}
										_this8.s6.push(v3);
									}
									_this8.l++;
								}
								_this7.l++;
							}
						}
						temp = "-";
						break;
					case 46:
						temp += ".";
						break;
					case 48:
						temp += "0";
						break;
					case 49:
						temp += "1";
						break;
					case 50:
						temp += "2";
						break;
					case 51:
						temp += "3";
						break;
					case 52:
						temp += "4";
						break;
					case 53:
						temp += "5";
						break;
					case 54:
						temp += "6";
						break;
					case 55:
						temp += "7";
						break;
					case 56:
						temp += "8";
						break;
					case 57:
						temp += "9";
						break;
					default:
						if(temp != "") {
							if((this.store.l & 1) == 0) {
								var _this9 = this.store;
								var v4 = parseFloat(temp);
								switch(_this9.l) {
								case 0:
									_this9.s0 = v4;
									break;
								case 1:
									_this9.s1 = v4;
									break;
								case 2:
									_this9.s2 = v4;
									break;
								case 3:
									_this9.s3 = v4;
									break;
								case 4:
									_this9.s4 = v4;
									break;
								case 5:
									_this9.s5 = v4;
									break;
								default:
									if(_this9.s6 == null) {
										_this9.s6 = new trilateral_justPath_StoreF6();
									}
									var _this10 = _this9.s6;
									switch(_this10.l) {
									case 0:
										_this10.s0 = v4;
										break;
									case 1:
										_this10.s1 = v4;
										break;
									case 2:
										_this10.s2 = v4;
										break;
									case 3:
										_this10.s3 = v4;
										break;
									case 4:
										_this10.s4 = v4;
										break;
									case 5:
										_this10.s5 = v4;
										break;
									default:
										if(_this10.s6 == null) {
											_this10.s6 = new trilateral_justPath_StoreF6();
										}
										_this10.s6.push(v4);
									}
									_this10.l++;
								}
								_this9.l++;
							} else {
								var _this11 = this.store;
								var v5 = parseFloat(temp);
								switch(_this11.l) {
								case 0:
									_this11.s0 = v5;
									break;
								case 1:
									_this11.s1 = v5;
									break;
								case 2:
									_this11.s2 = v5;
									break;
								case 3:
									_this11.s3 = v5;
									break;
								case 4:
									_this11.s4 = v5;
									break;
								case 5:
									_this11.s5 = v5;
									break;
								default:
									if(_this11.s6 == null) {
										_this11.s6 = new trilateral_justPath_StoreF6();
									}
									var _this12 = _this11.s6;
									switch(_this12.l) {
									case 0:
										_this12.s0 = v5;
										break;
									case 1:
										_this12.s1 = v5;
										break;
									case 2:
										_this12.s2 = v5;
										break;
									case 3:
										_this12.s3 = v5;
										break;
									case 4:
										_this12.s4 = v5;
										break;
									case 5:
										_this12.s5 = v5;
										break;
									default:
										if(_this12.s6 == null) {
											_this12.s6 = new trilateral_justPath_StoreF6();
										}
										_this12.s6.push(v5);
									}
									_this12.l++;
								}
								_this11.l++;
							}
							temp = "";
						}
						this.pos--;
						exit = true;
					}
					if(exit) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 7) {
					var sx = this.lastX;
					var sy = this.lastY;
					var _this13 = this.store;
					var out = _this13.s0;
					if(_this13.l != 0) {
						_this13.s0 = _this13.s1;
						_this13.s1 = _this13.s2;
						_this13.s2 = _this13.s3;
						_this13.s3 = _this13.s4;
						_this13.s4 = _this13.s5;
						_this13.s5 = null;
						if(_this13.s6 != null) {
							var _this14 = _this13.s6;
							var out1 = _this14.s0;
							if(_this14.l != 0) {
								_this14.s0 = _this14.s1;
								_this14.s1 = _this14.s2;
								_this14.s2 = _this14.s3;
								_this14.s3 = _this14.s4;
								_this14.s4 = _this14.s5;
								_this14.s5 = null;
								if(_this14.s6 != null) {
									_this14.s5 = _this14.s6.shift();
								}
								_this14.l--;
							}
							_this13.s5 = out1;
						}
						_this13.l--;
					}
					var xr = out;
					var _this15 = this.store;
					var out2 = _this15.s0;
					if(_this15.l != 0) {
						_this15.s0 = _this15.s1;
						_this15.s1 = _this15.s2;
						_this15.s2 = _this15.s3;
						_this15.s3 = _this15.s4;
						_this15.s4 = _this15.s5;
						_this15.s5 = null;
						if(_this15.s6 != null) {
							var _this16 = _this15.s6;
							var out3 = _this16.s0;
							if(_this16.l != 0) {
								_this16.s0 = _this16.s1;
								_this16.s1 = _this16.s2;
								_this16.s2 = _this16.s3;
								_this16.s3 = _this16.s4;
								_this16.s4 = _this16.s5;
								_this16.s5 = null;
								if(_this16.s6 != null) {
									_this16.s5 = _this16.s6.shift();
								}
								_this16.l--;
							}
							_this15.s5 = out3;
						}
						_this15.l--;
					}
					var yr = out2;
					var _this17 = this.store;
					var out4 = _this17.s0;
					if(_this17.l != 0) {
						_this17.s0 = _this17.s1;
						_this17.s1 = _this17.s2;
						_this17.s2 = _this17.s3;
						_this17.s3 = _this17.s4;
						_this17.s4 = _this17.s5;
						_this17.s5 = null;
						if(_this17.s6 != null) {
							var _this18 = _this17.s6;
							var out5 = _this18.s0;
							if(_this18.l != 0) {
								_this18.s0 = _this18.s1;
								_this18.s1 = _this18.s2;
								_this18.s2 = _this18.s3;
								_this18.s3 = _this18.s4;
								_this18.s4 = _this18.s5;
								_this18.s5 = null;
								if(_this18.s6 != null) {
									_this18.s5 = _this18.s6.shift();
								}
								_this18.l--;
							}
							_this17.s5 = out5;
						}
						_this17.l--;
					}
					var phi = out4;
					var _this19 = this.store;
					var out6 = _this19.s0;
					if(_this19.l != 0) {
						_this19.s0 = _this19.s1;
						_this19.s1 = _this19.s2;
						_this19.s2 = _this19.s3;
						_this19.s3 = _this19.s4;
						_this19.s4 = _this19.s5;
						_this19.s5 = null;
						if(_this19.s6 != null) {
							var _this20 = _this19.s6;
							var out7 = _this20.s0;
							if(_this20.l != 0) {
								_this20.s0 = _this20.s1;
								_this20.s1 = _this20.s2;
								_this20.s2 = _this20.s3;
								_this20.s3 = _this20.s4;
								_this20.s4 = _this20.s5;
								_this20.s5 = null;
								if(_this20.s6 != null) {
									var _this21 = _this20.s6;
									var out8 = _this21.s0;
									if(_this21.l != 0) {
										_this21.s0 = _this21.s1;
										_this21.s1 = _this21.s2;
										_this21.s2 = _this21.s3;
										_this21.s3 = _this21.s4;
										_this21.s4 = _this21.s5;
										_this21.s5 = null;
										if(_this21.s6 != null) {
											_this21.s5 = _this21.s6.shift();
										}
										_this21.l--;
									}
									_this20.s5 = out8;
								}
								_this20.l--;
							}
							_this19.s5 = out7;
						}
						_this19.l--;
					}
					var large = out6 | 0;
					var _this22 = this.store;
					var out9 = _this22.s0;
					if(_this22.l != 0) {
						_this22.s0 = _this22.s1;
						_this22.s1 = _this22.s2;
						_this22.s2 = _this22.s3;
						_this22.s3 = _this22.s4;
						_this22.s4 = _this22.s5;
						_this22.s5 = null;
						if(_this22.s6 != null) {
							var _this23 = _this22.s6;
							var out10 = _this23.s0;
							if(_this23.l != 0) {
								_this23.s0 = _this23.s1;
								_this23.s1 = _this23.s2;
								_this23.s2 = _this23.s3;
								_this23.s3 = _this23.s4;
								_this23.s4 = _this23.s5;
								_this23.s5 = null;
								if(_this23.s6 != null) {
									var _this24 = _this23.s6;
									var out11 = _this24.s0;
									if(_this24.l != 0) {
										_this24.s0 = _this24.s1;
										_this24.s1 = _this24.s2;
										_this24.s2 = _this24.s3;
										_this24.s3 = _this24.s4;
										_this24.s4 = _this24.s5;
										_this24.s5 = null;
										if(_this24.s6 != null) {
											_this24.s5 = _this24.s6.shift();
										}
										_this24.l--;
									}
									_this23.s5 = out11;
								}
								_this23.l--;
							}
							_this22.s5 = out10;
						}
						_this22.l--;
					}
					var sweep = out9 | 0;
					var _this25 = this.store;
					var out12 = _this25.s0;
					if(_this25.l != 0) {
						_this25.s0 = _this25.s1;
						_this25.s1 = _this25.s2;
						_this25.s2 = _this25.s3;
						_this25.s3 = _this25.s4;
						_this25.s4 = _this25.s5;
						_this25.s5 = null;
						if(_this25.s6 != null) {
							var _this26 = _this25.s6;
							var out13 = _this26.s0;
							if(_this26.l != 0) {
								_this26.s0 = _this26.s1;
								_this26.s1 = _this26.s2;
								_this26.s2 = _this26.s3;
								_this26.s3 = _this26.s4;
								_this26.s4 = _this26.s5;
								_this26.s5 = null;
								if(_this26.s6 != null) {
									_this26.s5 = _this26.s6.shift();
								}
								_this26.l--;
							}
							_this25.s5 = out13;
						}
						_this25.l--;
					}
					this.lastX = out12;
					var _this27 = this.store;
					var out14 = _this27.s0;
					if(_this27.l != 0) {
						_this27.s0 = _this27.s1;
						_this27.s1 = _this27.s2;
						_this27.s2 = _this27.s3;
						_this27.s3 = _this27.s4;
						_this27.s4 = _this27.s5;
						_this27.s5 = null;
						if(_this27.s6 != null) {
							var _this28 = _this27.s6;
							var out15 = _this28.s0;
							if(_this28.l != 0) {
								_this28.s0 = _this28.s1;
								_this28.s1 = _this28.s2;
								_this28.s2 = _this28.s3;
								_this28.s3 = _this28.s4;
								_this28.s4 = _this28.s5;
								_this28.s5 = null;
								if(_this28.s6 != null) {
									_this28.s5 = _this28.s6.shift();
								}
								_this28.l--;
							}
							_this27.s5 = out15;
						}
						_this27.l--;
					}
					this.lastY = out14;
					var sx1 = sx;
					var sy1 = sy;
					var phi1 = phi;
					var ex = this.lastX;
					var ey = this.lastY;
					var mx = (sx1 - ex) / 2;
					var my = (sy1 - ey) / 2;
					var ax = (sx1 + ex) / 2;
					var ay = (sy1 + ey) / 2;
					phi1 %= 360;
					phi1 = phi1 * Math.PI / 180;
					var sin = Math.sin(phi1);
					var cos = Math.cos(phi1);
					var x1 = mx * cos + my * sin;
					var y1 = -mx * sin + my * cos;
					var rx = Math.abs(xr);
					var ry = Math.abs(yr);
					var rxx = rx * rx;
					var ryy = ry * ry;
					var xx1 = x1 * x1;
					var yy1 = y1 * y1;
					var check = xx1 / rxx + yy1 / ryy;
					if(check > 1) {
						rx *= Math.sqrt(check);
						ry *= Math.sqrt(check);
						rxx = rx * rx;
						ryy = ry * ry;
					}
					var sign = large == sweep ? -1 : 1;
					var sq = (rxx * ryy - rxx * yy1 - ryy * xx1) / (rxx * yy1 + ryy * xx1);
					sq = sq < 0 ? 0 : sq;
					var coef = sign * Math.sqrt(sq);
					var cx1 = coef * rx * y1 / ry;
					var cy1 = -coef * ry * x1 / rx;
					var cx = ax + cx1 * cos - cy1 * sin;
					var cy = ay + cx1 * sin + cy1 * cos;
					var phiSin = Math.sin(-phi1);
					var phiCos = Math.cos(-phi1);
					sx1 -= cx;
					sy1 -= cy;
					var dx = sx1;
					var dy = sy1;
					sx1 = dx * phiCos - dy * phiSin;
					sy1 = dx * phiSin + dy * phiCos;
					sx1 += cx;
					sy1 += cy;
					ex -= cx;
					ey -= cy;
					var dx1 = ex;
					var dy1 = ey;
					ex = dx1 * phiCos - dy1 * phiSin;
					ey = dx1 * phiSin + dy1 * phiCos;
					ex += cx;
					ey += cy;
					var alpha = Math.atan2(rx * (cy - sy1),ry * (cx - sx1)) - Math.PI;
					var omega = Math.atan2(rx * (cy - ey),ry * (cx - ex)) - Math.PI;
					var delta = alpha - omega;
					if(sweep == 1 && delta > 0) {
						delta -= 2 * Math.PI;
					} else if(sweep == 0 && delta < 0) {
						delta += 2 * Math.PI;
					}
					var this1 = { cx : cx, cy : cy, rx : rx, ry : ry, alpha : alpha, omega : omega, delta : -delta, phi : phi1, phiSin : Math.sin(phi1), phiCos : Math.cos(phi1)};
					var ellipseData = this1;
					var ellipse = new trilateral_justPath_EllipseArc(ellipseData);
					ellipse.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
				} else if(this.store.l > 7) {
					while(this.store.l > 6) {
						var sx2 = this.lastX;
						var sy2 = this.lastY;
						var _this29 = this.store;
						var out16 = _this29.s0;
						if(_this29.l != 0) {
							_this29.s0 = _this29.s1;
							_this29.s1 = _this29.s2;
							_this29.s2 = _this29.s3;
							_this29.s3 = _this29.s4;
							_this29.s4 = _this29.s5;
							_this29.s5 = null;
							if(_this29.s6 != null) {
								var _this30 = _this29.s6;
								var out17 = _this30.s0;
								if(_this30.l != 0) {
									_this30.s0 = _this30.s1;
									_this30.s1 = _this30.s2;
									_this30.s2 = _this30.s3;
									_this30.s3 = _this30.s4;
									_this30.s4 = _this30.s5;
									_this30.s5 = null;
									if(_this30.s6 != null) {
										_this30.s5 = _this30.s6.shift();
									}
									_this30.l--;
								}
								_this29.s5 = out17;
							}
							_this29.l--;
						}
						var xr1 = out16;
						var _this31 = this.store;
						var out18 = _this31.s0;
						if(_this31.l != 0) {
							_this31.s0 = _this31.s1;
							_this31.s1 = _this31.s2;
							_this31.s2 = _this31.s3;
							_this31.s3 = _this31.s4;
							_this31.s4 = _this31.s5;
							_this31.s5 = null;
							if(_this31.s6 != null) {
								var _this32 = _this31.s6;
								var out19 = _this32.s0;
								if(_this32.l != 0) {
									_this32.s0 = _this32.s1;
									_this32.s1 = _this32.s2;
									_this32.s2 = _this32.s3;
									_this32.s3 = _this32.s4;
									_this32.s4 = _this32.s5;
									_this32.s5 = null;
									if(_this32.s6 != null) {
										_this32.s5 = _this32.s6.shift();
									}
									_this32.l--;
								}
								_this31.s5 = out19;
							}
							_this31.l--;
						}
						var yr1 = out18;
						var _this33 = this.store;
						var out20 = _this33.s0;
						if(_this33.l != 0) {
							_this33.s0 = _this33.s1;
							_this33.s1 = _this33.s2;
							_this33.s2 = _this33.s3;
							_this33.s3 = _this33.s4;
							_this33.s4 = _this33.s5;
							_this33.s5 = null;
							if(_this33.s6 != null) {
								var _this34 = _this33.s6;
								var out21 = _this34.s0;
								if(_this34.l != 0) {
									_this34.s0 = _this34.s1;
									_this34.s1 = _this34.s2;
									_this34.s2 = _this34.s3;
									_this34.s3 = _this34.s4;
									_this34.s4 = _this34.s5;
									_this34.s5 = null;
									if(_this34.s6 != null) {
										_this34.s5 = _this34.s6.shift();
									}
									_this34.l--;
								}
								_this33.s5 = out21;
							}
							_this33.l--;
						}
						var phi2 = out20;
						var _this35 = this.store;
						var out22 = _this35.s0;
						if(_this35.l != 0) {
							_this35.s0 = _this35.s1;
							_this35.s1 = _this35.s2;
							_this35.s2 = _this35.s3;
							_this35.s3 = _this35.s4;
							_this35.s4 = _this35.s5;
							_this35.s5 = null;
							if(_this35.s6 != null) {
								var _this36 = _this35.s6;
								var out23 = _this36.s0;
								if(_this36.l != 0) {
									_this36.s0 = _this36.s1;
									_this36.s1 = _this36.s2;
									_this36.s2 = _this36.s3;
									_this36.s3 = _this36.s4;
									_this36.s4 = _this36.s5;
									_this36.s5 = null;
									if(_this36.s6 != null) {
										var _this37 = _this36.s6;
										var out24 = _this37.s0;
										if(_this37.l != 0) {
											_this37.s0 = _this37.s1;
											_this37.s1 = _this37.s2;
											_this37.s2 = _this37.s3;
											_this37.s3 = _this37.s4;
											_this37.s4 = _this37.s5;
											_this37.s5 = null;
											if(_this37.s6 != null) {
												_this37.s5 = _this37.s6.shift();
											}
											_this37.l--;
										}
										_this36.s5 = out24;
									}
									_this36.l--;
								}
								_this35.s5 = out23;
							}
							_this35.l--;
						}
						var large1 = out22 | 0;
						var _this38 = this.store;
						var out25 = _this38.s0;
						if(_this38.l != 0) {
							_this38.s0 = _this38.s1;
							_this38.s1 = _this38.s2;
							_this38.s2 = _this38.s3;
							_this38.s3 = _this38.s4;
							_this38.s4 = _this38.s5;
							_this38.s5 = null;
							if(_this38.s6 != null) {
								var _this39 = _this38.s6;
								var out26 = _this39.s0;
								if(_this39.l != 0) {
									_this39.s0 = _this39.s1;
									_this39.s1 = _this39.s2;
									_this39.s2 = _this39.s3;
									_this39.s3 = _this39.s4;
									_this39.s4 = _this39.s5;
									_this39.s5 = null;
									if(_this39.s6 != null) {
										var _this40 = _this39.s6;
										var out27 = _this40.s0;
										if(_this40.l != 0) {
											_this40.s0 = _this40.s1;
											_this40.s1 = _this40.s2;
											_this40.s2 = _this40.s3;
											_this40.s3 = _this40.s4;
											_this40.s4 = _this40.s5;
											_this40.s5 = null;
											if(_this40.s6 != null) {
												_this40.s5 = _this40.s6.shift();
											}
											_this40.l--;
										}
										_this39.s5 = out27;
									}
									_this39.l--;
								}
								_this38.s5 = out26;
							}
							_this38.l--;
						}
						var sweep1 = out25 | 0;
						var _this41 = this.store;
						var out28 = _this41.s0;
						if(_this41.l != 0) {
							_this41.s0 = _this41.s1;
							_this41.s1 = _this41.s2;
							_this41.s2 = _this41.s3;
							_this41.s3 = _this41.s4;
							_this41.s4 = _this41.s5;
							_this41.s5 = null;
							if(_this41.s6 != null) {
								var _this42 = _this41.s6;
								var out29 = _this42.s0;
								if(_this42.l != 0) {
									_this42.s0 = _this42.s1;
									_this42.s1 = _this42.s2;
									_this42.s2 = _this42.s3;
									_this42.s3 = _this42.s4;
									_this42.s4 = _this42.s5;
									_this42.s5 = null;
									if(_this42.s6 != null) {
										_this42.s5 = _this42.s6.shift();
									}
									_this42.l--;
								}
								_this41.s5 = out29;
							}
							_this41.l--;
						}
						this.lastX = out28;
						var _this43 = this.store;
						var out30 = _this43.s0;
						if(_this43.l != 0) {
							_this43.s0 = _this43.s1;
							_this43.s1 = _this43.s2;
							_this43.s2 = _this43.s3;
							_this43.s3 = _this43.s4;
							_this43.s4 = _this43.s5;
							_this43.s5 = null;
							if(_this43.s6 != null) {
								var _this44 = _this43.s6;
								var out31 = _this44.s0;
								if(_this44.l != 0) {
									_this44.s0 = _this44.s1;
									_this44.s1 = _this44.s2;
									_this44.s2 = _this44.s3;
									_this44.s3 = _this44.s4;
									_this44.s4 = _this44.s5;
									_this44.s5 = null;
									if(_this44.s6 != null) {
										_this44.s5 = _this44.s6.shift();
									}
									_this44.l--;
								}
								_this43.s5 = out31;
							}
							_this43.l--;
						}
						this.lastY = out30;
						var sx3 = sx2;
						var sy3 = sy2;
						var phi3 = phi2;
						var ex1 = this.lastX;
						var ey1 = this.lastY;
						var mx1 = (sx3 - ex1) / 2;
						var my1 = (sy3 - ey1) / 2;
						var ax1 = (sx3 + ex1) / 2;
						var ay1 = (sy3 + ey1) / 2;
						phi3 %= 360;
						phi3 = phi3 * Math.PI / 180;
						var sin1 = Math.sin(phi3);
						var cos1 = Math.cos(phi3);
						var x11 = mx1 * cos1 + my1 * sin1;
						var y11 = -mx1 * sin1 + my1 * cos1;
						var rx1 = Math.abs(xr1);
						var ry1 = Math.abs(yr1);
						var rxx1 = rx1 * rx1;
						var ryy1 = ry1 * ry1;
						var xx11 = x11 * x11;
						var yy11 = y11 * y11;
						var check1 = xx11 / rxx1 + yy11 / ryy1;
						if(check1 > 1) {
							rx1 *= Math.sqrt(check1);
							ry1 *= Math.sqrt(check1);
							rxx1 = rx1 * rx1;
							ryy1 = ry1 * ry1;
						}
						var sign1 = large1 == sweep1 ? -1 : 1;
						var sq1 = (rxx1 * ryy1 - rxx1 * yy11 - ryy1 * xx11) / (rxx1 * yy11 + ryy1 * xx11);
						sq1 = sq1 < 0 ? 0 : sq1;
						var coef1 = sign1 * Math.sqrt(sq1);
						var cx11 = coef1 * rx1 * y11 / ry1;
						var cy11 = -coef1 * ry1 * x11 / rx1;
						var cx2 = ax1 + cx11 * cos1 - cy11 * sin1;
						var cy2 = ay1 + cx11 * sin1 + cy11 * cos1;
						var phiSin1 = Math.sin(-phi3);
						var phiCos1 = Math.cos(-phi3);
						sx3 -= cx2;
						sy3 -= cy2;
						var dx2 = sx3;
						var dy2 = sy3;
						sx3 = dx2 * phiCos1 - dy2 * phiSin1;
						sy3 = dx2 * phiSin1 + dy2 * phiCos1;
						sx3 += cx2;
						sy3 += cy2;
						ex1 -= cx2;
						ey1 -= cy2;
						var dx3 = ex1;
						var dy3 = ey1;
						ex1 = dx3 * phiCos1 - dy3 * phiSin1;
						ey1 = dx3 * phiSin1 + dy3 * phiCos1;
						ex1 += cx2;
						ey1 += cy2;
						var alpha1 = Math.atan2(rx1 * (cy2 - sy3),ry1 * (cx2 - sx3)) - Math.PI;
						var omega1 = Math.atan2(rx1 * (cy2 - ey1),ry1 * (cx2 - ex1)) - Math.PI;
						var delta1 = alpha1 - omega1;
						if(sweep1 == 1 && delta1 > 0) {
							delta1 -= 2 * Math.PI;
						} else if(sweep1 == 0 && delta1 < 0) {
							delta1 += 2 * Math.PI;
						}
						var this2 = { cx : cx2, cy : cy2, rx : rx1, ry : ry1, alpha : alpha1, omega : omega1, delta : -delta1, phi : phi3, phiSin : Math.sin(phi3), phiCos : Math.cos(phi3)};
						var ellipseData1 = this2;
						var ellipse1 = new trilateral_justPath_EllipseArc(ellipseData1);
						ellipse1.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
					}
				}
				break;
			case 66:
				console.log("trilateral/justPath/SvgPath.hx:377:","bearing - not implemented");
				throw new js__$Boot_HaxeError("bearing not supported please remove");
			case 67:
				var _this45 = this.store;
				_this45.l = 0;
				_this45.s0 = null;
				_this45.s1 = null;
				_this45.s2 = null;
				_this45.s3 = null;
				_this45.s4 = null;
				_this45.s5 = null;
				_this45.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count2 = 0;
				var temp1 = "";
				var exit1 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this46 = this.store;
								var v6 = parseFloat(temp1);
								switch(_this46.l) {
								case 0:
									_this46.s0 = v6;
									break;
								case 1:
									_this46.s1 = v6;
									break;
								case 2:
									_this46.s2 = v6;
									break;
								case 3:
									_this46.s3 = v6;
									break;
								case 4:
									_this46.s4 = v6;
									break;
								case 5:
									_this46.s5 = v6;
									break;
								default:
									if(_this46.s6 == null) {
										_this46.s6 = new trilateral_justPath_StoreF6();
									}
									var _this47 = _this46.s6;
									switch(_this47.l) {
									case 0:
										_this47.s0 = v6;
										break;
									case 1:
										_this47.s1 = v6;
										break;
									case 2:
										_this47.s2 = v6;
										break;
									case 3:
										_this47.s3 = v6;
										break;
									case 4:
										_this47.s4 = v6;
										break;
									case 5:
										_this47.s5 = v6;
										break;
									default:
										if(_this47.s6 == null) {
											_this47.s6 = new trilateral_justPath_StoreF6();
										}
										_this47.s6.push(v6);
									}
									_this47.l++;
								}
								_this46.l++;
							} else {
								var _this48 = this.store;
								var v7 = parseFloat(temp1);
								switch(_this48.l) {
								case 0:
									_this48.s0 = v7;
									break;
								case 1:
									_this48.s1 = v7;
									break;
								case 2:
									_this48.s2 = v7;
									break;
								case 3:
									_this48.s3 = v7;
									break;
								case 4:
									_this48.s4 = v7;
									break;
								case 5:
									_this48.s5 = v7;
									break;
								default:
									if(_this48.s6 == null) {
										_this48.s6 = new trilateral_justPath_StoreF6();
									}
									var _this49 = _this48.s6;
									switch(_this49.l) {
									case 0:
										_this49.s0 = v7;
										break;
									case 1:
										_this49.s1 = v7;
										break;
									case 2:
										_this49.s2 = v7;
										break;
									case 3:
										_this49.s3 = v7;
										break;
									case 4:
										_this49.s4 = v7;
										break;
									case 5:
										_this49.s5 = v7;
										break;
									default:
										if(_this49.s6 == null) {
											_this49.s6 = new trilateral_justPath_StoreF6();
										}
										_this49.s6.push(v7);
									}
									_this49.l++;
								}
								_this48.l++;
							}
							temp1 = "";
						}
						break;
					case 45:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this50 = this.store;
								var v8 = parseFloat(temp1);
								switch(_this50.l) {
								case 0:
									_this50.s0 = v8;
									break;
								case 1:
									_this50.s1 = v8;
									break;
								case 2:
									_this50.s2 = v8;
									break;
								case 3:
									_this50.s3 = v8;
									break;
								case 4:
									_this50.s4 = v8;
									break;
								case 5:
									_this50.s5 = v8;
									break;
								default:
									if(_this50.s6 == null) {
										_this50.s6 = new trilateral_justPath_StoreF6();
									}
									var _this51 = _this50.s6;
									switch(_this51.l) {
									case 0:
										_this51.s0 = v8;
										break;
									case 1:
										_this51.s1 = v8;
										break;
									case 2:
										_this51.s2 = v8;
										break;
									case 3:
										_this51.s3 = v8;
										break;
									case 4:
										_this51.s4 = v8;
										break;
									case 5:
										_this51.s5 = v8;
										break;
									default:
										if(_this51.s6 == null) {
											_this51.s6 = new trilateral_justPath_StoreF6();
										}
										_this51.s6.push(v8);
									}
									_this51.l++;
								}
								_this50.l++;
							} else {
								var _this52 = this.store;
								var v9 = parseFloat(temp1);
								switch(_this52.l) {
								case 0:
									_this52.s0 = v9;
									break;
								case 1:
									_this52.s1 = v9;
									break;
								case 2:
									_this52.s2 = v9;
									break;
								case 3:
									_this52.s3 = v9;
									break;
								case 4:
									_this52.s4 = v9;
									break;
								case 5:
									_this52.s5 = v9;
									break;
								default:
									if(_this52.s6 == null) {
										_this52.s6 = new trilateral_justPath_StoreF6();
									}
									var _this53 = _this52.s6;
									switch(_this53.l) {
									case 0:
										_this53.s0 = v9;
										break;
									case 1:
										_this53.s1 = v9;
										break;
									case 2:
										_this53.s2 = v9;
										break;
									case 3:
										_this53.s3 = v9;
										break;
									case 4:
										_this53.s4 = v9;
										break;
									case 5:
										_this53.s5 = v9;
										break;
									default:
										if(_this53.s6 == null) {
											_this53.s6 = new trilateral_justPath_StoreF6();
										}
										_this53.s6.push(v9);
									}
									_this53.l++;
								}
								_this52.l++;
							}
						}
						temp1 = "-";
						break;
					case 46:
						temp1 += ".";
						break;
					case 48:
						temp1 += "0";
						break;
					case 49:
						temp1 += "1";
						break;
					case 50:
						temp1 += "2";
						break;
					case 51:
						temp1 += "3";
						break;
					case 52:
						temp1 += "4";
						break;
					case 53:
						temp1 += "5";
						break;
					case 54:
						temp1 += "6";
						break;
					case 55:
						temp1 += "7";
						break;
					case 56:
						temp1 += "8";
						break;
					case 57:
						temp1 += "9";
						break;
					default:
						if(temp1 != "") {
							if((this.store.l & 1) == 0) {
								var _this54 = this.store;
								var v10 = parseFloat(temp1);
								switch(_this54.l) {
								case 0:
									_this54.s0 = v10;
									break;
								case 1:
									_this54.s1 = v10;
									break;
								case 2:
									_this54.s2 = v10;
									break;
								case 3:
									_this54.s3 = v10;
									break;
								case 4:
									_this54.s4 = v10;
									break;
								case 5:
									_this54.s5 = v10;
									break;
								default:
									if(_this54.s6 == null) {
										_this54.s6 = new trilateral_justPath_StoreF6();
									}
									var _this55 = _this54.s6;
									switch(_this55.l) {
									case 0:
										_this55.s0 = v10;
										break;
									case 1:
										_this55.s1 = v10;
										break;
									case 2:
										_this55.s2 = v10;
										break;
									case 3:
										_this55.s3 = v10;
										break;
									case 4:
										_this55.s4 = v10;
										break;
									case 5:
										_this55.s5 = v10;
										break;
									default:
										if(_this55.s6 == null) {
											_this55.s6 = new trilateral_justPath_StoreF6();
										}
										_this55.s6.push(v10);
									}
									_this55.l++;
								}
								_this54.l++;
							} else {
								var _this56 = this.store;
								var v11 = parseFloat(temp1);
								switch(_this56.l) {
								case 0:
									_this56.s0 = v11;
									break;
								case 1:
									_this56.s1 = v11;
									break;
								case 2:
									_this56.s2 = v11;
									break;
								case 3:
									_this56.s3 = v11;
									break;
								case 4:
									_this56.s4 = v11;
									break;
								case 5:
									_this56.s5 = v11;
									break;
								default:
									if(_this56.s6 == null) {
										_this56.s6 = new trilateral_justPath_StoreF6();
									}
									var _this57 = _this56.s6;
									switch(_this57.l) {
									case 0:
										_this57.s0 = v11;
										break;
									case 1:
										_this57.s1 = v11;
										break;
									case 2:
										_this57.s2 = v11;
										break;
									case 3:
										_this57.s3 = v11;
										break;
									case 4:
										_this57.s4 = v11;
										break;
									case 5:
										_this57.s5 = v11;
										break;
									default:
										if(_this57.s6 == null) {
											_this57.s6 = new trilateral_justPath_StoreF6();
										}
										_this57.s6.push(v11);
									}
									_this57.l++;
								}
								_this56.l++;
							}
							temp1 = "";
						}
						this.pos--;
						exit1 = true;
					}
					if(exit1) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.store.s2;
					this.controlY = this.store.s3;
					this.lastX = this.store.s4;
					this.lastY = this.store.s5;
					this.pathContext.curveTo(this.store.s0,this.store.s1,this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this58 = this.store;
						var out32 = _this58.s0;
						if(_this58.l != 0) {
							_this58.s0 = _this58.s1;
							_this58.s1 = _this58.s2;
							_this58.s2 = _this58.s3;
							_this58.s3 = _this58.s4;
							_this58.s4 = _this58.s5;
							_this58.s5 = null;
							if(_this58.s6 != null) {
								var _this59 = _this58.s6;
								var out33 = _this59.s0;
								if(_this59.l != 0) {
									_this59.s0 = _this59.s1;
									_this59.s1 = _this59.s2;
									_this59.s2 = _this59.s3;
									_this59.s3 = _this59.s4;
									_this59.s4 = _this59.s5;
									_this59.s5 = null;
									if(_this59.s6 != null) {
										_this59.s5 = _this59.s6.shift();
									}
									_this59.l--;
								}
								_this58.s5 = out33;
							}
							_this58.l--;
						}
						var firstX = out32;
						var _this60 = this.store;
						var out34 = _this60.s0;
						if(_this60.l != 0) {
							_this60.s0 = _this60.s1;
							_this60.s1 = _this60.s2;
							_this60.s2 = _this60.s3;
							_this60.s3 = _this60.s4;
							_this60.s4 = _this60.s5;
							_this60.s5 = null;
							if(_this60.s6 != null) {
								var _this61 = _this60.s6;
								var out35 = _this61.s0;
								if(_this61.l != 0) {
									_this61.s0 = _this61.s1;
									_this61.s1 = _this61.s2;
									_this61.s2 = _this61.s3;
									_this61.s3 = _this61.s4;
									_this61.s4 = _this61.s5;
									_this61.s5 = null;
									if(_this61.s6 != null) {
										_this61.s5 = _this61.s6.shift();
									}
									_this61.l--;
								}
								_this60.s5 = out35;
							}
							_this60.l--;
						}
						var firstY = out34;
						var _this62 = this.store;
						var out36 = _this62.s0;
						if(_this62.l != 0) {
							_this62.s0 = _this62.s1;
							_this62.s1 = _this62.s2;
							_this62.s2 = _this62.s3;
							_this62.s3 = _this62.s4;
							_this62.s4 = _this62.s5;
							_this62.s5 = null;
							if(_this62.s6 != null) {
								var _this63 = _this62.s6;
								var out37 = _this63.s0;
								if(_this63.l != 0) {
									_this63.s0 = _this63.s1;
									_this63.s1 = _this63.s2;
									_this63.s2 = _this63.s3;
									_this63.s3 = _this63.s4;
									_this63.s4 = _this63.s5;
									_this63.s5 = null;
									if(_this63.s6 != null) {
										_this63.s5 = _this63.s6.shift();
									}
									_this63.l--;
								}
								_this62.s5 = out37;
							}
							_this62.l--;
						}
						this.controlX = out36;
						var _this64 = this.store;
						var out38 = _this64.s0;
						if(_this64.l != 0) {
							_this64.s0 = _this64.s1;
							_this64.s1 = _this64.s2;
							_this64.s2 = _this64.s3;
							_this64.s3 = _this64.s4;
							_this64.s4 = _this64.s5;
							_this64.s5 = null;
							if(_this64.s6 != null) {
								var _this65 = _this64.s6;
								var out39 = _this65.s0;
								if(_this65.l != 0) {
									_this65.s0 = _this65.s1;
									_this65.s1 = _this65.s2;
									_this65.s2 = _this65.s3;
									_this65.s3 = _this65.s4;
									_this65.s4 = _this65.s5;
									_this65.s5 = null;
									if(_this65.s6 != null) {
										_this65.s5 = _this65.s6.shift();
									}
									_this65.l--;
								}
								_this64.s5 = out39;
							}
							_this64.l--;
						}
						this.controlY = out38;
						var _this66 = this.store;
						var out40 = _this66.s0;
						if(_this66.l != 0) {
							_this66.s0 = _this66.s1;
							_this66.s1 = _this66.s2;
							_this66.s2 = _this66.s3;
							_this66.s3 = _this66.s4;
							_this66.s4 = _this66.s5;
							_this66.s5 = null;
							if(_this66.s6 != null) {
								var _this67 = _this66.s6;
								var out41 = _this67.s0;
								if(_this67.l != 0) {
									_this67.s0 = _this67.s1;
									_this67.s1 = _this67.s2;
									_this67.s2 = _this67.s3;
									_this67.s3 = _this67.s4;
									_this67.s4 = _this67.s5;
									_this67.s5 = null;
									if(_this67.s6 != null) {
										_this67.s5 = _this67.s6.shift();
									}
									_this67.l--;
								}
								_this66.s5 = out41;
							}
							_this66.l--;
						}
						this.lastX = out40;
						var _this68 = this.store;
						var out42 = _this68.s0;
						if(_this68.l != 0) {
							_this68.s0 = _this68.s1;
							_this68.s1 = _this68.s2;
							_this68.s2 = _this68.s3;
							_this68.s3 = _this68.s4;
							_this68.s4 = _this68.s5;
							_this68.s5 = null;
							if(_this68.s6 != null) {
								var _this69 = _this68.s6;
								var out43 = _this69.s0;
								if(_this69.l != 0) {
									_this69.s0 = _this69.s1;
									_this69.s1 = _this69.s2;
									_this69.s2 = _this69.s3;
									_this69.s3 = _this69.s4;
									_this69.s4 = _this69.s5;
									_this69.s5 = null;
									if(_this69.s6 != null) {
										_this69.s5 = _this69.s6.shift();
									}
									_this69.l--;
								}
								_this68.s5 = out43;
							}
							_this68.l--;
						}
						this.lastY = out42;
						this.pathContext.curveTo(firstX,firstY,this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 72:
				var _this70 = this.store;
				_this70.l = 0;
				_this70.s0 = null;
				_this70.s1 = null;
				_this70.s2 = null;
				_this70.s3 = null;
				_this70.s4 = null;
				_this70.s5 = null;
				_this70.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count3 = 0;
				var temp2 = "";
				var exit2 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp2 != "") {
							var _this71 = this.store;
							var v12 = parseFloat(temp2);
							switch(_this71.l) {
							case 0:
								_this71.s0 = v12;
								break;
							case 1:
								_this71.s1 = v12;
								break;
							case 2:
								_this71.s2 = v12;
								break;
							case 3:
								_this71.s3 = v12;
								break;
							case 4:
								_this71.s4 = v12;
								break;
							case 5:
								_this71.s5 = v12;
								break;
							default:
								if(_this71.s6 == null) {
									_this71.s6 = new trilateral_justPath_StoreF6();
								}
								var _this72 = _this71.s6;
								switch(_this72.l) {
								case 0:
									_this72.s0 = v12;
									break;
								case 1:
									_this72.s1 = v12;
									break;
								case 2:
									_this72.s2 = v12;
									break;
								case 3:
									_this72.s3 = v12;
									break;
								case 4:
									_this72.s4 = v12;
									break;
								case 5:
									_this72.s5 = v12;
									break;
								default:
									if(_this72.s6 == null) {
										_this72.s6 = new trilateral_justPath_StoreF6();
									}
									_this72.s6.push(v12);
								}
								_this72.l++;
							}
							_this71.l++;
							temp2 = "";
						}
						break;
					case 45:
						if(temp2 != "") {
							var _this73 = this.store;
							var v13 = parseFloat(temp2);
							switch(_this73.l) {
							case 0:
								_this73.s0 = v13;
								break;
							case 1:
								_this73.s1 = v13;
								break;
							case 2:
								_this73.s2 = v13;
								break;
							case 3:
								_this73.s3 = v13;
								break;
							case 4:
								_this73.s4 = v13;
								break;
							case 5:
								_this73.s5 = v13;
								break;
							default:
								if(_this73.s6 == null) {
									_this73.s6 = new trilateral_justPath_StoreF6();
								}
								var _this74 = _this73.s6;
								switch(_this74.l) {
								case 0:
									_this74.s0 = v13;
									break;
								case 1:
									_this74.s1 = v13;
									break;
								case 2:
									_this74.s2 = v13;
									break;
								case 3:
									_this74.s3 = v13;
									break;
								case 4:
									_this74.s4 = v13;
									break;
								case 5:
									_this74.s5 = v13;
									break;
								default:
									if(_this74.s6 == null) {
										_this74.s6 = new trilateral_justPath_StoreF6();
									}
									_this74.s6.push(v13);
								}
								_this74.l++;
							}
							_this73.l++;
						}
						temp2 = "-";
						break;
					case 46:
						temp2 += ".";
						break;
					case 48:
						temp2 += "0";
						break;
					case 49:
						temp2 += "1";
						break;
					case 50:
						temp2 += "2";
						break;
					case 51:
						temp2 += "3";
						break;
					case 52:
						temp2 += "4";
						break;
					case 53:
						temp2 += "5";
						break;
					case 54:
						temp2 += "6";
						break;
					case 55:
						temp2 += "7";
						break;
					case 56:
						temp2 += "8";
						break;
					case 57:
						temp2 += "9";
						break;
					default:
						if(temp2 != "") {
							var _this75 = this.store;
							var v14 = parseFloat(temp2);
							switch(_this75.l) {
							case 0:
								_this75.s0 = v14;
								break;
							case 1:
								_this75.s1 = v14;
								break;
							case 2:
								_this75.s2 = v14;
								break;
							case 3:
								_this75.s3 = v14;
								break;
							case 4:
								_this75.s4 = v14;
								break;
							case 5:
								_this75.s5 = v14;
								break;
							default:
								if(_this75.s6 == null) {
									_this75.s6 = new trilateral_justPath_StoreF6();
								}
								var _this76 = _this75.s6;
								switch(_this76.l) {
								case 0:
									_this76.s0 = v14;
									break;
								case 1:
									_this76.s1 = v14;
									break;
								case 2:
									_this76.s2 = v14;
									break;
								case 3:
									_this76.s3 = v14;
									break;
								case 4:
									_this76.s4 = v14;
									break;
								case 5:
									_this76.s5 = v14;
									break;
								default:
									if(_this76.s6 == null) {
										_this76.s6 = new trilateral_justPath_StoreF6();
									}
									_this76.s6.push(v14);
								}
								_this76.l++;
							}
							_this75.l++;
							temp2 = "";
						}
						this.pos--;
						exit2 = true;
					}
					if(exit2) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastX = this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var _this77 = this.store;
						var out44 = _this77.s0;
						if(_this77.l != 0) {
							_this77.s0 = _this77.s1;
							_this77.s1 = _this77.s2;
							_this77.s2 = _this77.s3;
							_this77.s3 = _this77.s4;
							_this77.s4 = _this77.s5;
							_this77.s5 = null;
							if(_this77.s6 != null) {
								var _this78 = _this77.s6;
								var out45 = _this78.s0;
								if(_this78.l != 0) {
									_this78.s0 = _this78.s1;
									_this78.s1 = _this78.s2;
									_this78.s2 = _this78.s3;
									_this78.s3 = _this78.s4;
									_this78.s4 = _this78.s5;
									_this78.s5 = null;
									if(_this78.s6 != null) {
										_this78.s5 = _this78.s6.shift();
									}
									_this78.l--;
								}
								_this77.s5 = out45;
							}
							_this77.l--;
						}
						this.lastX = out44;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 76:
				var _this79 = this.store;
				_this79.l = 0;
				_this79.s0 = null;
				_this79.s1 = null;
				_this79.s2 = null;
				_this79.s3 = null;
				_this79.s4 = null;
				_this79.s5 = null;
				_this79.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count4 = 0;
				var temp3 = "";
				var exit3 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this80 = this.store;
								var v15 = parseFloat(temp3);
								switch(_this80.l) {
								case 0:
									_this80.s0 = v15;
									break;
								case 1:
									_this80.s1 = v15;
									break;
								case 2:
									_this80.s2 = v15;
									break;
								case 3:
									_this80.s3 = v15;
									break;
								case 4:
									_this80.s4 = v15;
									break;
								case 5:
									_this80.s5 = v15;
									break;
								default:
									if(_this80.s6 == null) {
										_this80.s6 = new trilateral_justPath_StoreF6();
									}
									var _this81 = _this80.s6;
									switch(_this81.l) {
									case 0:
										_this81.s0 = v15;
										break;
									case 1:
										_this81.s1 = v15;
										break;
									case 2:
										_this81.s2 = v15;
										break;
									case 3:
										_this81.s3 = v15;
										break;
									case 4:
										_this81.s4 = v15;
										break;
									case 5:
										_this81.s5 = v15;
										break;
									default:
										if(_this81.s6 == null) {
											_this81.s6 = new trilateral_justPath_StoreF6();
										}
										_this81.s6.push(v15);
									}
									_this81.l++;
								}
								_this80.l++;
							} else {
								var _this82 = this.store;
								var v16 = parseFloat(temp3);
								switch(_this82.l) {
								case 0:
									_this82.s0 = v16;
									break;
								case 1:
									_this82.s1 = v16;
									break;
								case 2:
									_this82.s2 = v16;
									break;
								case 3:
									_this82.s3 = v16;
									break;
								case 4:
									_this82.s4 = v16;
									break;
								case 5:
									_this82.s5 = v16;
									break;
								default:
									if(_this82.s6 == null) {
										_this82.s6 = new trilateral_justPath_StoreF6();
									}
									var _this83 = _this82.s6;
									switch(_this83.l) {
									case 0:
										_this83.s0 = v16;
										break;
									case 1:
										_this83.s1 = v16;
										break;
									case 2:
										_this83.s2 = v16;
										break;
									case 3:
										_this83.s3 = v16;
										break;
									case 4:
										_this83.s4 = v16;
										break;
									case 5:
										_this83.s5 = v16;
										break;
									default:
										if(_this83.s6 == null) {
											_this83.s6 = new trilateral_justPath_StoreF6();
										}
										_this83.s6.push(v16);
									}
									_this83.l++;
								}
								_this82.l++;
							}
							temp3 = "";
						}
						break;
					case 45:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this84 = this.store;
								var v17 = parseFloat(temp3);
								switch(_this84.l) {
								case 0:
									_this84.s0 = v17;
									break;
								case 1:
									_this84.s1 = v17;
									break;
								case 2:
									_this84.s2 = v17;
									break;
								case 3:
									_this84.s3 = v17;
									break;
								case 4:
									_this84.s4 = v17;
									break;
								case 5:
									_this84.s5 = v17;
									break;
								default:
									if(_this84.s6 == null) {
										_this84.s6 = new trilateral_justPath_StoreF6();
									}
									var _this85 = _this84.s6;
									switch(_this85.l) {
									case 0:
										_this85.s0 = v17;
										break;
									case 1:
										_this85.s1 = v17;
										break;
									case 2:
										_this85.s2 = v17;
										break;
									case 3:
										_this85.s3 = v17;
										break;
									case 4:
										_this85.s4 = v17;
										break;
									case 5:
										_this85.s5 = v17;
										break;
									default:
										if(_this85.s6 == null) {
											_this85.s6 = new trilateral_justPath_StoreF6();
										}
										_this85.s6.push(v17);
									}
									_this85.l++;
								}
								_this84.l++;
							} else {
								var _this86 = this.store;
								var v18 = parseFloat(temp3);
								switch(_this86.l) {
								case 0:
									_this86.s0 = v18;
									break;
								case 1:
									_this86.s1 = v18;
									break;
								case 2:
									_this86.s2 = v18;
									break;
								case 3:
									_this86.s3 = v18;
									break;
								case 4:
									_this86.s4 = v18;
									break;
								case 5:
									_this86.s5 = v18;
									break;
								default:
									if(_this86.s6 == null) {
										_this86.s6 = new trilateral_justPath_StoreF6();
									}
									var _this87 = _this86.s6;
									switch(_this87.l) {
									case 0:
										_this87.s0 = v18;
										break;
									case 1:
										_this87.s1 = v18;
										break;
									case 2:
										_this87.s2 = v18;
										break;
									case 3:
										_this87.s3 = v18;
										break;
									case 4:
										_this87.s4 = v18;
										break;
									case 5:
										_this87.s5 = v18;
										break;
									default:
										if(_this87.s6 == null) {
											_this87.s6 = new trilateral_justPath_StoreF6();
										}
										_this87.s6.push(v18);
									}
									_this87.l++;
								}
								_this86.l++;
							}
						}
						temp3 = "-";
						break;
					case 46:
						temp3 += ".";
						break;
					case 48:
						temp3 += "0";
						break;
					case 49:
						temp3 += "1";
						break;
					case 50:
						temp3 += "2";
						break;
					case 51:
						temp3 += "3";
						break;
					case 52:
						temp3 += "4";
						break;
					case 53:
						temp3 += "5";
						break;
					case 54:
						temp3 += "6";
						break;
					case 55:
						temp3 += "7";
						break;
					case 56:
						temp3 += "8";
						break;
					case 57:
						temp3 += "9";
						break;
					default:
						if(temp3 != "") {
							if((this.store.l & 1) == 0) {
								var _this88 = this.store;
								var v19 = parseFloat(temp3);
								switch(_this88.l) {
								case 0:
									_this88.s0 = v19;
									break;
								case 1:
									_this88.s1 = v19;
									break;
								case 2:
									_this88.s2 = v19;
									break;
								case 3:
									_this88.s3 = v19;
									break;
								case 4:
									_this88.s4 = v19;
									break;
								case 5:
									_this88.s5 = v19;
									break;
								default:
									if(_this88.s6 == null) {
										_this88.s6 = new trilateral_justPath_StoreF6();
									}
									var _this89 = _this88.s6;
									switch(_this89.l) {
									case 0:
										_this89.s0 = v19;
										break;
									case 1:
										_this89.s1 = v19;
										break;
									case 2:
										_this89.s2 = v19;
										break;
									case 3:
										_this89.s3 = v19;
										break;
									case 4:
										_this89.s4 = v19;
										break;
									case 5:
										_this89.s5 = v19;
										break;
									default:
										if(_this89.s6 == null) {
											_this89.s6 = new trilateral_justPath_StoreF6();
										}
										_this89.s6.push(v19);
									}
									_this89.l++;
								}
								_this88.l++;
							} else {
								var _this90 = this.store;
								var v20 = parseFloat(temp3);
								switch(_this90.l) {
								case 0:
									_this90.s0 = v20;
									break;
								case 1:
									_this90.s1 = v20;
									break;
								case 2:
									_this90.s2 = v20;
									break;
								case 3:
									_this90.s3 = v20;
									break;
								case 4:
									_this90.s4 = v20;
									break;
								case 5:
									_this90.s5 = v20;
									break;
								default:
									if(_this90.s6 == null) {
										_this90.s6 = new trilateral_justPath_StoreF6();
									}
									var _this91 = _this90.s6;
									switch(_this91.l) {
									case 0:
										_this91.s0 = v20;
										break;
									case 1:
										_this91.s1 = v20;
										break;
									case 2:
										_this91.s2 = v20;
										break;
									case 3:
										_this91.s3 = v20;
										break;
									case 4:
										_this91.s4 = v20;
										break;
									case 5:
										_this91.s5 = v20;
										break;
									default:
										if(_this91.s6 == null) {
											_this91.s6 = new trilateral_justPath_StoreF6();
										}
										_this91.s6.push(v20);
									}
									_this91.l++;
								}
								_this90.l++;
							}
							temp3 = "";
						}
						this.pos--;
						exit3 = true;
					}
					if(exit3) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						var _this92 = this.store;
						var out46 = _this92.s0;
						if(_this92.l != 0) {
							_this92.s0 = _this92.s1;
							_this92.s1 = _this92.s2;
							_this92.s2 = _this92.s3;
							_this92.s3 = _this92.s4;
							_this92.s4 = _this92.s5;
							_this92.s5 = null;
							if(_this92.s6 != null) {
								var _this93 = _this92.s6;
								var out47 = _this93.s0;
								if(_this93.l != 0) {
									_this93.s0 = _this93.s1;
									_this93.s1 = _this93.s2;
									_this93.s2 = _this93.s3;
									_this93.s3 = _this93.s4;
									_this93.s4 = _this93.s5;
									_this93.s5 = null;
									if(_this93.s6 != null) {
										_this93.s5 = _this93.s6.shift();
									}
									_this93.l--;
								}
								_this92.s5 = out47;
							}
							_this92.l--;
						}
						this.lastX = out46;
						var _this94 = this.store;
						var out48 = _this94.s0;
						if(_this94.l != 0) {
							_this94.s0 = _this94.s1;
							_this94.s1 = _this94.s2;
							_this94.s2 = _this94.s3;
							_this94.s3 = _this94.s4;
							_this94.s4 = _this94.s5;
							_this94.s5 = null;
							if(_this94.s6 != null) {
								var _this95 = _this94.s6;
								var out49 = _this95.s0;
								if(_this95.l != 0) {
									_this95.s0 = _this95.s1;
									_this95.s1 = _this95.s2;
									_this95.s2 = _this95.s3;
									_this95.s3 = _this95.s4;
									_this95.s4 = _this95.s5;
									_this95.s5 = null;
									if(_this95.s6 != null) {
										_this95.s5 = _this95.s6.shift();
									}
									_this95.l--;
								}
								_this94.s5 = out49;
							}
							_this94.l--;
						}
						this.lastY = out48;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 77:
				var _this96 = this.store;
				_this96.l = 0;
				_this96.s0 = null;
				_this96.s1 = null;
				_this96.s2 = null;
				_this96.s3 = null;
				_this96.s4 = null;
				_this96.s5 = null;
				_this96.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count5 = 0;
				var temp4 = "";
				var exit4 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this97 = this.store;
								var v21 = parseFloat(temp4);
								switch(_this97.l) {
								case 0:
									_this97.s0 = v21;
									break;
								case 1:
									_this97.s1 = v21;
									break;
								case 2:
									_this97.s2 = v21;
									break;
								case 3:
									_this97.s3 = v21;
									break;
								case 4:
									_this97.s4 = v21;
									break;
								case 5:
									_this97.s5 = v21;
									break;
								default:
									if(_this97.s6 == null) {
										_this97.s6 = new trilateral_justPath_StoreF6();
									}
									var _this98 = _this97.s6;
									switch(_this98.l) {
									case 0:
										_this98.s0 = v21;
										break;
									case 1:
										_this98.s1 = v21;
										break;
									case 2:
										_this98.s2 = v21;
										break;
									case 3:
										_this98.s3 = v21;
										break;
									case 4:
										_this98.s4 = v21;
										break;
									case 5:
										_this98.s5 = v21;
										break;
									default:
										if(_this98.s6 == null) {
											_this98.s6 = new trilateral_justPath_StoreF6();
										}
										_this98.s6.push(v21);
									}
									_this98.l++;
								}
								_this97.l++;
							} else {
								var _this99 = this.store;
								var v22 = parseFloat(temp4);
								switch(_this99.l) {
								case 0:
									_this99.s0 = v22;
									break;
								case 1:
									_this99.s1 = v22;
									break;
								case 2:
									_this99.s2 = v22;
									break;
								case 3:
									_this99.s3 = v22;
									break;
								case 4:
									_this99.s4 = v22;
									break;
								case 5:
									_this99.s5 = v22;
									break;
								default:
									if(_this99.s6 == null) {
										_this99.s6 = new trilateral_justPath_StoreF6();
									}
									var _this100 = _this99.s6;
									switch(_this100.l) {
									case 0:
										_this100.s0 = v22;
										break;
									case 1:
										_this100.s1 = v22;
										break;
									case 2:
										_this100.s2 = v22;
										break;
									case 3:
										_this100.s3 = v22;
										break;
									case 4:
										_this100.s4 = v22;
										break;
									case 5:
										_this100.s5 = v22;
										break;
									default:
										if(_this100.s6 == null) {
											_this100.s6 = new trilateral_justPath_StoreF6();
										}
										_this100.s6.push(v22);
									}
									_this100.l++;
								}
								_this99.l++;
							}
							temp4 = "";
						}
						break;
					case 45:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this101 = this.store;
								var v23 = parseFloat(temp4);
								switch(_this101.l) {
								case 0:
									_this101.s0 = v23;
									break;
								case 1:
									_this101.s1 = v23;
									break;
								case 2:
									_this101.s2 = v23;
									break;
								case 3:
									_this101.s3 = v23;
									break;
								case 4:
									_this101.s4 = v23;
									break;
								case 5:
									_this101.s5 = v23;
									break;
								default:
									if(_this101.s6 == null) {
										_this101.s6 = new trilateral_justPath_StoreF6();
									}
									var _this102 = _this101.s6;
									switch(_this102.l) {
									case 0:
										_this102.s0 = v23;
										break;
									case 1:
										_this102.s1 = v23;
										break;
									case 2:
										_this102.s2 = v23;
										break;
									case 3:
										_this102.s3 = v23;
										break;
									case 4:
										_this102.s4 = v23;
										break;
									case 5:
										_this102.s5 = v23;
										break;
									default:
										if(_this102.s6 == null) {
											_this102.s6 = new trilateral_justPath_StoreF6();
										}
										_this102.s6.push(v23);
									}
									_this102.l++;
								}
								_this101.l++;
							} else {
								var _this103 = this.store;
								var v24 = parseFloat(temp4);
								switch(_this103.l) {
								case 0:
									_this103.s0 = v24;
									break;
								case 1:
									_this103.s1 = v24;
									break;
								case 2:
									_this103.s2 = v24;
									break;
								case 3:
									_this103.s3 = v24;
									break;
								case 4:
									_this103.s4 = v24;
									break;
								case 5:
									_this103.s5 = v24;
									break;
								default:
									if(_this103.s6 == null) {
										_this103.s6 = new trilateral_justPath_StoreF6();
									}
									var _this104 = _this103.s6;
									switch(_this104.l) {
									case 0:
										_this104.s0 = v24;
										break;
									case 1:
										_this104.s1 = v24;
										break;
									case 2:
										_this104.s2 = v24;
										break;
									case 3:
										_this104.s3 = v24;
										break;
									case 4:
										_this104.s4 = v24;
										break;
									case 5:
										_this104.s5 = v24;
										break;
									default:
										if(_this104.s6 == null) {
											_this104.s6 = new trilateral_justPath_StoreF6();
										}
										_this104.s6.push(v24);
									}
									_this104.l++;
								}
								_this103.l++;
							}
						}
						temp4 = "-";
						break;
					case 46:
						temp4 += ".";
						break;
					case 48:
						temp4 += "0";
						break;
					case 49:
						temp4 += "1";
						break;
					case 50:
						temp4 += "2";
						break;
					case 51:
						temp4 += "3";
						break;
					case 52:
						temp4 += "4";
						break;
					case 53:
						temp4 += "5";
						break;
					case 54:
						temp4 += "6";
						break;
					case 55:
						temp4 += "7";
						break;
					case 56:
						temp4 += "8";
						break;
					case 57:
						temp4 += "9";
						break;
					default:
						if(temp4 != "") {
							if((this.store.l & 1) == 0) {
								var _this105 = this.store;
								var v25 = parseFloat(temp4);
								switch(_this105.l) {
								case 0:
									_this105.s0 = v25;
									break;
								case 1:
									_this105.s1 = v25;
									break;
								case 2:
									_this105.s2 = v25;
									break;
								case 3:
									_this105.s3 = v25;
									break;
								case 4:
									_this105.s4 = v25;
									break;
								case 5:
									_this105.s5 = v25;
									break;
								default:
									if(_this105.s6 == null) {
										_this105.s6 = new trilateral_justPath_StoreF6();
									}
									var _this106 = _this105.s6;
									switch(_this106.l) {
									case 0:
										_this106.s0 = v25;
										break;
									case 1:
										_this106.s1 = v25;
										break;
									case 2:
										_this106.s2 = v25;
										break;
									case 3:
										_this106.s3 = v25;
										break;
									case 4:
										_this106.s4 = v25;
										break;
									case 5:
										_this106.s5 = v25;
										break;
									default:
										if(_this106.s6 == null) {
											_this106.s6 = new trilateral_justPath_StoreF6();
										}
										_this106.s6.push(v25);
									}
									_this106.l++;
								}
								_this105.l++;
							} else {
								var _this107 = this.store;
								var v26 = parseFloat(temp4);
								switch(_this107.l) {
								case 0:
									_this107.s0 = v26;
									break;
								case 1:
									_this107.s1 = v26;
									break;
								case 2:
									_this107.s2 = v26;
									break;
								case 3:
									_this107.s3 = v26;
									break;
								case 4:
									_this107.s4 = v26;
									break;
								case 5:
									_this107.s5 = v26;
									break;
								default:
									if(_this107.s6 == null) {
										_this107.s6 = new trilateral_justPath_StoreF6();
									}
									var _this108 = _this107.s6;
									switch(_this108.l) {
									case 0:
										_this108.s0 = v26;
										break;
									case 1:
										_this108.s1 = v26;
										break;
									case 2:
										_this108.s2 = v26;
										break;
									case 3:
										_this108.s3 = v26;
										break;
									case 4:
										_this108.s4 = v26;
										break;
									case 5:
										_this108.s5 = v26;
										break;
									default:
										if(_this108.s6 == null) {
											_this108.s6 = new trilateral_justPath_StoreF6();
										}
										_this108.s6.push(v26);
									}
									_this108.l++;
								}
								_this107.l++;
							}
							temp4 = "";
						}
						this.pos--;
						exit4 = true;
					}
					if(exit4) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.moveTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					var _this109 = this.store;
					var out50 = _this109.s0;
					if(_this109.l != 0) {
						_this109.s0 = _this109.s1;
						_this109.s1 = _this109.s2;
						_this109.s2 = _this109.s3;
						_this109.s3 = _this109.s4;
						_this109.s4 = _this109.s5;
						_this109.s5 = null;
						if(_this109.s6 != null) {
							var _this110 = _this109.s6;
							var out51 = _this110.s0;
							if(_this110.l != 0) {
								_this110.s0 = _this110.s1;
								_this110.s1 = _this110.s2;
								_this110.s2 = _this110.s3;
								_this110.s3 = _this110.s4;
								_this110.s4 = _this110.s5;
								_this110.s5 = null;
								if(_this110.s6 != null) {
									_this110.s5 = _this110.s6.shift();
								}
								_this110.l--;
							}
							_this109.s5 = out51;
						}
						_this109.l--;
					}
					this.lastX = out50;
					var _this111 = this.store;
					var out52 = _this111.s0;
					if(_this111.l != 0) {
						_this111.s0 = _this111.s1;
						_this111.s1 = _this111.s2;
						_this111.s2 = _this111.s3;
						_this111.s3 = _this111.s4;
						_this111.s4 = _this111.s5;
						_this111.s5 = null;
						if(_this111.s6 != null) {
							var _this112 = _this111.s6;
							var out53 = _this112.s0;
							if(_this112.l != 0) {
								_this112.s0 = _this112.s1;
								_this112.s1 = _this112.s2;
								_this112.s2 = _this112.s3;
								_this112.s3 = _this112.s4;
								_this112.s4 = _this112.s5;
								_this112.s5 = null;
								if(_this112.s6 != null) {
									_this112.s5 = _this112.s6.shift();
								}
								_this112.l--;
							}
							_this111.s5 = out53;
						}
						_this111.l--;
					}
					this.lastY = out52;
					this.pathContext.moveTo(this.lastX,this.lastY);
					while(this.store.l > 1) {
						var _this113 = this.store;
						var out54 = _this113.s0;
						if(_this113.l != 0) {
							_this113.s0 = _this113.s1;
							_this113.s1 = _this113.s2;
							_this113.s2 = _this113.s3;
							_this113.s3 = _this113.s4;
							_this113.s4 = _this113.s5;
							_this113.s5 = null;
							if(_this113.s6 != null) {
								var _this114 = _this113.s6;
								var out55 = _this114.s0;
								if(_this114.l != 0) {
									_this114.s0 = _this114.s1;
									_this114.s1 = _this114.s2;
									_this114.s2 = _this114.s3;
									_this114.s3 = _this114.s4;
									_this114.s4 = _this114.s5;
									_this114.s5 = null;
									if(_this114.s6 != null) {
										_this114.s5 = _this114.s6.shift();
									}
									_this114.l--;
								}
								_this113.s5 = out55;
							}
							_this113.l--;
						}
						this.lastX = out54;
						var _this115 = this.store;
						var out56 = _this115.s0;
						if(_this115.l != 0) {
							_this115.s0 = _this115.s1;
							_this115.s1 = _this115.s2;
							_this115.s2 = _this115.s3;
							_this115.s3 = _this115.s4;
							_this115.s4 = _this115.s5;
							_this115.s5 = null;
							if(_this115.s6 != null) {
								var _this116 = _this115.s6;
								var out57 = _this116.s0;
								if(_this116.l != 0) {
									_this116.s0 = _this116.s1;
									_this116.s1 = _this116.s2;
									_this116.s2 = _this116.s3;
									_this116.s3 = _this116.s4;
									_this116.s4 = _this116.s5;
									_this116.s5 = null;
									if(_this116.s6 != null) {
										_this116.s5 = _this116.s6.shift();
									}
									_this116.l--;
								}
								_this115.s5 = out57;
							}
							_this115.l--;
						}
						this.lastY = out56;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 81:
				var _this117 = this.store;
				_this117.l = 0;
				_this117.s0 = null;
				_this117.s1 = null;
				_this117.s2 = null;
				_this117.s3 = null;
				_this117.s4 = null;
				_this117.s5 = null;
				_this117.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count6 = 0;
				var temp5 = "";
				var exit5 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this118 = this.store;
								var v27 = parseFloat(temp5);
								switch(_this118.l) {
								case 0:
									_this118.s0 = v27;
									break;
								case 1:
									_this118.s1 = v27;
									break;
								case 2:
									_this118.s2 = v27;
									break;
								case 3:
									_this118.s3 = v27;
									break;
								case 4:
									_this118.s4 = v27;
									break;
								case 5:
									_this118.s5 = v27;
									break;
								default:
									if(_this118.s6 == null) {
										_this118.s6 = new trilateral_justPath_StoreF6();
									}
									var _this119 = _this118.s6;
									switch(_this119.l) {
									case 0:
										_this119.s0 = v27;
										break;
									case 1:
										_this119.s1 = v27;
										break;
									case 2:
										_this119.s2 = v27;
										break;
									case 3:
										_this119.s3 = v27;
										break;
									case 4:
										_this119.s4 = v27;
										break;
									case 5:
										_this119.s5 = v27;
										break;
									default:
										if(_this119.s6 == null) {
											_this119.s6 = new trilateral_justPath_StoreF6();
										}
										_this119.s6.push(v27);
									}
									_this119.l++;
								}
								_this118.l++;
							} else {
								var _this120 = this.store;
								var v28 = parseFloat(temp5);
								switch(_this120.l) {
								case 0:
									_this120.s0 = v28;
									break;
								case 1:
									_this120.s1 = v28;
									break;
								case 2:
									_this120.s2 = v28;
									break;
								case 3:
									_this120.s3 = v28;
									break;
								case 4:
									_this120.s4 = v28;
									break;
								case 5:
									_this120.s5 = v28;
									break;
								default:
									if(_this120.s6 == null) {
										_this120.s6 = new trilateral_justPath_StoreF6();
									}
									var _this121 = _this120.s6;
									switch(_this121.l) {
									case 0:
										_this121.s0 = v28;
										break;
									case 1:
										_this121.s1 = v28;
										break;
									case 2:
										_this121.s2 = v28;
										break;
									case 3:
										_this121.s3 = v28;
										break;
									case 4:
										_this121.s4 = v28;
										break;
									case 5:
										_this121.s5 = v28;
										break;
									default:
										if(_this121.s6 == null) {
											_this121.s6 = new trilateral_justPath_StoreF6();
										}
										_this121.s6.push(v28);
									}
									_this121.l++;
								}
								_this120.l++;
							}
							temp5 = "";
						}
						break;
					case 45:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this122 = this.store;
								var v29 = parseFloat(temp5);
								switch(_this122.l) {
								case 0:
									_this122.s0 = v29;
									break;
								case 1:
									_this122.s1 = v29;
									break;
								case 2:
									_this122.s2 = v29;
									break;
								case 3:
									_this122.s3 = v29;
									break;
								case 4:
									_this122.s4 = v29;
									break;
								case 5:
									_this122.s5 = v29;
									break;
								default:
									if(_this122.s6 == null) {
										_this122.s6 = new trilateral_justPath_StoreF6();
									}
									var _this123 = _this122.s6;
									switch(_this123.l) {
									case 0:
										_this123.s0 = v29;
										break;
									case 1:
										_this123.s1 = v29;
										break;
									case 2:
										_this123.s2 = v29;
										break;
									case 3:
										_this123.s3 = v29;
										break;
									case 4:
										_this123.s4 = v29;
										break;
									case 5:
										_this123.s5 = v29;
										break;
									default:
										if(_this123.s6 == null) {
											_this123.s6 = new trilateral_justPath_StoreF6();
										}
										_this123.s6.push(v29);
									}
									_this123.l++;
								}
								_this122.l++;
							} else {
								var _this124 = this.store;
								var v30 = parseFloat(temp5);
								switch(_this124.l) {
								case 0:
									_this124.s0 = v30;
									break;
								case 1:
									_this124.s1 = v30;
									break;
								case 2:
									_this124.s2 = v30;
									break;
								case 3:
									_this124.s3 = v30;
									break;
								case 4:
									_this124.s4 = v30;
									break;
								case 5:
									_this124.s5 = v30;
									break;
								default:
									if(_this124.s6 == null) {
										_this124.s6 = new trilateral_justPath_StoreF6();
									}
									var _this125 = _this124.s6;
									switch(_this125.l) {
									case 0:
										_this125.s0 = v30;
										break;
									case 1:
										_this125.s1 = v30;
										break;
									case 2:
										_this125.s2 = v30;
										break;
									case 3:
										_this125.s3 = v30;
										break;
									case 4:
										_this125.s4 = v30;
										break;
									case 5:
										_this125.s5 = v30;
										break;
									default:
										if(_this125.s6 == null) {
											_this125.s6 = new trilateral_justPath_StoreF6();
										}
										_this125.s6.push(v30);
									}
									_this125.l++;
								}
								_this124.l++;
							}
						}
						temp5 = "-";
						break;
					case 46:
						temp5 += ".";
						break;
					case 48:
						temp5 += "0";
						break;
					case 49:
						temp5 += "1";
						break;
					case 50:
						temp5 += "2";
						break;
					case 51:
						temp5 += "3";
						break;
					case 52:
						temp5 += "4";
						break;
					case 53:
						temp5 += "5";
						break;
					case 54:
						temp5 += "6";
						break;
					case 55:
						temp5 += "7";
						break;
					case 56:
						temp5 += "8";
						break;
					case 57:
						temp5 += "9";
						break;
					default:
						if(temp5 != "") {
							if((this.store.l & 1) == 0) {
								var _this126 = this.store;
								var v31 = parseFloat(temp5);
								switch(_this126.l) {
								case 0:
									_this126.s0 = v31;
									break;
								case 1:
									_this126.s1 = v31;
									break;
								case 2:
									_this126.s2 = v31;
									break;
								case 3:
									_this126.s3 = v31;
									break;
								case 4:
									_this126.s4 = v31;
									break;
								case 5:
									_this126.s5 = v31;
									break;
								default:
									if(_this126.s6 == null) {
										_this126.s6 = new trilateral_justPath_StoreF6();
									}
									var _this127 = _this126.s6;
									switch(_this127.l) {
									case 0:
										_this127.s0 = v31;
										break;
									case 1:
										_this127.s1 = v31;
										break;
									case 2:
										_this127.s2 = v31;
										break;
									case 3:
										_this127.s3 = v31;
										break;
									case 4:
										_this127.s4 = v31;
										break;
									case 5:
										_this127.s5 = v31;
										break;
									default:
										if(_this127.s6 == null) {
											_this127.s6 = new trilateral_justPath_StoreF6();
										}
										_this127.s6.push(v31);
									}
									_this127.l++;
								}
								_this126.l++;
							} else {
								var _this128 = this.store;
								var v32 = parseFloat(temp5);
								switch(_this128.l) {
								case 0:
									_this128.s0 = v32;
									break;
								case 1:
									_this128.s1 = v32;
									break;
								case 2:
									_this128.s2 = v32;
									break;
								case 3:
									_this128.s3 = v32;
									break;
								case 4:
									_this128.s4 = v32;
									break;
								case 5:
									_this128.s5 = v32;
									break;
								default:
									if(_this128.s6 == null) {
										_this128.s6 = new trilateral_justPath_StoreF6();
									}
									var _this129 = _this128.s6;
									switch(_this129.l) {
									case 0:
										_this129.s0 = v32;
										break;
									case 1:
										_this129.s1 = v32;
										break;
									case 2:
										_this129.s2 = v32;
										break;
									case 3:
										_this129.s3 = v32;
										break;
									case 4:
										_this129.s4 = v32;
										break;
									case 5:
										_this129.s5 = v32;
										break;
									default:
										if(_this129.s6 == null) {
											_this129.s6 = new trilateral_justPath_StoreF6();
										}
										_this129.s6.push(v32);
									}
									_this129.l++;
								}
								_this128.l++;
							}
							temp5 = "";
						}
						this.pos--;
						exit5 = true;
					}
					if(exit5) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.store.s0;
					this.controlY = this.store.s1;
					this.lastX = this.store.s2;
					this.lastY = this.store.s3;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this130 = this.store;
						var out58 = _this130.s0;
						if(_this130.l != 0) {
							_this130.s0 = _this130.s1;
							_this130.s1 = _this130.s2;
							_this130.s2 = _this130.s3;
							_this130.s3 = _this130.s4;
							_this130.s4 = _this130.s5;
							_this130.s5 = null;
							if(_this130.s6 != null) {
								var _this131 = _this130.s6;
								var out59 = _this131.s0;
								if(_this131.l != 0) {
									_this131.s0 = _this131.s1;
									_this131.s1 = _this131.s2;
									_this131.s2 = _this131.s3;
									_this131.s3 = _this131.s4;
									_this131.s4 = _this131.s5;
									_this131.s5 = null;
									if(_this131.s6 != null) {
										_this131.s5 = _this131.s6.shift();
									}
									_this131.l--;
								}
								_this130.s5 = out59;
							}
							_this130.l--;
						}
						this.controlX = out58;
						var _this132 = this.store;
						var out60 = _this132.s0;
						if(_this132.l != 0) {
							_this132.s0 = _this132.s1;
							_this132.s1 = _this132.s2;
							_this132.s2 = _this132.s3;
							_this132.s3 = _this132.s4;
							_this132.s4 = _this132.s5;
							_this132.s5 = null;
							if(_this132.s6 != null) {
								var _this133 = _this132.s6;
								var out61 = _this133.s0;
								if(_this133.l != 0) {
									_this133.s0 = _this133.s1;
									_this133.s1 = _this133.s2;
									_this133.s2 = _this133.s3;
									_this133.s3 = _this133.s4;
									_this133.s4 = _this133.s5;
									_this133.s5 = null;
									if(_this133.s6 != null) {
										_this133.s5 = _this133.s6.shift();
									}
									_this133.l--;
								}
								_this132.s5 = out61;
							}
							_this132.l--;
						}
						this.controlY = out60;
						var _this134 = this.store;
						var out62 = _this134.s0;
						if(_this134.l != 0) {
							_this134.s0 = _this134.s1;
							_this134.s1 = _this134.s2;
							_this134.s2 = _this134.s3;
							_this134.s3 = _this134.s4;
							_this134.s4 = _this134.s5;
							_this134.s5 = null;
							if(_this134.s6 != null) {
								var _this135 = _this134.s6;
								var out63 = _this135.s0;
								if(_this135.l != 0) {
									_this135.s0 = _this135.s1;
									_this135.s1 = _this135.s2;
									_this135.s2 = _this135.s3;
									_this135.s3 = _this135.s4;
									_this135.s4 = _this135.s5;
									_this135.s5 = null;
									if(_this135.s6 != null) {
										_this135.s5 = _this135.s6.shift();
									}
									_this135.l--;
								}
								_this134.s5 = out63;
							}
							_this134.l--;
						}
						this.lastX = out62;
						var _this136 = this.store;
						var out64 = _this136.s0;
						if(_this136.l != 0) {
							_this136.s0 = _this136.s1;
							_this136.s1 = _this136.s2;
							_this136.s2 = _this136.s3;
							_this136.s3 = _this136.s4;
							_this136.s4 = _this136.s5;
							_this136.s5 = null;
							if(_this136.s6 != null) {
								var _this137 = _this136.s6;
								var out65 = _this137.s0;
								if(_this137.l != 0) {
									_this137.s0 = _this137.s1;
									_this137.s1 = _this137.s2;
									_this137.s2 = _this137.s3;
									_this137.s3 = _this137.s4;
									_this137.s4 = _this137.s5;
									_this137.s5 = null;
									if(_this137.s6 != null) {
										_this137.s5 = _this137.s6.shift();
									}
									_this137.l--;
								}
								_this136.s5 = out65;
							}
							_this136.l--;
						}
						this.lastY = out64;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 83:
				var _this138 = this.store;
				_this138.l = 0;
				_this138.s0 = null;
				_this138.s1 = null;
				_this138.s2 = null;
				_this138.s3 = null;
				_this138.s4 = null;
				_this138.s5 = null;
				_this138.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count7 = 0;
				var temp6 = "";
				var exit6 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this139 = this.store;
								var v33 = parseFloat(temp6);
								switch(_this139.l) {
								case 0:
									_this139.s0 = v33;
									break;
								case 1:
									_this139.s1 = v33;
									break;
								case 2:
									_this139.s2 = v33;
									break;
								case 3:
									_this139.s3 = v33;
									break;
								case 4:
									_this139.s4 = v33;
									break;
								case 5:
									_this139.s5 = v33;
									break;
								default:
									if(_this139.s6 == null) {
										_this139.s6 = new trilateral_justPath_StoreF6();
									}
									var _this140 = _this139.s6;
									switch(_this140.l) {
									case 0:
										_this140.s0 = v33;
										break;
									case 1:
										_this140.s1 = v33;
										break;
									case 2:
										_this140.s2 = v33;
										break;
									case 3:
										_this140.s3 = v33;
										break;
									case 4:
										_this140.s4 = v33;
										break;
									case 5:
										_this140.s5 = v33;
										break;
									default:
										if(_this140.s6 == null) {
											_this140.s6 = new trilateral_justPath_StoreF6();
										}
										_this140.s6.push(v33);
									}
									_this140.l++;
								}
								_this139.l++;
							} else {
								var _this141 = this.store;
								var v34 = parseFloat(temp6);
								switch(_this141.l) {
								case 0:
									_this141.s0 = v34;
									break;
								case 1:
									_this141.s1 = v34;
									break;
								case 2:
									_this141.s2 = v34;
									break;
								case 3:
									_this141.s3 = v34;
									break;
								case 4:
									_this141.s4 = v34;
									break;
								case 5:
									_this141.s5 = v34;
									break;
								default:
									if(_this141.s6 == null) {
										_this141.s6 = new trilateral_justPath_StoreF6();
									}
									var _this142 = _this141.s6;
									switch(_this142.l) {
									case 0:
										_this142.s0 = v34;
										break;
									case 1:
										_this142.s1 = v34;
										break;
									case 2:
										_this142.s2 = v34;
										break;
									case 3:
										_this142.s3 = v34;
										break;
									case 4:
										_this142.s4 = v34;
										break;
									case 5:
										_this142.s5 = v34;
										break;
									default:
										if(_this142.s6 == null) {
											_this142.s6 = new trilateral_justPath_StoreF6();
										}
										_this142.s6.push(v34);
									}
									_this142.l++;
								}
								_this141.l++;
							}
							temp6 = "";
						}
						break;
					case 45:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this143 = this.store;
								var v35 = parseFloat(temp6);
								switch(_this143.l) {
								case 0:
									_this143.s0 = v35;
									break;
								case 1:
									_this143.s1 = v35;
									break;
								case 2:
									_this143.s2 = v35;
									break;
								case 3:
									_this143.s3 = v35;
									break;
								case 4:
									_this143.s4 = v35;
									break;
								case 5:
									_this143.s5 = v35;
									break;
								default:
									if(_this143.s6 == null) {
										_this143.s6 = new trilateral_justPath_StoreF6();
									}
									var _this144 = _this143.s6;
									switch(_this144.l) {
									case 0:
										_this144.s0 = v35;
										break;
									case 1:
										_this144.s1 = v35;
										break;
									case 2:
										_this144.s2 = v35;
										break;
									case 3:
										_this144.s3 = v35;
										break;
									case 4:
										_this144.s4 = v35;
										break;
									case 5:
										_this144.s5 = v35;
										break;
									default:
										if(_this144.s6 == null) {
											_this144.s6 = new trilateral_justPath_StoreF6();
										}
										_this144.s6.push(v35);
									}
									_this144.l++;
								}
								_this143.l++;
							} else {
								var _this145 = this.store;
								var v36 = parseFloat(temp6);
								switch(_this145.l) {
								case 0:
									_this145.s0 = v36;
									break;
								case 1:
									_this145.s1 = v36;
									break;
								case 2:
									_this145.s2 = v36;
									break;
								case 3:
									_this145.s3 = v36;
									break;
								case 4:
									_this145.s4 = v36;
									break;
								case 5:
									_this145.s5 = v36;
									break;
								default:
									if(_this145.s6 == null) {
										_this145.s6 = new trilateral_justPath_StoreF6();
									}
									var _this146 = _this145.s6;
									switch(_this146.l) {
									case 0:
										_this146.s0 = v36;
										break;
									case 1:
										_this146.s1 = v36;
										break;
									case 2:
										_this146.s2 = v36;
										break;
									case 3:
										_this146.s3 = v36;
										break;
									case 4:
										_this146.s4 = v36;
										break;
									case 5:
										_this146.s5 = v36;
										break;
									default:
										if(_this146.s6 == null) {
											_this146.s6 = new trilateral_justPath_StoreF6();
										}
										_this146.s6.push(v36);
									}
									_this146.l++;
								}
								_this145.l++;
							}
						}
						temp6 = "-";
						break;
					case 46:
						temp6 += ".";
						break;
					case 48:
						temp6 += "0";
						break;
					case 49:
						temp6 += "1";
						break;
					case 50:
						temp6 += "2";
						break;
					case 51:
						temp6 += "3";
						break;
					case 52:
						temp6 += "4";
						break;
					case 53:
						temp6 += "5";
						break;
					case 54:
						temp6 += "6";
						break;
					case 55:
						temp6 += "7";
						break;
					case 56:
						temp6 += "8";
						break;
					case 57:
						temp6 += "9";
						break;
					default:
						if(temp6 != "") {
							if((this.store.l & 1) == 0) {
								var _this147 = this.store;
								var v37 = parseFloat(temp6);
								switch(_this147.l) {
								case 0:
									_this147.s0 = v37;
									break;
								case 1:
									_this147.s1 = v37;
									break;
								case 2:
									_this147.s2 = v37;
									break;
								case 3:
									_this147.s3 = v37;
									break;
								case 4:
									_this147.s4 = v37;
									break;
								case 5:
									_this147.s5 = v37;
									break;
								default:
									if(_this147.s6 == null) {
										_this147.s6 = new trilateral_justPath_StoreF6();
									}
									var _this148 = _this147.s6;
									switch(_this148.l) {
									case 0:
										_this148.s0 = v37;
										break;
									case 1:
										_this148.s1 = v37;
										break;
									case 2:
										_this148.s2 = v37;
										break;
									case 3:
										_this148.s3 = v37;
										break;
									case 4:
										_this148.s4 = v37;
										break;
									case 5:
										_this148.s5 = v37;
										break;
									default:
										if(_this148.s6 == null) {
											_this148.s6 = new trilateral_justPath_StoreF6();
										}
										_this148.s6.push(v37);
									}
									_this148.l++;
								}
								_this147.l++;
							} else {
								var _this149 = this.store;
								var v38 = parseFloat(temp6);
								switch(_this149.l) {
								case 0:
									_this149.s0 = v38;
									break;
								case 1:
									_this149.s1 = v38;
									break;
								case 2:
									_this149.s2 = v38;
									break;
								case 3:
									_this149.s3 = v38;
									break;
								case 4:
									_this149.s4 = v38;
									break;
								case 5:
									_this149.s5 = v38;
									break;
								default:
									if(_this149.s6 == null) {
										_this149.s6 = new trilateral_justPath_StoreF6();
									}
									var _this150 = _this149.s6;
									switch(_this150.l) {
									case 0:
										_this150.s0 = v38;
										break;
									case 1:
										_this150.s1 = v38;
										break;
									case 2:
										_this150.s2 = v38;
										break;
									case 3:
										_this150.s3 = v38;
										break;
									case 4:
										_this150.s4 = v38;
										break;
									case 5:
										_this150.s5 = v38;
										break;
									default:
										if(_this150.s6 == null) {
											_this150.s6 = new trilateral_justPath_StoreF6();
										}
										_this150.s6.push(v38);
									}
									_this150.l++;
								}
								_this149.l++;
							}
							temp6 = "";
						}
						this.pos--;
						exit6 = true;
					}
					if(exit6) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX1 = this.store.s0;
					var firstY1 = this.store.s1;
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					var endX = this.store.s2;
					var endY = this.store.s3;
					this.pathContext.curveTo(this.controlX,this.controlY,firstX1,firstY1,endX,endY);
					this.controlX = this.store.s0;
					this.controlY = this.store.s1;
					this.lastX = endX;
					this.lastY = endY;
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this151 = this.store;
						var out66 = _this151.s0;
						if(_this151.l != 0) {
							_this151.s0 = _this151.s1;
							_this151.s1 = _this151.s2;
							_this151.s2 = _this151.s3;
							_this151.s3 = _this151.s4;
							_this151.s4 = _this151.s5;
							_this151.s5 = null;
							if(_this151.s6 != null) {
								var _this152 = _this151.s6;
								var out67 = _this152.s0;
								if(_this152.l != 0) {
									_this152.s0 = _this152.s1;
									_this152.s1 = _this152.s2;
									_this152.s2 = _this152.s3;
									_this152.s3 = _this152.s4;
									_this152.s4 = _this152.s5;
									_this152.s5 = null;
									if(_this152.s6 != null) {
										_this152.s5 = _this152.s6.shift();
									}
									_this152.l--;
								}
								_this151.s5 = out67;
							}
							_this151.l--;
						}
						var firstX2 = out66;
						var _this153 = this.store;
						var out68 = _this153.s0;
						if(_this153.l != 0) {
							_this153.s0 = _this153.s1;
							_this153.s1 = _this153.s2;
							_this153.s2 = _this153.s3;
							_this153.s3 = _this153.s4;
							_this153.s4 = _this153.s5;
							_this153.s5 = null;
							if(_this153.s6 != null) {
								var _this154 = _this153.s6;
								var out69 = _this154.s0;
								if(_this154.l != 0) {
									_this154.s0 = _this154.s1;
									_this154.s1 = _this154.s2;
									_this154.s2 = _this154.s3;
									_this154.s3 = _this154.s4;
									_this154.s4 = _this154.s5;
									_this154.s5 = null;
									if(_this154.s6 != null) {
										_this154.s5 = _this154.s6.shift();
									}
									_this154.l--;
								}
								_this153.s5 = out69;
							}
							_this153.l--;
						}
						var firstY2 = out68;
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this155 = this.store;
						var out70 = _this155.s0;
						if(_this155.l != 0) {
							_this155.s0 = _this155.s1;
							_this155.s1 = _this155.s2;
							_this155.s2 = _this155.s3;
							_this155.s3 = _this155.s4;
							_this155.s4 = _this155.s5;
							_this155.s5 = null;
							if(_this155.s6 != null) {
								var _this156 = _this155.s6;
								var out71 = _this156.s0;
								if(_this156.l != 0) {
									_this156.s0 = _this156.s1;
									_this156.s1 = _this156.s2;
									_this156.s2 = _this156.s3;
									_this156.s3 = _this156.s4;
									_this156.s4 = _this156.s5;
									_this156.s5 = null;
									if(_this156.s6 != null) {
										_this156.s5 = _this156.s6.shift();
									}
									_this156.l--;
								}
								_this155.s5 = out71;
							}
							_this155.l--;
						}
						this.lastX = out70;
						var _this157 = this.store;
						var out72 = _this157.s0;
						if(_this157.l != 0) {
							_this157.s0 = _this157.s1;
							_this157.s1 = _this157.s2;
							_this157.s2 = _this157.s3;
							_this157.s3 = _this157.s4;
							_this157.s4 = _this157.s5;
							_this157.s5 = null;
							if(_this157.s6 != null) {
								var _this158 = _this157.s6;
								var out73 = _this158.s0;
								if(_this158.l != 0) {
									_this158.s0 = _this158.s1;
									_this158.s1 = _this158.s2;
									_this158.s2 = _this158.s3;
									_this158.s3 = _this158.s4;
									_this158.s4 = _this158.s5;
									_this158.s5 = null;
									if(_this158.s6 != null) {
										_this158.s5 = _this158.s6.shift();
									}
									_this158.l--;
								}
								_this157.s5 = out73;
							}
							_this157.l--;
						}
						this.lastY = out72;
						this.pathContext.curveTo(this.controlX,this.controlY,firstX2,firstY2,this.lastX,this.lastY);
						this.controlX = firstX2;
						this.controlY = firstY2;
					}
				}
				break;
			case 84:
				var _this159 = this.store;
				_this159.l = 0;
				_this159.s0 = null;
				_this159.s1 = null;
				_this159.s2 = null;
				_this159.s3 = null;
				_this159.s4 = null;
				_this159.s5 = null;
				_this159.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count8 = 0;
				var temp7 = "";
				var exit7 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this160 = this.store;
								var v39 = parseFloat(temp7);
								switch(_this160.l) {
								case 0:
									_this160.s0 = v39;
									break;
								case 1:
									_this160.s1 = v39;
									break;
								case 2:
									_this160.s2 = v39;
									break;
								case 3:
									_this160.s3 = v39;
									break;
								case 4:
									_this160.s4 = v39;
									break;
								case 5:
									_this160.s5 = v39;
									break;
								default:
									if(_this160.s6 == null) {
										_this160.s6 = new trilateral_justPath_StoreF6();
									}
									var _this161 = _this160.s6;
									switch(_this161.l) {
									case 0:
										_this161.s0 = v39;
										break;
									case 1:
										_this161.s1 = v39;
										break;
									case 2:
										_this161.s2 = v39;
										break;
									case 3:
										_this161.s3 = v39;
										break;
									case 4:
										_this161.s4 = v39;
										break;
									case 5:
										_this161.s5 = v39;
										break;
									default:
										if(_this161.s6 == null) {
											_this161.s6 = new trilateral_justPath_StoreF6();
										}
										_this161.s6.push(v39);
									}
									_this161.l++;
								}
								_this160.l++;
							} else {
								var _this162 = this.store;
								var v40 = parseFloat(temp7);
								switch(_this162.l) {
								case 0:
									_this162.s0 = v40;
									break;
								case 1:
									_this162.s1 = v40;
									break;
								case 2:
									_this162.s2 = v40;
									break;
								case 3:
									_this162.s3 = v40;
									break;
								case 4:
									_this162.s4 = v40;
									break;
								case 5:
									_this162.s5 = v40;
									break;
								default:
									if(_this162.s6 == null) {
										_this162.s6 = new trilateral_justPath_StoreF6();
									}
									var _this163 = _this162.s6;
									switch(_this163.l) {
									case 0:
										_this163.s0 = v40;
										break;
									case 1:
										_this163.s1 = v40;
										break;
									case 2:
										_this163.s2 = v40;
										break;
									case 3:
										_this163.s3 = v40;
										break;
									case 4:
										_this163.s4 = v40;
										break;
									case 5:
										_this163.s5 = v40;
										break;
									default:
										if(_this163.s6 == null) {
											_this163.s6 = new trilateral_justPath_StoreF6();
										}
										_this163.s6.push(v40);
									}
									_this163.l++;
								}
								_this162.l++;
							}
							temp7 = "";
						}
						break;
					case 45:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this164 = this.store;
								var v41 = parseFloat(temp7);
								switch(_this164.l) {
								case 0:
									_this164.s0 = v41;
									break;
								case 1:
									_this164.s1 = v41;
									break;
								case 2:
									_this164.s2 = v41;
									break;
								case 3:
									_this164.s3 = v41;
									break;
								case 4:
									_this164.s4 = v41;
									break;
								case 5:
									_this164.s5 = v41;
									break;
								default:
									if(_this164.s6 == null) {
										_this164.s6 = new trilateral_justPath_StoreF6();
									}
									var _this165 = _this164.s6;
									switch(_this165.l) {
									case 0:
										_this165.s0 = v41;
										break;
									case 1:
										_this165.s1 = v41;
										break;
									case 2:
										_this165.s2 = v41;
										break;
									case 3:
										_this165.s3 = v41;
										break;
									case 4:
										_this165.s4 = v41;
										break;
									case 5:
										_this165.s5 = v41;
										break;
									default:
										if(_this165.s6 == null) {
											_this165.s6 = new trilateral_justPath_StoreF6();
										}
										_this165.s6.push(v41);
									}
									_this165.l++;
								}
								_this164.l++;
							} else {
								var _this166 = this.store;
								var v42 = parseFloat(temp7);
								switch(_this166.l) {
								case 0:
									_this166.s0 = v42;
									break;
								case 1:
									_this166.s1 = v42;
									break;
								case 2:
									_this166.s2 = v42;
									break;
								case 3:
									_this166.s3 = v42;
									break;
								case 4:
									_this166.s4 = v42;
									break;
								case 5:
									_this166.s5 = v42;
									break;
								default:
									if(_this166.s6 == null) {
										_this166.s6 = new trilateral_justPath_StoreF6();
									}
									var _this167 = _this166.s6;
									switch(_this167.l) {
									case 0:
										_this167.s0 = v42;
										break;
									case 1:
										_this167.s1 = v42;
										break;
									case 2:
										_this167.s2 = v42;
										break;
									case 3:
										_this167.s3 = v42;
										break;
									case 4:
										_this167.s4 = v42;
										break;
									case 5:
										_this167.s5 = v42;
										break;
									default:
										if(_this167.s6 == null) {
											_this167.s6 = new trilateral_justPath_StoreF6();
										}
										_this167.s6.push(v42);
									}
									_this167.l++;
								}
								_this166.l++;
							}
						}
						temp7 = "-";
						break;
					case 46:
						temp7 += ".";
						break;
					case 48:
						temp7 += "0";
						break;
					case 49:
						temp7 += "1";
						break;
					case 50:
						temp7 += "2";
						break;
					case 51:
						temp7 += "3";
						break;
					case 52:
						temp7 += "4";
						break;
					case 53:
						temp7 += "5";
						break;
					case 54:
						temp7 += "6";
						break;
					case 55:
						temp7 += "7";
						break;
					case 56:
						temp7 += "8";
						break;
					case 57:
						temp7 += "9";
						break;
					default:
						if(temp7 != "") {
							if((this.store.l & 1) == 0) {
								var _this168 = this.store;
								var v43 = parseFloat(temp7);
								switch(_this168.l) {
								case 0:
									_this168.s0 = v43;
									break;
								case 1:
									_this168.s1 = v43;
									break;
								case 2:
									_this168.s2 = v43;
									break;
								case 3:
									_this168.s3 = v43;
									break;
								case 4:
									_this168.s4 = v43;
									break;
								case 5:
									_this168.s5 = v43;
									break;
								default:
									if(_this168.s6 == null) {
										_this168.s6 = new trilateral_justPath_StoreF6();
									}
									var _this169 = _this168.s6;
									switch(_this169.l) {
									case 0:
										_this169.s0 = v43;
										break;
									case 1:
										_this169.s1 = v43;
										break;
									case 2:
										_this169.s2 = v43;
										break;
									case 3:
										_this169.s3 = v43;
										break;
									case 4:
										_this169.s4 = v43;
										break;
									case 5:
										_this169.s5 = v43;
										break;
									default:
										if(_this169.s6 == null) {
											_this169.s6 = new trilateral_justPath_StoreF6();
										}
										_this169.s6.push(v43);
									}
									_this169.l++;
								}
								_this168.l++;
							} else {
								var _this170 = this.store;
								var v44 = parseFloat(temp7);
								switch(_this170.l) {
								case 0:
									_this170.s0 = v44;
									break;
								case 1:
									_this170.s1 = v44;
									break;
								case 2:
									_this170.s2 = v44;
									break;
								case 3:
									_this170.s3 = v44;
									break;
								case 4:
									_this170.s4 = v44;
									break;
								case 5:
									_this170.s5 = v44;
									break;
								default:
									if(_this170.s6 == null) {
										_this170.s6 = new trilateral_justPath_StoreF6();
									}
									var _this171 = _this170.s6;
									switch(_this171.l) {
									case 0:
										_this171.s0 = v44;
										break;
									case 1:
										_this171.s1 = v44;
										break;
									case 2:
										_this171.s2 = v44;
										break;
									case 3:
										_this171.s3 = v44;
										break;
									case 4:
										_this171.s4 = v44;
										break;
									case 5:
										_this171.s5 = v44;
										break;
									default:
										if(_this171.s6 == null) {
											_this171.s6 = new trilateral_justPath_StoreF6();
										}
										_this171.s6.push(v44);
									}
									_this171.l++;
								}
								_this170.l++;
							}
							temp7 = "";
						}
						this.pos--;
						exit7 = true;
					}
					if(exit7) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s0;
					this.lastY = this.store.s1;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this172 = this.store;
						var out74 = _this172.s0;
						if(_this172.l != 0) {
							_this172.s0 = _this172.s1;
							_this172.s1 = _this172.s2;
							_this172.s2 = _this172.s3;
							_this172.s3 = _this172.s4;
							_this172.s4 = _this172.s5;
							_this172.s5 = null;
							if(_this172.s6 != null) {
								var _this173 = _this172.s6;
								var out75 = _this173.s0;
								if(_this173.l != 0) {
									_this173.s0 = _this173.s1;
									_this173.s1 = _this173.s2;
									_this173.s2 = _this173.s3;
									_this173.s3 = _this173.s4;
									_this173.s4 = _this173.s5;
									_this173.s5 = null;
									if(_this173.s6 != null) {
										_this173.s5 = _this173.s6.shift();
									}
									_this173.l--;
								}
								_this172.s5 = out75;
							}
							_this172.l--;
						}
						this.lastX = out74;
						var _this174 = this.store;
						var out76 = _this174.s0;
						if(_this174.l != 0) {
							_this174.s0 = _this174.s1;
							_this174.s1 = _this174.s2;
							_this174.s2 = _this174.s3;
							_this174.s3 = _this174.s4;
							_this174.s4 = _this174.s5;
							_this174.s5 = null;
							if(_this174.s6 != null) {
								var _this175 = _this174.s6;
								var out77 = _this175.s0;
								if(_this175.l != 0) {
									_this175.s0 = _this175.s1;
									_this175.s1 = _this175.s2;
									_this175.s2 = _this175.s3;
									_this175.s3 = _this175.s4;
									_this175.s4 = _this175.s5;
									_this175.s5 = null;
									if(_this175.s6 != null) {
										_this175.s5 = _this175.s6.shift();
									}
									_this175.l--;
								}
								_this174.s5 = out77;
							}
							_this174.l--;
						}
						this.lastY = out76;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 86:
				var _this176 = this.store;
				_this176.l = 0;
				_this176.s0 = null;
				_this176.s1 = null;
				_this176.s2 = null;
				_this176.s3 = null;
				_this176.s4 = null;
				_this176.s5 = null;
				_this176.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count9 = 0;
				var temp8 = "";
				var exit8 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp8 != "") {
							var _this177 = this.store;
							var v45 = parseFloat(temp8);
							switch(_this177.l) {
							case 0:
								_this177.s0 = v45;
								break;
							case 1:
								_this177.s1 = v45;
								break;
							case 2:
								_this177.s2 = v45;
								break;
							case 3:
								_this177.s3 = v45;
								break;
							case 4:
								_this177.s4 = v45;
								break;
							case 5:
								_this177.s5 = v45;
								break;
							default:
								if(_this177.s6 == null) {
									_this177.s6 = new trilateral_justPath_StoreF6();
								}
								var _this178 = _this177.s6;
								switch(_this178.l) {
								case 0:
									_this178.s0 = v45;
									break;
								case 1:
									_this178.s1 = v45;
									break;
								case 2:
									_this178.s2 = v45;
									break;
								case 3:
									_this178.s3 = v45;
									break;
								case 4:
									_this178.s4 = v45;
									break;
								case 5:
									_this178.s5 = v45;
									break;
								default:
									if(_this178.s6 == null) {
										_this178.s6 = new trilateral_justPath_StoreF6();
									}
									_this178.s6.push(v45);
								}
								_this178.l++;
							}
							_this177.l++;
							temp8 = "";
						}
						break;
					case 45:
						if(temp8 != "") {
							var _this179 = this.store;
							var v46 = parseFloat(temp8);
							switch(_this179.l) {
							case 0:
								_this179.s0 = v46;
								break;
							case 1:
								_this179.s1 = v46;
								break;
							case 2:
								_this179.s2 = v46;
								break;
							case 3:
								_this179.s3 = v46;
								break;
							case 4:
								_this179.s4 = v46;
								break;
							case 5:
								_this179.s5 = v46;
								break;
							default:
								if(_this179.s6 == null) {
									_this179.s6 = new trilateral_justPath_StoreF6();
								}
								var _this180 = _this179.s6;
								switch(_this180.l) {
								case 0:
									_this180.s0 = v46;
									break;
								case 1:
									_this180.s1 = v46;
									break;
								case 2:
									_this180.s2 = v46;
									break;
								case 3:
									_this180.s3 = v46;
									break;
								case 4:
									_this180.s4 = v46;
									break;
								case 5:
									_this180.s5 = v46;
									break;
								default:
									if(_this180.s6 == null) {
										_this180.s6 = new trilateral_justPath_StoreF6();
									}
									_this180.s6.push(v46);
								}
								_this180.l++;
							}
							_this179.l++;
						}
						temp8 = "-";
						break;
					case 46:
						temp8 += ".";
						break;
					case 48:
						temp8 += "0";
						break;
					case 49:
						temp8 += "1";
						break;
					case 50:
						temp8 += "2";
						break;
					case 51:
						temp8 += "3";
						break;
					case 52:
						temp8 += "4";
						break;
					case 53:
						temp8 += "5";
						break;
					case 54:
						temp8 += "6";
						break;
					case 55:
						temp8 += "7";
						break;
					case 56:
						temp8 += "8";
						break;
					case 57:
						temp8 += "9";
						break;
					default:
						if(temp8 != "") {
							var _this181 = this.store;
							var v47 = parseFloat(temp8);
							switch(_this181.l) {
							case 0:
								_this181.s0 = v47;
								break;
							case 1:
								_this181.s1 = v47;
								break;
							case 2:
								_this181.s2 = v47;
								break;
							case 3:
								_this181.s3 = v47;
								break;
							case 4:
								_this181.s4 = v47;
								break;
							case 5:
								_this181.s5 = v47;
								break;
							default:
								if(_this181.s6 == null) {
									_this181.s6 = new trilateral_justPath_StoreF6();
								}
								var _this182 = _this181.s6;
								switch(_this182.l) {
								case 0:
									_this182.s0 = v47;
									break;
								case 1:
									_this182.s1 = v47;
									break;
								case 2:
									_this182.s2 = v47;
									break;
								case 3:
									_this182.s3 = v47;
									break;
								case 4:
									_this182.s4 = v47;
									break;
								case 5:
									_this182.s5 = v47;
									break;
								default:
									if(_this182.s6 == null) {
										_this182.s6 = new trilateral_justPath_StoreF6();
									}
									_this182.s6.push(v47);
								}
								_this182.l++;
							}
							_this181.l++;
							temp8 = "";
						}
						this.pos--;
						exit8 = true;
					}
					if(exit8) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					var _this183 = this.store;
					var out78 = _this183.s0;
					if(_this183.l != 0) {
						_this183.s0 = _this183.s1;
						_this183.s1 = _this183.s2;
						_this183.s2 = _this183.s3;
						_this183.s3 = _this183.s4;
						_this183.s4 = _this183.s5;
						_this183.s5 = null;
						if(_this183.s6 != null) {
							var _this184 = _this183.s6;
							var out79 = _this184.s0;
							if(_this184.l != 0) {
								_this184.s0 = _this184.s1;
								_this184.s1 = _this184.s2;
								_this184.s2 = _this184.s3;
								_this184.s3 = _this184.s4;
								_this184.s4 = _this184.s5;
								_this184.s5 = null;
								if(_this184.s6 != null) {
									_this184.s5 = _this184.s6.shift();
								}
								_this184.l--;
							}
							_this183.s5 = out79;
						}
						_this183.l--;
					}
					this.lastY = out78;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var _this185 = this.store;
						var out80 = _this185.s0;
						if(_this185.l != 0) {
							_this185.s0 = _this185.s1;
							_this185.s1 = _this185.s2;
							_this185.s2 = _this185.s3;
							_this185.s3 = _this185.s4;
							_this185.s4 = _this185.s5;
							_this185.s5 = null;
							if(_this185.s6 != null) {
								var _this186 = _this185.s6;
								var out81 = _this186.s0;
								if(_this186.l != 0) {
									_this186.s0 = _this186.s1;
									_this186.s1 = _this186.s2;
									_this186.s2 = _this186.s3;
									_this186.s3 = _this186.s4;
									_this186.s4 = _this186.s5;
									_this186.s5 = null;
									if(_this186.s6 != null) {
										_this186.s5 = _this186.s6.shift();
									}
									_this186.l--;
								}
								_this185.s5 = out81;
							}
							_this185.l--;
						}
						this.lastY = out80;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 90:case 122:
				this.lastX = 0;
				this.lastY = 0;
				break;
			case 97:
				var _this187 = this.store;
				_this187.l = 0;
				_this187.s0 = null;
				_this187.s1 = null;
				_this187.s2 = null;
				_this187.s3 = null;
				_this187.s4 = null;
				_this187.s5 = null;
				_this187.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count10 = 0;
				var temp9 = "";
				var exit9 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this188 = this.store;
								var v48 = parseFloat(temp9);
								switch(_this188.l) {
								case 0:
									_this188.s0 = v48;
									break;
								case 1:
									_this188.s1 = v48;
									break;
								case 2:
									_this188.s2 = v48;
									break;
								case 3:
									_this188.s3 = v48;
									break;
								case 4:
									_this188.s4 = v48;
									break;
								case 5:
									_this188.s5 = v48;
									break;
								default:
									if(_this188.s6 == null) {
										_this188.s6 = new trilateral_justPath_StoreF6();
									}
									var _this189 = _this188.s6;
									switch(_this189.l) {
									case 0:
										_this189.s0 = v48;
										break;
									case 1:
										_this189.s1 = v48;
										break;
									case 2:
										_this189.s2 = v48;
										break;
									case 3:
										_this189.s3 = v48;
										break;
									case 4:
										_this189.s4 = v48;
										break;
									case 5:
										_this189.s5 = v48;
										break;
									default:
										if(_this189.s6 == null) {
											_this189.s6 = new trilateral_justPath_StoreF6();
										}
										_this189.s6.push(v48);
									}
									_this189.l++;
								}
								_this188.l++;
							} else {
								var _this190 = this.store;
								var v49 = parseFloat(temp9);
								switch(_this190.l) {
								case 0:
									_this190.s0 = v49;
									break;
								case 1:
									_this190.s1 = v49;
									break;
								case 2:
									_this190.s2 = v49;
									break;
								case 3:
									_this190.s3 = v49;
									break;
								case 4:
									_this190.s4 = v49;
									break;
								case 5:
									_this190.s5 = v49;
									break;
								default:
									if(_this190.s6 == null) {
										_this190.s6 = new trilateral_justPath_StoreF6();
									}
									var _this191 = _this190.s6;
									switch(_this191.l) {
									case 0:
										_this191.s0 = v49;
										break;
									case 1:
										_this191.s1 = v49;
										break;
									case 2:
										_this191.s2 = v49;
										break;
									case 3:
										_this191.s3 = v49;
										break;
									case 4:
										_this191.s4 = v49;
										break;
									case 5:
										_this191.s5 = v49;
										break;
									default:
										if(_this191.s6 == null) {
											_this191.s6 = new trilateral_justPath_StoreF6();
										}
										_this191.s6.push(v49);
									}
									_this191.l++;
								}
								_this190.l++;
							}
							temp9 = "";
						}
						break;
					case 45:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this192 = this.store;
								var v50 = parseFloat(temp9);
								switch(_this192.l) {
								case 0:
									_this192.s0 = v50;
									break;
								case 1:
									_this192.s1 = v50;
									break;
								case 2:
									_this192.s2 = v50;
									break;
								case 3:
									_this192.s3 = v50;
									break;
								case 4:
									_this192.s4 = v50;
									break;
								case 5:
									_this192.s5 = v50;
									break;
								default:
									if(_this192.s6 == null) {
										_this192.s6 = new trilateral_justPath_StoreF6();
									}
									var _this193 = _this192.s6;
									switch(_this193.l) {
									case 0:
										_this193.s0 = v50;
										break;
									case 1:
										_this193.s1 = v50;
										break;
									case 2:
										_this193.s2 = v50;
										break;
									case 3:
										_this193.s3 = v50;
										break;
									case 4:
										_this193.s4 = v50;
										break;
									case 5:
										_this193.s5 = v50;
										break;
									default:
										if(_this193.s6 == null) {
											_this193.s6 = new trilateral_justPath_StoreF6();
										}
										_this193.s6.push(v50);
									}
									_this193.l++;
								}
								_this192.l++;
							} else {
								var _this194 = this.store;
								var v51 = parseFloat(temp9);
								switch(_this194.l) {
								case 0:
									_this194.s0 = v51;
									break;
								case 1:
									_this194.s1 = v51;
									break;
								case 2:
									_this194.s2 = v51;
									break;
								case 3:
									_this194.s3 = v51;
									break;
								case 4:
									_this194.s4 = v51;
									break;
								case 5:
									_this194.s5 = v51;
									break;
								default:
									if(_this194.s6 == null) {
										_this194.s6 = new trilateral_justPath_StoreF6();
									}
									var _this195 = _this194.s6;
									switch(_this195.l) {
									case 0:
										_this195.s0 = v51;
										break;
									case 1:
										_this195.s1 = v51;
										break;
									case 2:
										_this195.s2 = v51;
										break;
									case 3:
										_this195.s3 = v51;
										break;
									case 4:
										_this195.s4 = v51;
										break;
									case 5:
										_this195.s5 = v51;
										break;
									default:
										if(_this195.s6 == null) {
											_this195.s6 = new trilateral_justPath_StoreF6();
										}
										_this195.s6.push(v51);
									}
									_this195.l++;
								}
								_this194.l++;
							}
						}
						temp9 = "-";
						break;
					case 46:
						temp9 += ".";
						break;
					case 48:
						temp9 += "0";
						break;
					case 49:
						temp9 += "1";
						break;
					case 50:
						temp9 += "2";
						break;
					case 51:
						temp9 += "3";
						break;
					case 52:
						temp9 += "4";
						break;
					case 53:
						temp9 += "5";
						break;
					case 54:
						temp9 += "6";
						break;
					case 55:
						temp9 += "7";
						break;
					case 56:
						temp9 += "8";
						break;
					case 57:
						temp9 += "9";
						break;
					default:
						if(temp9 != "") {
							if((this.store.l & 1) == 0) {
								var _this196 = this.store;
								var v52 = parseFloat(temp9);
								switch(_this196.l) {
								case 0:
									_this196.s0 = v52;
									break;
								case 1:
									_this196.s1 = v52;
									break;
								case 2:
									_this196.s2 = v52;
									break;
								case 3:
									_this196.s3 = v52;
									break;
								case 4:
									_this196.s4 = v52;
									break;
								case 5:
									_this196.s5 = v52;
									break;
								default:
									if(_this196.s6 == null) {
										_this196.s6 = new trilateral_justPath_StoreF6();
									}
									var _this197 = _this196.s6;
									switch(_this197.l) {
									case 0:
										_this197.s0 = v52;
										break;
									case 1:
										_this197.s1 = v52;
										break;
									case 2:
										_this197.s2 = v52;
										break;
									case 3:
										_this197.s3 = v52;
										break;
									case 4:
										_this197.s4 = v52;
										break;
									case 5:
										_this197.s5 = v52;
										break;
									default:
										if(_this197.s6 == null) {
											_this197.s6 = new trilateral_justPath_StoreF6();
										}
										_this197.s6.push(v52);
									}
									_this197.l++;
								}
								_this196.l++;
							} else {
								var _this198 = this.store;
								var v53 = parseFloat(temp9);
								switch(_this198.l) {
								case 0:
									_this198.s0 = v53;
									break;
								case 1:
									_this198.s1 = v53;
									break;
								case 2:
									_this198.s2 = v53;
									break;
								case 3:
									_this198.s3 = v53;
									break;
								case 4:
									_this198.s4 = v53;
									break;
								case 5:
									_this198.s5 = v53;
									break;
								default:
									if(_this198.s6 == null) {
										_this198.s6 = new trilateral_justPath_StoreF6();
									}
									var _this199 = _this198.s6;
									switch(_this199.l) {
									case 0:
										_this199.s0 = v53;
										break;
									case 1:
										_this199.s1 = v53;
										break;
									case 2:
										_this199.s2 = v53;
										break;
									case 3:
										_this199.s3 = v53;
										break;
									case 4:
										_this199.s4 = v53;
										break;
									case 5:
										_this199.s5 = v53;
										break;
									default:
										if(_this199.s6 == null) {
											_this199.s6 = new trilateral_justPath_StoreF6();
										}
										_this199.s6.push(v53);
									}
									_this199.l++;
								}
								_this198.l++;
							}
							temp9 = "";
						}
						this.pos--;
						exit9 = true;
					}
					if(exit9) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 7) {
					var sx4 = this.lastX;
					var sy4 = this.lastY;
					var _this200 = this.store;
					var out82 = _this200.s0;
					if(_this200.l != 0) {
						_this200.s0 = _this200.s1;
						_this200.s1 = _this200.s2;
						_this200.s2 = _this200.s3;
						_this200.s3 = _this200.s4;
						_this200.s4 = _this200.s5;
						_this200.s5 = null;
						if(_this200.s6 != null) {
							var _this201 = _this200.s6;
							var out83 = _this201.s0;
							if(_this201.l != 0) {
								_this201.s0 = _this201.s1;
								_this201.s1 = _this201.s2;
								_this201.s2 = _this201.s3;
								_this201.s3 = _this201.s4;
								_this201.s4 = _this201.s5;
								_this201.s5 = null;
								if(_this201.s6 != null) {
									_this201.s5 = _this201.s6.shift();
								}
								_this201.l--;
							}
							_this200.s5 = out83;
						}
						_this200.l--;
					}
					var xr2 = out82;
					var _this202 = this.store;
					var out84 = _this202.s0;
					if(_this202.l != 0) {
						_this202.s0 = _this202.s1;
						_this202.s1 = _this202.s2;
						_this202.s2 = _this202.s3;
						_this202.s3 = _this202.s4;
						_this202.s4 = _this202.s5;
						_this202.s5 = null;
						if(_this202.s6 != null) {
							var _this203 = _this202.s6;
							var out85 = _this203.s0;
							if(_this203.l != 0) {
								_this203.s0 = _this203.s1;
								_this203.s1 = _this203.s2;
								_this203.s2 = _this203.s3;
								_this203.s3 = _this203.s4;
								_this203.s4 = _this203.s5;
								_this203.s5 = null;
								if(_this203.s6 != null) {
									_this203.s5 = _this203.s6.shift();
								}
								_this203.l--;
							}
							_this202.s5 = out85;
						}
						_this202.l--;
					}
					var yr2 = out84;
					var _this204 = this.store;
					var out86 = _this204.s0;
					if(_this204.l != 0) {
						_this204.s0 = _this204.s1;
						_this204.s1 = _this204.s2;
						_this204.s2 = _this204.s3;
						_this204.s3 = _this204.s4;
						_this204.s4 = _this204.s5;
						_this204.s5 = null;
						if(_this204.s6 != null) {
							var _this205 = _this204.s6;
							var out87 = _this205.s0;
							if(_this205.l != 0) {
								_this205.s0 = _this205.s1;
								_this205.s1 = _this205.s2;
								_this205.s2 = _this205.s3;
								_this205.s3 = _this205.s4;
								_this205.s4 = _this205.s5;
								_this205.s5 = null;
								if(_this205.s6 != null) {
									_this205.s5 = _this205.s6.shift();
								}
								_this205.l--;
							}
							_this204.s5 = out87;
						}
						_this204.l--;
					}
					var phi4 = out86;
					var _this206 = this.store;
					var out88 = _this206.s0;
					if(_this206.l != 0) {
						_this206.s0 = _this206.s1;
						_this206.s1 = _this206.s2;
						_this206.s2 = _this206.s3;
						_this206.s3 = _this206.s4;
						_this206.s4 = _this206.s5;
						_this206.s5 = null;
						if(_this206.s6 != null) {
							var _this207 = _this206.s6;
							var out89 = _this207.s0;
							if(_this207.l != 0) {
								_this207.s0 = _this207.s1;
								_this207.s1 = _this207.s2;
								_this207.s2 = _this207.s3;
								_this207.s3 = _this207.s4;
								_this207.s4 = _this207.s5;
								_this207.s5 = null;
								if(_this207.s6 != null) {
									var _this208 = _this207.s6;
									var out90 = _this208.s0;
									if(_this208.l != 0) {
										_this208.s0 = _this208.s1;
										_this208.s1 = _this208.s2;
										_this208.s2 = _this208.s3;
										_this208.s3 = _this208.s4;
										_this208.s4 = _this208.s5;
										_this208.s5 = null;
										if(_this208.s6 != null) {
											_this208.s5 = _this208.s6.shift();
										}
										_this208.l--;
									}
									_this207.s5 = out90;
								}
								_this207.l--;
							}
							_this206.s5 = out89;
						}
						_this206.l--;
					}
					var large2 = out88 | 0;
					var _this209 = this.store;
					var out91 = _this209.s0;
					if(_this209.l != 0) {
						_this209.s0 = _this209.s1;
						_this209.s1 = _this209.s2;
						_this209.s2 = _this209.s3;
						_this209.s3 = _this209.s4;
						_this209.s4 = _this209.s5;
						_this209.s5 = null;
						if(_this209.s6 != null) {
							var _this210 = _this209.s6;
							var out92 = _this210.s0;
							if(_this210.l != 0) {
								_this210.s0 = _this210.s1;
								_this210.s1 = _this210.s2;
								_this210.s2 = _this210.s3;
								_this210.s3 = _this210.s4;
								_this210.s4 = _this210.s5;
								_this210.s5 = null;
								if(_this210.s6 != null) {
									var _this211 = _this210.s6;
									var out93 = _this211.s0;
									if(_this211.l != 0) {
										_this211.s0 = _this211.s1;
										_this211.s1 = _this211.s2;
										_this211.s2 = _this211.s3;
										_this211.s3 = _this211.s4;
										_this211.s4 = _this211.s5;
										_this211.s5 = null;
										if(_this211.s6 != null) {
											_this211.s5 = _this211.s6.shift();
										}
										_this211.l--;
									}
									_this210.s5 = out93;
								}
								_this210.l--;
							}
							_this209.s5 = out92;
						}
						_this209.l--;
					}
					var sweep2 = out91 | 0;
					var _this212 = this.store;
					var out94 = _this212.s0;
					if(_this212.l != 0) {
						_this212.s0 = _this212.s1;
						_this212.s1 = _this212.s2;
						_this212.s2 = _this212.s3;
						_this212.s3 = _this212.s4;
						_this212.s4 = _this212.s5;
						_this212.s5 = null;
						if(_this212.s6 != null) {
							var _this213 = _this212.s6;
							var out95 = _this213.s0;
							if(_this213.l != 0) {
								_this213.s0 = _this213.s1;
								_this213.s1 = _this213.s2;
								_this213.s2 = _this213.s3;
								_this213.s3 = _this213.s4;
								_this213.s4 = _this213.s5;
								_this213.s5 = null;
								if(_this213.s6 != null) {
									_this213.s5 = _this213.s6.shift();
								}
								_this213.l--;
							}
							_this212.s5 = out95;
						}
						_this212.l--;
					}
					this.lastX = out94 + this.lastX;
					var _this214 = this.store;
					var out96 = _this214.s0;
					if(_this214.l != 0) {
						_this214.s0 = _this214.s1;
						_this214.s1 = _this214.s2;
						_this214.s2 = _this214.s3;
						_this214.s3 = _this214.s4;
						_this214.s4 = _this214.s5;
						_this214.s5 = null;
						if(_this214.s6 != null) {
							var _this215 = _this214.s6;
							var out97 = _this215.s0;
							if(_this215.l != 0) {
								_this215.s0 = _this215.s1;
								_this215.s1 = _this215.s2;
								_this215.s2 = _this215.s3;
								_this215.s3 = _this215.s4;
								_this215.s4 = _this215.s5;
								_this215.s5 = null;
								if(_this215.s6 != null) {
									_this215.s5 = _this215.s6.shift();
								}
								_this215.l--;
							}
							_this214.s5 = out97;
						}
						_this214.l--;
					}
					this.lastY = out96 + this.lastY;
					var sx5 = sx4;
					var sy5 = sy4;
					var phi5 = phi4;
					var ex2 = this.lastX;
					var ey2 = this.lastY;
					var mx2 = (sx5 - ex2) / 2;
					var my2 = (sy5 - ey2) / 2;
					var ax2 = (sx5 + ex2) / 2;
					var ay2 = (sy5 + ey2) / 2;
					phi5 %= 360;
					phi5 = phi5 * Math.PI / 180;
					var sin2 = Math.sin(phi5);
					var cos2 = Math.cos(phi5);
					var x12 = mx2 * cos2 + my2 * sin2;
					var y12 = -mx2 * sin2 + my2 * cos2;
					var rx2 = Math.abs(xr2);
					var ry2 = Math.abs(yr2);
					var rxx2 = rx2 * rx2;
					var ryy2 = ry2 * ry2;
					var xx12 = x12 * x12;
					var yy12 = y12 * y12;
					var check2 = xx12 / rxx2 + yy12 / ryy2;
					if(check2 > 1) {
						rx2 *= Math.sqrt(check2);
						ry2 *= Math.sqrt(check2);
						rxx2 = rx2 * rx2;
						ryy2 = ry2 * ry2;
					}
					var sign2 = large2 == sweep2 ? -1 : 1;
					var sq2 = (rxx2 * ryy2 - rxx2 * yy12 - ryy2 * xx12) / (rxx2 * yy12 + ryy2 * xx12);
					sq2 = sq2 < 0 ? 0 : sq2;
					var coef2 = sign2 * Math.sqrt(sq2);
					var cx12 = coef2 * rx2 * y12 / ry2;
					var cy12 = -coef2 * ry2 * x12 / rx2;
					var cx3 = ax2 + cx12 * cos2 - cy12 * sin2;
					var cy3 = ay2 + cx12 * sin2 + cy12 * cos2;
					var phiSin2 = Math.sin(-phi5);
					var phiCos2 = Math.cos(-phi5);
					sx5 -= cx3;
					sy5 -= cy3;
					var dx4 = sx5;
					var dy4 = sy5;
					sx5 = dx4 * phiCos2 - dy4 * phiSin2;
					sy5 = dx4 * phiSin2 + dy4 * phiCos2;
					sx5 += cx3;
					sy5 += cy3;
					ex2 -= cx3;
					ey2 -= cy3;
					var dx5 = ex2;
					var dy5 = ey2;
					ex2 = dx5 * phiCos2 - dy5 * phiSin2;
					ey2 = dx5 * phiSin2 + dy5 * phiCos2;
					ex2 += cx3;
					ey2 += cy3;
					var alpha2 = Math.atan2(rx2 * (cy3 - sy5),ry2 * (cx3 - sx5)) - Math.PI;
					var omega2 = Math.atan2(rx2 * (cy3 - ey2),ry2 * (cx3 - ex2)) - Math.PI;
					var delta2 = alpha2 - omega2;
					if(sweep2 == 1 && delta2 > 0) {
						delta2 -= 2 * Math.PI;
					} else if(sweep2 == 0 && delta2 < 0) {
						delta2 += 2 * Math.PI;
					}
					var this3 = { cx : cx3, cy : cy3, rx : rx2, ry : ry2, alpha : alpha2, omega : omega2, delta : -delta2, phi : phi5, phiSin : Math.sin(phi5), phiCos : Math.cos(phi5)};
					var ellipseData2 = this3;
					var ellipse2 = new trilateral_justPath_EllipseArc(ellipseData2);
					ellipse2.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
				} else if(this.store.l > 7) {
					while(this.store.l > 6) {
						var sx6 = this.lastX;
						var sy6 = this.lastY;
						var _this216 = this.store;
						var out98 = _this216.s0;
						if(_this216.l != 0) {
							_this216.s0 = _this216.s1;
							_this216.s1 = _this216.s2;
							_this216.s2 = _this216.s3;
							_this216.s3 = _this216.s4;
							_this216.s4 = _this216.s5;
							_this216.s5 = null;
							if(_this216.s6 != null) {
								var _this217 = _this216.s6;
								var out99 = _this217.s0;
								if(_this217.l != 0) {
									_this217.s0 = _this217.s1;
									_this217.s1 = _this217.s2;
									_this217.s2 = _this217.s3;
									_this217.s3 = _this217.s4;
									_this217.s4 = _this217.s5;
									_this217.s5 = null;
									if(_this217.s6 != null) {
										_this217.s5 = _this217.s6.shift();
									}
									_this217.l--;
								}
								_this216.s5 = out99;
							}
							_this216.l--;
						}
						var xr3 = out98;
						var _this218 = this.store;
						var out100 = _this218.s0;
						if(_this218.l != 0) {
							_this218.s0 = _this218.s1;
							_this218.s1 = _this218.s2;
							_this218.s2 = _this218.s3;
							_this218.s3 = _this218.s4;
							_this218.s4 = _this218.s5;
							_this218.s5 = null;
							if(_this218.s6 != null) {
								var _this219 = _this218.s6;
								var out101 = _this219.s0;
								if(_this219.l != 0) {
									_this219.s0 = _this219.s1;
									_this219.s1 = _this219.s2;
									_this219.s2 = _this219.s3;
									_this219.s3 = _this219.s4;
									_this219.s4 = _this219.s5;
									_this219.s5 = null;
									if(_this219.s6 != null) {
										_this219.s5 = _this219.s6.shift();
									}
									_this219.l--;
								}
								_this218.s5 = out101;
							}
							_this218.l--;
						}
						var yr3 = out100;
						var _this220 = this.store;
						var out102 = _this220.s0;
						if(_this220.l != 0) {
							_this220.s0 = _this220.s1;
							_this220.s1 = _this220.s2;
							_this220.s2 = _this220.s3;
							_this220.s3 = _this220.s4;
							_this220.s4 = _this220.s5;
							_this220.s5 = null;
							if(_this220.s6 != null) {
								var _this221 = _this220.s6;
								var out103 = _this221.s0;
								if(_this221.l != 0) {
									_this221.s0 = _this221.s1;
									_this221.s1 = _this221.s2;
									_this221.s2 = _this221.s3;
									_this221.s3 = _this221.s4;
									_this221.s4 = _this221.s5;
									_this221.s5 = null;
									if(_this221.s6 != null) {
										_this221.s5 = _this221.s6.shift();
									}
									_this221.l--;
								}
								_this220.s5 = out103;
							}
							_this220.l--;
						}
						var phi6 = out102;
						var _this222 = this.store;
						var out104 = _this222.s0;
						if(_this222.l != 0) {
							_this222.s0 = _this222.s1;
							_this222.s1 = _this222.s2;
							_this222.s2 = _this222.s3;
							_this222.s3 = _this222.s4;
							_this222.s4 = _this222.s5;
							_this222.s5 = null;
							if(_this222.s6 != null) {
								var _this223 = _this222.s6;
								var out105 = _this223.s0;
								if(_this223.l != 0) {
									_this223.s0 = _this223.s1;
									_this223.s1 = _this223.s2;
									_this223.s2 = _this223.s3;
									_this223.s3 = _this223.s4;
									_this223.s4 = _this223.s5;
									_this223.s5 = null;
									if(_this223.s6 != null) {
										var _this224 = _this223.s6;
										var out106 = _this224.s0;
										if(_this224.l != 0) {
											_this224.s0 = _this224.s1;
											_this224.s1 = _this224.s2;
											_this224.s2 = _this224.s3;
											_this224.s3 = _this224.s4;
											_this224.s4 = _this224.s5;
											_this224.s5 = null;
											if(_this224.s6 != null) {
												_this224.s5 = _this224.s6.shift();
											}
											_this224.l--;
										}
										_this223.s5 = out106;
									}
									_this223.l--;
								}
								_this222.s5 = out105;
							}
							_this222.l--;
						}
						var large3 = out104 | 0;
						var _this225 = this.store;
						var out107 = _this225.s0;
						if(_this225.l != 0) {
							_this225.s0 = _this225.s1;
							_this225.s1 = _this225.s2;
							_this225.s2 = _this225.s3;
							_this225.s3 = _this225.s4;
							_this225.s4 = _this225.s5;
							_this225.s5 = null;
							if(_this225.s6 != null) {
								var _this226 = _this225.s6;
								var out108 = _this226.s0;
								if(_this226.l != 0) {
									_this226.s0 = _this226.s1;
									_this226.s1 = _this226.s2;
									_this226.s2 = _this226.s3;
									_this226.s3 = _this226.s4;
									_this226.s4 = _this226.s5;
									_this226.s5 = null;
									if(_this226.s6 != null) {
										var _this227 = _this226.s6;
										var out109 = _this227.s0;
										if(_this227.l != 0) {
											_this227.s0 = _this227.s1;
											_this227.s1 = _this227.s2;
											_this227.s2 = _this227.s3;
											_this227.s3 = _this227.s4;
											_this227.s4 = _this227.s5;
											_this227.s5 = null;
											if(_this227.s6 != null) {
												_this227.s5 = _this227.s6.shift();
											}
											_this227.l--;
										}
										_this226.s5 = out109;
									}
									_this226.l--;
								}
								_this225.s5 = out108;
							}
							_this225.l--;
						}
						var sweep3 = out107 | 0;
						var _this228 = this.store;
						var out110 = _this228.s0;
						if(_this228.l != 0) {
							_this228.s0 = _this228.s1;
							_this228.s1 = _this228.s2;
							_this228.s2 = _this228.s3;
							_this228.s3 = _this228.s4;
							_this228.s4 = _this228.s5;
							_this228.s5 = null;
							if(_this228.s6 != null) {
								var _this229 = _this228.s6;
								var out111 = _this229.s0;
								if(_this229.l != 0) {
									_this229.s0 = _this229.s1;
									_this229.s1 = _this229.s2;
									_this229.s2 = _this229.s3;
									_this229.s3 = _this229.s4;
									_this229.s4 = _this229.s5;
									_this229.s5 = null;
									if(_this229.s6 != null) {
										_this229.s5 = _this229.s6.shift();
									}
									_this229.l--;
								}
								_this228.s5 = out111;
							}
							_this228.l--;
						}
						this.lastX = out110 + this.lastX;
						var _this230 = this.store;
						var out112 = _this230.s0;
						if(_this230.l != 0) {
							_this230.s0 = _this230.s1;
							_this230.s1 = _this230.s2;
							_this230.s2 = _this230.s3;
							_this230.s3 = _this230.s4;
							_this230.s4 = _this230.s5;
							_this230.s5 = null;
							if(_this230.s6 != null) {
								var _this231 = _this230.s6;
								var out113 = _this231.s0;
								if(_this231.l != 0) {
									_this231.s0 = _this231.s1;
									_this231.s1 = _this231.s2;
									_this231.s2 = _this231.s3;
									_this231.s3 = _this231.s4;
									_this231.s4 = _this231.s5;
									_this231.s5 = null;
									if(_this231.s6 != null) {
										_this231.s5 = _this231.s6.shift();
									}
									_this231.l--;
								}
								_this230.s5 = out113;
							}
							_this230.l--;
						}
						this.lastY = out112 + this.lastY;
						var sx7 = sx6;
						var sy7 = sy6;
						var phi7 = phi6;
						var ex3 = this.lastX;
						var ey3 = this.lastY;
						var mx3 = (sx7 - ex3) / 2;
						var my3 = (sy7 - ey3) / 2;
						var ax3 = (sx7 + ex3) / 2;
						var ay3 = (sy7 + ey3) / 2;
						phi7 %= 360;
						phi7 = phi7 * Math.PI / 180;
						var sin3 = Math.sin(phi7);
						var cos3 = Math.cos(phi7);
						var x13 = mx3 * cos3 + my3 * sin3;
						var y13 = -mx3 * sin3 + my3 * cos3;
						var rx3 = Math.abs(xr3);
						var ry3 = Math.abs(yr3);
						var rxx3 = rx3 * rx3;
						var ryy3 = ry3 * ry3;
						var xx13 = x13 * x13;
						var yy13 = y13 * y13;
						var check3 = xx13 / rxx3 + yy13 / ryy3;
						if(check3 > 1) {
							rx3 *= Math.sqrt(check3);
							ry3 *= Math.sqrt(check3);
							rxx3 = rx3 * rx3;
							ryy3 = ry3 * ry3;
						}
						var sign3 = large3 == sweep3 ? -1 : 1;
						var sq3 = (rxx3 * ryy3 - rxx3 * yy13 - ryy3 * xx13) / (rxx3 * yy13 + ryy3 * xx13);
						sq3 = sq3 < 0 ? 0 : sq3;
						var coef3 = sign3 * Math.sqrt(sq3);
						var cx13 = coef3 * rx3 * y13 / ry3;
						var cy13 = -coef3 * ry3 * x13 / rx3;
						var cx4 = ax3 + cx13 * cos3 - cy13 * sin3;
						var cy4 = ay3 + cx13 * sin3 + cy13 * cos3;
						var phiSin3 = Math.sin(-phi7);
						var phiCos3 = Math.cos(-phi7);
						sx7 -= cx4;
						sy7 -= cy4;
						var dx6 = sx7;
						var dy6 = sy7;
						sx7 = dx6 * phiCos3 - dy6 * phiSin3;
						sy7 = dx6 * phiSin3 + dy6 * phiCos3;
						sx7 += cx4;
						sy7 += cy4;
						ex3 -= cx4;
						ey3 -= cy4;
						var dx7 = ex3;
						var dy7 = ey3;
						ex3 = dx7 * phiCos3 - dy7 * phiSin3;
						ey3 = dx7 * phiSin3 + dy7 * phiCos3;
						ex3 += cx4;
						ey3 += cy4;
						var alpha3 = Math.atan2(rx3 * (cy4 - sy7),ry3 * (cx4 - sx7)) - Math.PI;
						var omega3 = Math.atan2(rx3 * (cy4 - ey3),ry3 * (cx4 - ex3)) - Math.PI;
						var delta3 = alpha3 - omega3;
						if(sweep3 == 1 && delta3 > 0) {
							delta3 -= 2 * Math.PI;
						} else if(sweep3 == 0 && delta3 < 0) {
							delta3 += 2 * Math.PI;
						}
						var this4 = { cx : cx4, cy : cy4, rx : rx3, ry : ry3, alpha : alpha3, omega : omega3, delta : -delta3, phi : phi7, phiSin : Math.sin(phi7), phiCos : Math.cos(phi7)};
						var ellipseData3 = this4;
						var ellipse3 = new trilateral_justPath_EllipseArc(ellipseData3);
						ellipse3.lineRender(($_=this.pathContext,$bind($_,$_.moveTo)),($_=this.pathContext,$bind($_,$_.lineTo)),Math.PI / 18);
					}
				}
				break;
			case 99:
				var _this232 = this.store;
				_this232.l = 0;
				_this232.s0 = null;
				_this232.s1 = null;
				_this232.s2 = null;
				_this232.s3 = null;
				_this232.s4 = null;
				_this232.s5 = null;
				_this232.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count11 = 0;
				var temp10 = "";
				var exit10 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this233 = this.store;
								var v54 = parseFloat(temp10);
								switch(_this233.l) {
								case 0:
									_this233.s0 = v54;
									break;
								case 1:
									_this233.s1 = v54;
									break;
								case 2:
									_this233.s2 = v54;
									break;
								case 3:
									_this233.s3 = v54;
									break;
								case 4:
									_this233.s4 = v54;
									break;
								case 5:
									_this233.s5 = v54;
									break;
								default:
									if(_this233.s6 == null) {
										_this233.s6 = new trilateral_justPath_StoreF6();
									}
									var _this234 = _this233.s6;
									switch(_this234.l) {
									case 0:
										_this234.s0 = v54;
										break;
									case 1:
										_this234.s1 = v54;
										break;
									case 2:
										_this234.s2 = v54;
										break;
									case 3:
										_this234.s3 = v54;
										break;
									case 4:
										_this234.s4 = v54;
										break;
									case 5:
										_this234.s5 = v54;
										break;
									default:
										if(_this234.s6 == null) {
											_this234.s6 = new trilateral_justPath_StoreF6();
										}
										_this234.s6.push(v54);
									}
									_this234.l++;
								}
								_this233.l++;
							} else {
								var _this235 = this.store;
								var v55 = parseFloat(temp10);
								switch(_this235.l) {
								case 0:
									_this235.s0 = v55;
									break;
								case 1:
									_this235.s1 = v55;
									break;
								case 2:
									_this235.s2 = v55;
									break;
								case 3:
									_this235.s3 = v55;
									break;
								case 4:
									_this235.s4 = v55;
									break;
								case 5:
									_this235.s5 = v55;
									break;
								default:
									if(_this235.s6 == null) {
										_this235.s6 = new trilateral_justPath_StoreF6();
									}
									var _this236 = _this235.s6;
									switch(_this236.l) {
									case 0:
										_this236.s0 = v55;
										break;
									case 1:
										_this236.s1 = v55;
										break;
									case 2:
										_this236.s2 = v55;
										break;
									case 3:
										_this236.s3 = v55;
										break;
									case 4:
										_this236.s4 = v55;
										break;
									case 5:
										_this236.s5 = v55;
										break;
									default:
										if(_this236.s6 == null) {
											_this236.s6 = new trilateral_justPath_StoreF6();
										}
										_this236.s6.push(v55);
									}
									_this236.l++;
								}
								_this235.l++;
							}
							temp10 = "";
						}
						break;
					case 45:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this237 = this.store;
								var v56 = parseFloat(temp10);
								switch(_this237.l) {
								case 0:
									_this237.s0 = v56;
									break;
								case 1:
									_this237.s1 = v56;
									break;
								case 2:
									_this237.s2 = v56;
									break;
								case 3:
									_this237.s3 = v56;
									break;
								case 4:
									_this237.s4 = v56;
									break;
								case 5:
									_this237.s5 = v56;
									break;
								default:
									if(_this237.s6 == null) {
										_this237.s6 = new trilateral_justPath_StoreF6();
									}
									var _this238 = _this237.s6;
									switch(_this238.l) {
									case 0:
										_this238.s0 = v56;
										break;
									case 1:
										_this238.s1 = v56;
										break;
									case 2:
										_this238.s2 = v56;
										break;
									case 3:
										_this238.s3 = v56;
										break;
									case 4:
										_this238.s4 = v56;
										break;
									case 5:
										_this238.s5 = v56;
										break;
									default:
										if(_this238.s6 == null) {
											_this238.s6 = new trilateral_justPath_StoreF6();
										}
										_this238.s6.push(v56);
									}
									_this238.l++;
								}
								_this237.l++;
							} else {
								var _this239 = this.store;
								var v57 = parseFloat(temp10);
								switch(_this239.l) {
								case 0:
									_this239.s0 = v57;
									break;
								case 1:
									_this239.s1 = v57;
									break;
								case 2:
									_this239.s2 = v57;
									break;
								case 3:
									_this239.s3 = v57;
									break;
								case 4:
									_this239.s4 = v57;
									break;
								case 5:
									_this239.s5 = v57;
									break;
								default:
									if(_this239.s6 == null) {
										_this239.s6 = new trilateral_justPath_StoreF6();
									}
									var _this240 = _this239.s6;
									switch(_this240.l) {
									case 0:
										_this240.s0 = v57;
										break;
									case 1:
										_this240.s1 = v57;
										break;
									case 2:
										_this240.s2 = v57;
										break;
									case 3:
										_this240.s3 = v57;
										break;
									case 4:
										_this240.s4 = v57;
										break;
									case 5:
										_this240.s5 = v57;
										break;
									default:
										if(_this240.s6 == null) {
											_this240.s6 = new trilateral_justPath_StoreF6();
										}
										_this240.s6.push(v57);
									}
									_this240.l++;
								}
								_this239.l++;
							}
						}
						temp10 = "-";
						break;
					case 46:
						temp10 += ".";
						break;
					case 48:
						temp10 += "0";
						break;
					case 49:
						temp10 += "1";
						break;
					case 50:
						temp10 += "2";
						break;
					case 51:
						temp10 += "3";
						break;
					case 52:
						temp10 += "4";
						break;
					case 53:
						temp10 += "5";
						break;
					case 54:
						temp10 += "6";
						break;
					case 55:
						temp10 += "7";
						break;
					case 56:
						temp10 += "8";
						break;
					case 57:
						temp10 += "9";
						break;
					default:
						if(temp10 != "") {
							if((this.store.l & 1) == 0) {
								var _this241 = this.store;
								var v58 = parseFloat(temp10);
								switch(_this241.l) {
								case 0:
									_this241.s0 = v58;
									break;
								case 1:
									_this241.s1 = v58;
									break;
								case 2:
									_this241.s2 = v58;
									break;
								case 3:
									_this241.s3 = v58;
									break;
								case 4:
									_this241.s4 = v58;
									break;
								case 5:
									_this241.s5 = v58;
									break;
								default:
									if(_this241.s6 == null) {
										_this241.s6 = new trilateral_justPath_StoreF6();
									}
									var _this242 = _this241.s6;
									switch(_this242.l) {
									case 0:
										_this242.s0 = v58;
										break;
									case 1:
										_this242.s1 = v58;
										break;
									case 2:
										_this242.s2 = v58;
										break;
									case 3:
										_this242.s3 = v58;
										break;
									case 4:
										_this242.s4 = v58;
										break;
									case 5:
										_this242.s5 = v58;
										break;
									default:
										if(_this242.s6 == null) {
											_this242.s6 = new trilateral_justPath_StoreF6();
										}
										_this242.s6.push(v58);
									}
									_this242.l++;
								}
								_this241.l++;
							} else {
								var _this243 = this.store;
								var v59 = parseFloat(temp10);
								switch(_this243.l) {
								case 0:
									_this243.s0 = v59;
									break;
								case 1:
									_this243.s1 = v59;
									break;
								case 2:
									_this243.s2 = v59;
									break;
								case 3:
									_this243.s3 = v59;
									break;
								case 4:
									_this243.s4 = v59;
									break;
								case 5:
									_this243.s5 = v59;
									break;
								default:
									if(_this243.s6 == null) {
										_this243.s6 = new trilateral_justPath_StoreF6();
									}
									var _this244 = _this243.s6;
									switch(_this244.l) {
									case 0:
										_this244.s0 = v59;
										break;
									case 1:
										_this244.s1 = v59;
										break;
									case 2:
										_this244.s2 = v59;
										break;
									case 3:
										_this244.s3 = v59;
										break;
									case 4:
										_this244.s4 = v59;
										break;
									case 5:
										_this244.s5 = v59;
										break;
									default:
										if(_this244.s6 == null) {
											_this244.s6 = new trilateral_justPath_StoreF6();
										}
										_this244.s6.push(v59);
									}
									_this244.l++;
								}
								_this243.l++;
							}
							temp10 = "";
						}
						this.pos--;
						exit10 = true;
					}
					if(exit10) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX3 = this.store.s0 + this.lastX;
					var firstY3 = this.store.s1 + this.lastY;
					this.controlX = this.store.s2 + this.lastX;
					this.controlY = this.store.s3 + this.lastY;
					this.lastX = this.store.s4 + this.lastX;
					this.lastY = this.store.s5 + this.lastY;
					this.pathContext.curveTo(firstX3,firstY3,this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this245 = this.store;
						var out114 = _this245.s0;
						if(_this245.l != 0) {
							_this245.s0 = _this245.s1;
							_this245.s1 = _this245.s2;
							_this245.s2 = _this245.s3;
							_this245.s3 = _this245.s4;
							_this245.s4 = _this245.s5;
							_this245.s5 = null;
							if(_this245.s6 != null) {
								var _this246 = _this245.s6;
								var out115 = _this246.s0;
								if(_this246.l != 0) {
									_this246.s0 = _this246.s1;
									_this246.s1 = _this246.s2;
									_this246.s2 = _this246.s3;
									_this246.s3 = _this246.s4;
									_this246.s4 = _this246.s5;
									_this246.s5 = null;
									if(_this246.s6 != null) {
										_this246.s5 = _this246.s6.shift();
									}
									_this246.l--;
								}
								_this245.s5 = out115;
							}
							_this245.l--;
						}
						var firstX4 = out114 + this.lastX;
						var _this247 = this.store;
						var out116 = _this247.s0;
						if(_this247.l != 0) {
							_this247.s0 = _this247.s1;
							_this247.s1 = _this247.s2;
							_this247.s2 = _this247.s3;
							_this247.s3 = _this247.s4;
							_this247.s4 = _this247.s5;
							_this247.s5 = null;
							if(_this247.s6 != null) {
								var _this248 = _this247.s6;
								var out117 = _this248.s0;
								if(_this248.l != 0) {
									_this248.s0 = _this248.s1;
									_this248.s1 = _this248.s2;
									_this248.s2 = _this248.s3;
									_this248.s3 = _this248.s4;
									_this248.s4 = _this248.s5;
									_this248.s5 = null;
									if(_this248.s6 != null) {
										_this248.s5 = _this248.s6.shift();
									}
									_this248.l--;
								}
								_this247.s5 = out117;
							}
							_this247.l--;
						}
						var firstY4 = out116 + this.lastY;
						var _this249 = this.store;
						var out118 = _this249.s0;
						if(_this249.l != 0) {
							_this249.s0 = _this249.s1;
							_this249.s1 = _this249.s2;
							_this249.s2 = _this249.s3;
							_this249.s3 = _this249.s4;
							_this249.s4 = _this249.s5;
							_this249.s5 = null;
							if(_this249.s6 != null) {
								var _this250 = _this249.s6;
								var out119 = _this250.s0;
								if(_this250.l != 0) {
									_this250.s0 = _this250.s1;
									_this250.s1 = _this250.s2;
									_this250.s2 = _this250.s3;
									_this250.s3 = _this250.s4;
									_this250.s4 = _this250.s5;
									_this250.s5 = null;
									if(_this250.s6 != null) {
										_this250.s5 = _this250.s6.shift();
									}
									_this250.l--;
								}
								_this249.s5 = out119;
							}
							_this249.l--;
						}
						this.controlX = out118 + this.lastX;
						var _this251 = this.store;
						var out120 = _this251.s0;
						if(_this251.l != 0) {
							_this251.s0 = _this251.s1;
							_this251.s1 = _this251.s2;
							_this251.s2 = _this251.s3;
							_this251.s3 = _this251.s4;
							_this251.s4 = _this251.s5;
							_this251.s5 = null;
							if(_this251.s6 != null) {
								var _this252 = _this251.s6;
								var out121 = _this252.s0;
								if(_this252.l != 0) {
									_this252.s0 = _this252.s1;
									_this252.s1 = _this252.s2;
									_this252.s2 = _this252.s3;
									_this252.s3 = _this252.s4;
									_this252.s4 = _this252.s5;
									_this252.s5 = null;
									if(_this252.s6 != null) {
										_this252.s5 = _this252.s6.shift();
									}
									_this252.l--;
								}
								_this251.s5 = out121;
							}
							_this251.l--;
						}
						this.controlY = out120 + this.lastY;
						var _this253 = this.store;
						var out122 = _this253.s0;
						if(_this253.l != 0) {
							_this253.s0 = _this253.s1;
							_this253.s1 = _this253.s2;
							_this253.s2 = _this253.s3;
							_this253.s3 = _this253.s4;
							_this253.s4 = _this253.s5;
							_this253.s5 = null;
							if(_this253.s6 != null) {
								var _this254 = _this253.s6;
								var out123 = _this254.s0;
								if(_this254.l != 0) {
									_this254.s0 = _this254.s1;
									_this254.s1 = _this254.s2;
									_this254.s2 = _this254.s3;
									_this254.s3 = _this254.s4;
									_this254.s4 = _this254.s5;
									_this254.s5 = null;
									if(_this254.s6 != null) {
										_this254.s5 = _this254.s6.shift();
									}
									_this254.l--;
								}
								_this253.s5 = out123;
							}
							_this253.l--;
						}
						this.lastX = out122 + this.lastX;
						var _this255 = this.store;
						var out124 = _this255.s0;
						if(_this255.l != 0) {
							_this255.s0 = _this255.s1;
							_this255.s1 = _this255.s2;
							_this255.s2 = _this255.s3;
							_this255.s3 = _this255.s4;
							_this255.s4 = _this255.s5;
							_this255.s5 = null;
							if(_this255.s6 != null) {
								var _this256 = _this255.s6;
								var out125 = _this256.s0;
								if(_this256.l != 0) {
									_this256.s0 = _this256.s1;
									_this256.s1 = _this256.s2;
									_this256.s2 = _this256.s3;
									_this256.s3 = _this256.s4;
									_this256.s4 = _this256.s5;
									_this256.s5 = null;
									if(_this256.s6 != null) {
										_this256.s5 = _this256.s6.shift();
									}
									_this256.l--;
								}
								_this255.s5 = out125;
							}
							_this255.l--;
						}
						this.lastY = out124 + this.lastY;
						this.pathContext.curveTo(firstX4,firstY4,this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 104:
				var _this257 = this.store;
				_this257.l = 0;
				_this257.s0 = null;
				_this257.s1 = null;
				_this257.s2 = null;
				_this257.s3 = null;
				_this257.s4 = null;
				_this257.s5 = null;
				_this257.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count12 = 0;
				var temp11 = "";
				var exit11 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp11 != "") {
							var _this258 = this.store;
							var v60 = parseFloat(temp11);
							switch(_this258.l) {
							case 0:
								_this258.s0 = v60;
								break;
							case 1:
								_this258.s1 = v60;
								break;
							case 2:
								_this258.s2 = v60;
								break;
							case 3:
								_this258.s3 = v60;
								break;
							case 4:
								_this258.s4 = v60;
								break;
							case 5:
								_this258.s5 = v60;
								break;
							default:
								if(_this258.s6 == null) {
									_this258.s6 = new trilateral_justPath_StoreF6();
								}
								var _this259 = _this258.s6;
								switch(_this259.l) {
								case 0:
									_this259.s0 = v60;
									break;
								case 1:
									_this259.s1 = v60;
									break;
								case 2:
									_this259.s2 = v60;
									break;
								case 3:
									_this259.s3 = v60;
									break;
								case 4:
									_this259.s4 = v60;
									break;
								case 5:
									_this259.s5 = v60;
									break;
								default:
									if(_this259.s6 == null) {
										_this259.s6 = new trilateral_justPath_StoreF6();
									}
									_this259.s6.push(v60);
								}
								_this259.l++;
							}
							_this258.l++;
							temp11 = "";
						}
						break;
					case 45:
						if(temp11 != "") {
							var _this260 = this.store;
							var v61 = parseFloat(temp11);
							switch(_this260.l) {
							case 0:
								_this260.s0 = v61;
								break;
							case 1:
								_this260.s1 = v61;
								break;
							case 2:
								_this260.s2 = v61;
								break;
							case 3:
								_this260.s3 = v61;
								break;
							case 4:
								_this260.s4 = v61;
								break;
							case 5:
								_this260.s5 = v61;
								break;
							default:
								if(_this260.s6 == null) {
									_this260.s6 = new trilateral_justPath_StoreF6();
								}
								var _this261 = _this260.s6;
								switch(_this261.l) {
								case 0:
									_this261.s0 = v61;
									break;
								case 1:
									_this261.s1 = v61;
									break;
								case 2:
									_this261.s2 = v61;
									break;
								case 3:
									_this261.s3 = v61;
									break;
								case 4:
									_this261.s4 = v61;
									break;
								case 5:
									_this261.s5 = v61;
									break;
								default:
									if(_this261.s6 == null) {
										_this261.s6 = new trilateral_justPath_StoreF6();
									}
									_this261.s6.push(v61);
								}
								_this261.l++;
							}
							_this260.l++;
						}
						temp11 = "-";
						break;
					case 46:
						temp11 += ".";
						break;
					case 48:
						temp11 += "0";
						break;
					case 49:
						temp11 += "1";
						break;
					case 50:
						temp11 += "2";
						break;
					case 51:
						temp11 += "3";
						break;
					case 52:
						temp11 += "4";
						break;
					case 53:
						temp11 += "5";
						break;
					case 54:
						temp11 += "6";
						break;
					case 55:
						temp11 += "7";
						break;
					case 56:
						temp11 += "8";
						break;
					case 57:
						temp11 += "9";
						break;
					default:
						if(temp11 != "") {
							var _this262 = this.store;
							var v62 = parseFloat(temp11);
							switch(_this262.l) {
							case 0:
								_this262.s0 = v62;
								break;
							case 1:
								_this262.s1 = v62;
								break;
							case 2:
								_this262.s2 = v62;
								break;
							case 3:
								_this262.s3 = v62;
								break;
							case 4:
								_this262.s4 = v62;
								break;
							case 5:
								_this262.s5 = v62;
								break;
							default:
								if(_this262.s6 == null) {
									_this262.s6 = new trilateral_justPath_StoreF6();
								}
								var _this263 = _this262.s6;
								switch(_this263.l) {
								case 0:
									_this263.s0 = v62;
									break;
								case 1:
									_this263.s1 = v62;
									break;
								case 2:
									_this263.s2 = v62;
									break;
								case 3:
									_this263.s3 = v62;
									break;
								case 4:
									_this263.s4 = v62;
									break;
								case 5:
									_this263.s5 = v62;
									break;
								default:
									if(_this263.s6 == null) {
										_this263.s6 = new trilateral_justPath_StoreF6();
									}
									_this263.s6.push(v62);
								}
								_this263.l++;
							}
							_this262.l++;
							temp11 = "";
						}
						this.pos--;
						exit11 = true;
					}
					if(exit11) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastX += this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var tmp = this.lastX;
						var _this264 = this.store;
						var out126 = _this264.s0;
						if(_this264.l != 0) {
							_this264.s0 = _this264.s1;
							_this264.s1 = _this264.s2;
							_this264.s2 = _this264.s3;
							_this264.s3 = _this264.s4;
							_this264.s4 = _this264.s5;
							_this264.s5 = null;
							if(_this264.s6 != null) {
								var _this265 = _this264.s6;
								var out127 = _this265.s0;
								if(_this265.l != 0) {
									_this265.s0 = _this265.s1;
									_this265.s1 = _this265.s2;
									_this265.s2 = _this265.s3;
									_this265.s3 = _this265.s4;
									_this265.s4 = _this265.s5;
									_this265.s5 = null;
									if(_this265.s6 != null) {
										_this265.s5 = _this265.s6.shift();
									}
									_this265.l--;
								}
								_this264.s5 = out127;
							}
							_this264.l--;
						}
						this.lastX = tmp + out126;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 108:
				var _this266 = this.store;
				_this266.l = 0;
				_this266.s0 = null;
				_this266.s1 = null;
				_this266.s2 = null;
				_this266.s3 = null;
				_this266.s4 = null;
				_this266.s5 = null;
				_this266.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count13 = 0;
				var temp12 = "";
				var exit12 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this267 = this.store;
								var v63 = parseFloat(temp12);
								switch(_this267.l) {
								case 0:
									_this267.s0 = v63;
									break;
								case 1:
									_this267.s1 = v63;
									break;
								case 2:
									_this267.s2 = v63;
									break;
								case 3:
									_this267.s3 = v63;
									break;
								case 4:
									_this267.s4 = v63;
									break;
								case 5:
									_this267.s5 = v63;
									break;
								default:
									if(_this267.s6 == null) {
										_this267.s6 = new trilateral_justPath_StoreF6();
									}
									var _this268 = _this267.s6;
									switch(_this268.l) {
									case 0:
										_this268.s0 = v63;
										break;
									case 1:
										_this268.s1 = v63;
										break;
									case 2:
										_this268.s2 = v63;
										break;
									case 3:
										_this268.s3 = v63;
										break;
									case 4:
										_this268.s4 = v63;
										break;
									case 5:
										_this268.s5 = v63;
										break;
									default:
										if(_this268.s6 == null) {
											_this268.s6 = new trilateral_justPath_StoreF6();
										}
										_this268.s6.push(v63);
									}
									_this268.l++;
								}
								_this267.l++;
							} else {
								var _this269 = this.store;
								var v64 = parseFloat(temp12);
								switch(_this269.l) {
								case 0:
									_this269.s0 = v64;
									break;
								case 1:
									_this269.s1 = v64;
									break;
								case 2:
									_this269.s2 = v64;
									break;
								case 3:
									_this269.s3 = v64;
									break;
								case 4:
									_this269.s4 = v64;
									break;
								case 5:
									_this269.s5 = v64;
									break;
								default:
									if(_this269.s6 == null) {
										_this269.s6 = new trilateral_justPath_StoreF6();
									}
									var _this270 = _this269.s6;
									switch(_this270.l) {
									case 0:
										_this270.s0 = v64;
										break;
									case 1:
										_this270.s1 = v64;
										break;
									case 2:
										_this270.s2 = v64;
										break;
									case 3:
										_this270.s3 = v64;
										break;
									case 4:
										_this270.s4 = v64;
										break;
									case 5:
										_this270.s5 = v64;
										break;
									default:
										if(_this270.s6 == null) {
											_this270.s6 = new trilateral_justPath_StoreF6();
										}
										_this270.s6.push(v64);
									}
									_this270.l++;
								}
								_this269.l++;
							}
							temp12 = "";
						}
						break;
					case 45:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this271 = this.store;
								var v65 = parseFloat(temp12);
								switch(_this271.l) {
								case 0:
									_this271.s0 = v65;
									break;
								case 1:
									_this271.s1 = v65;
									break;
								case 2:
									_this271.s2 = v65;
									break;
								case 3:
									_this271.s3 = v65;
									break;
								case 4:
									_this271.s4 = v65;
									break;
								case 5:
									_this271.s5 = v65;
									break;
								default:
									if(_this271.s6 == null) {
										_this271.s6 = new trilateral_justPath_StoreF6();
									}
									var _this272 = _this271.s6;
									switch(_this272.l) {
									case 0:
										_this272.s0 = v65;
										break;
									case 1:
										_this272.s1 = v65;
										break;
									case 2:
										_this272.s2 = v65;
										break;
									case 3:
										_this272.s3 = v65;
										break;
									case 4:
										_this272.s4 = v65;
										break;
									case 5:
										_this272.s5 = v65;
										break;
									default:
										if(_this272.s6 == null) {
											_this272.s6 = new trilateral_justPath_StoreF6();
										}
										_this272.s6.push(v65);
									}
									_this272.l++;
								}
								_this271.l++;
							} else {
								var _this273 = this.store;
								var v66 = parseFloat(temp12);
								switch(_this273.l) {
								case 0:
									_this273.s0 = v66;
									break;
								case 1:
									_this273.s1 = v66;
									break;
								case 2:
									_this273.s2 = v66;
									break;
								case 3:
									_this273.s3 = v66;
									break;
								case 4:
									_this273.s4 = v66;
									break;
								case 5:
									_this273.s5 = v66;
									break;
								default:
									if(_this273.s6 == null) {
										_this273.s6 = new trilateral_justPath_StoreF6();
									}
									var _this274 = _this273.s6;
									switch(_this274.l) {
									case 0:
										_this274.s0 = v66;
										break;
									case 1:
										_this274.s1 = v66;
										break;
									case 2:
										_this274.s2 = v66;
										break;
									case 3:
										_this274.s3 = v66;
										break;
									case 4:
										_this274.s4 = v66;
										break;
									case 5:
										_this274.s5 = v66;
										break;
									default:
										if(_this274.s6 == null) {
											_this274.s6 = new trilateral_justPath_StoreF6();
										}
										_this274.s6.push(v66);
									}
									_this274.l++;
								}
								_this273.l++;
							}
						}
						temp12 = "-";
						break;
					case 46:
						temp12 += ".";
						break;
					case 48:
						temp12 += "0";
						break;
					case 49:
						temp12 += "1";
						break;
					case 50:
						temp12 += "2";
						break;
					case 51:
						temp12 += "3";
						break;
					case 52:
						temp12 += "4";
						break;
					case 53:
						temp12 += "5";
						break;
					case 54:
						temp12 += "6";
						break;
					case 55:
						temp12 += "7";
						break;
					case 56:
						temp12 += "8";
						break;
					case 57:
						temp12 += "9";
						break;
					default:
						if(temp12 != "") {
							if((this.store.l & 1) == 0) {
								var _this275 = this.store;
								var v67 = parseFloat(temp12);
								switch(_this275.l) {
								case 0:
									_this275.s0 = v67;
									break;
								case 1:
									_this275.s1 = v67;
									break;
								case 2:
									_this275.s2 = v67;
									break;
								case 3:
									_this275.s3 = v67;
									break;
								case 4:
									_this275.s4 = v67;
									break;
								case 5:
									_this275.s5 = v67;
									break;
								default:
									if(_this275.s6 == null) {
										_this275.s6 = new trilateral_justPath_StoreF6();
									}
									var _this276 = _this275.s6;
									switch(_this276.l) {
									case 0:
										_this276.s0 = v67;
										break;
									case 1:
										_this276.s1 = v67;
										break;
									case 2:
										_this276.s2 = v67;
										break;
									case 3:
										_this276.s3 = v67;
										break;
									case 4:
										_this276.s4 = v67;
										break;
									case 5:
										_this276.s5 = v67;
										break;
									default:
										if(_this276.s6 == null) {
											_this276.s6 = new trilateral_justPath_StoreF6();
										}
										_this276.s6.push(v67);
									}
									_this276.l++;
								}
								_this275.l++;
							} else {
								var _this277 = this.store;
								var v68 = parseFloat(temp12);
								switch(_this277.l) {
								case 0:
									_this277.s0 = v68;
									break;
								case 1:
									_this277.s1 = v68;
									break;
								case 2:
									_this277.s2 = v68;
									break;
								case 3:
									_this277.s3 = v68;
									break;
								case 4:
									_this277.s4 = v68;
									break;
								case 5:
									_this277.s5 = v68;
									break;
								default:
									if(_this277.s6 == null) {
										_this277.s6 = new trilateral_justPath_StoreF6();
									}
									var _this278 = _this277.s6;
									switch(_this278.l) {
									case 0:
										_this278.s0 = v68;
										break;
									case 1:
										_this278.s1 = v68;
										break;
									case 2:
										_this278.s2 = v68;
										break;
									case 3:
										_this278.s3 = v68;
										break;
									case 4:
										_this278.s4 = v68;
										break;
									case 5:
										_this278.s5 = v68;
										break;
									default:
										if(_this278.s6 == null) {
											_this278.s6 = new trilateral_justPath_StoreF6();
										}
										_this278.s6.push(v68);
									}
									_this278.l++;
								}
								_this277.l++;
							}
							temp12 = "";
						}
						this.pos--;
						exit12 = true;
					}
					if(exit12) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 2) {
						var _this279 = this.store;
						var out128 = _this279.s0;
						if(_this279.l != 0) {
							_this279.s0 = _this279.s1;
							_this279.s1 = _this279.s2;
							_this279.s2 = _this279.s3;
							_this279.s3 = _this279.s4;
							_this279.s4 = _this279.s5;
							_this279.s5 = null;
							if(_this279.s6 != null) {
								var _this280 = _this279.s6;
								var out129 = _this280.s0;
								if(_this280.l != 0) {
									_this280.s0 = _this280.s1;
									_this280.s1 = _this280.s2;
									_this280.s2 = _this280.s3;
									_this280.s3 = _this280.s4;
									_this280.s4 = _this280.s5;
									_this280.s5 = null;
									if(_this280.s6 != null) {
										_this280.s5 = _this280.s6.shift();
									}
									_this280.l--;
								}
								_this279.s5 = out129;
							}
							_this279.l--;
						}
						this.lastX = out128 + this.lastX;
						var _this281 = this.store;
						var out130 = _this281.s0;
						if(_this281.l != 0) {
							_this281.s0 = _this281.s1;
							_this281.s1 = _this281.s2;
							_this281.s2 = _this281.s3;
							_this281.s3 = _this281.s4;
							_this281.s4 = _this281.s5;
							_this281.s5 = null;
							if(_this281.s6 != null) {
								var _this282 = _this281.s6;
								var out131 = _this282.s0;
								if(_this282.l != 0) {
									_this282.s0 = _this282.s1;
									_this282.s1 = _this282.s2;
									_this282.s2 = _this282.s3;
									_this282.s3 = _this282.s4;
									_this282.s4 = _this282.s5;
									_this282.s5 = null;
									if(_this282.s6 != null) {
										_this282.s5 = _this282.s6.shift();
									}
									_this282.l--;
								}
								_this281.s5 = out131;
							}
							_this281.l--;
						}
						this.lastY = out130 + this.lastY;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 109:
				var _this283 = this.store;
				_this283.l = 0;
				_this283.s0 = null;
				_this283.s1 = null;
				_this283.s2 = null;
				_this283.s3 = null;
				_this283.s4 = null;
				_this283.s5 = null;
				_this283.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count14 = 0;
				var temp13 = "";
				var exit13 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this284 = this.store;
								var v69 = parseFloat(temp13);
								switch(_this284.l) {
								case 0:
									_this284.s0 = v69;
									break;
								case 1:
									_this284.s1 = v69;
									break;
								case 2:
									_this284.s2 = v69;
									break;
								case 3:
									_this284.s3 = v69;
									break;
								case 4:
									_this284.s4 = v69;
									break;
								case 5:
									_this284.s5 = v69;
									break;
								default:
									if(_this284.s6 == null) {
										_this284.s6 = new trilateral_justPath_StoreF6();
									}
									var _this285 = _this284.s6;
									switch(_this285.l) {
									case 0:
										_this285.s0 = v69;
										break;
									case 1:
										_this285.s1 = v69;
										break;
									case 2:
										_this285.s2 = v69;
										break;
									case 3:
										_this285.s3 = v69;
										break;
									case 4:
										_this285.s4 = v69;
										break;
									case 5:
										_this285.s5 = v69;
										break;
									default:
										if(_this285.s6 == null) {
											_this285.s6 = new trilateral_justPath_StoreF6();
										}
										_this285.s6.push(v69);
									}
									_this285.l++;
								}
								_this284.l++;
							} else {
								var _this286 = this.store;
								var v70 = parseFloat(temp13);
								switch(_this286.l) {
								case 0:
									_this286.s0 = v70;
									break;
								case 1:
									_this286.s1 = v70;
									break;
								case 2:
									_this286.s2 = v70;
									break;
								case 3:
									_this286.s3 = v70;
									break;
								case 4:
									_this286.s4 = v70;
									break;
								case 5:
									_this286.s5 = v70;
									break;
								default:
									if(_this286.s6 == null) {
										_this286.s6 = new trilateral_justPath_StoreF6();
									}
									var _this287 = _this286.s6;
									switch(_this287.l) {
									case 0:
										_this287.s0 = v70;
										break;
									case 1:
										_this287.s1 = v70;
										break;
									case 2:
										_this287.s2 = v70;
										break;
									case 3:
										_this287.s3 = v70;
										break;
									case 4:
										_this287.s4 = v70;
										break;
									case 5:
										_this287.s5 = v70;
										break;
									default:
										if(_this287.s6 == null) {
											_this287.s6 = new trilateral_justPath_StoreF6();
										}
										_this287.s6.push(v70);
									}
									_this287.l++;
								}
								_this286.l++;
							}
							temp13 = "";
						}
						break;
					case 45:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this288 = this.store;
								var v71 = parseFloat(temp13);
								switch(_this288.l) {
								case 0:
									_this288.s0 = v71;
									break;
								case 1:
									_this288.s1 = v71;
									break;
								case 2:
									_this288.s2 = v71;
									break;
								case 3:
									_this288.s3 = v71;
									break;
								case 4:
									_this288.s4 = v71;
									break;
								case 5:
									_this288.s5 = v71;
									break;
								default:
									if(_this288.s6 == null) {
										_this288.s6 = new trilateral_justPath_StoreF6();
									}
									var _this289 = _this288.s6;
									switch(_this289.l) {
									case 0:
										_this289.s0 = v71;
										break;
									case 1:
										_this289.s1 = v71;
										break;
									case 2:
										_this289.s2 = v71;
										break;
									case 3:
										_this289.s3 = v71;
										break;
									case 4:
										_this289.s4 = v71;
										break;
									case 5:
										_this289.s5 = v71;
										break;
									default:
										if(_this289.s6 == null) {
											_this289.s6 = new trilateral_justPath_StoreF6();
										}
										_this289.s6.push(v71);
									}
									_this289.l++;
								}
								_this288.l++;
							} else {
								var _this290 = this.store;
								var v72 = parseFloat(temp13);
								switch(_this290.l) {
								case 0:
									_this290.s0 = v72;
									break;
								case 1:
									_this290.s1 = v72;
									break;
								case 2:
									_this290.s2 = v72;
									break;
								case 3:
									_this290.s3 = v72;
									break;
								case 4:
									_this290.s4 = v72;
									break;
								case 5:
									_this290.s5 = v72;
									break;
								default:
									if(_this290.s6 == null) {
										_this290.s6 = new trilateral_justPath_StoreF6();
									}
									var _this291 = _this290.s6;
									switch(_this291.l) {
									case 0:
										_this291.s0 = v72;
										break;
									case 1:
										_this291.s1 = v72;
										break;
									case 2:
										_this291.s2 = v72;
										break;
									case 3:
										_this291.s3 = v72;
										break;
									case 4:
										_this291.s4 = v72;
										break;
									case 5:
										_this291.s5 = v72;
										break;
									default:
										if(_this291.s6 == null) {
											_this291.s6 = new trilateral_justPath_StoreF6();
										}
										_this291.s6.push(v72);
									}
									_this291.l++;
								}
								_this290.l++;
							}
						}
						temp13 = "-";
						break;
					case 46:
						temp13 += ".";
						break;
					case 48:
						temp13 += "0";
						break;
					case 49:
						temp13 += "1";
						break;
					case 50:
						temp13 += "2";
						break;
					case 51:
						temp13 += "3";
						break;
					case 52:
						temp13 += "4";
						break;
					case 53:
						temp13 += "5";
						break;
					case 54:
						temp13 += "6";
						break;
					case 55:
						temp13 += "7";
						break;
					case 56:
						temp13 += "8";
						break;
					case 57:
						temp13 += "9";
						break;
					default:
						if(temp13 != "") {
							if((this.store.l & 1) == 0) {
								var _this292 = this.store;
								var v73 = parseFloat(temp13);
								switch(_this292.l) {
								case 0:
									_this292.s0 = v73;
									break;
								case 1:
									_this292.s1 = v73;
									break;
								case 2:
									_this292.s2 = v73;
									break;
								case 3:
									_this292.s3 = v73;
									break;
								case 4:
									_this292.s4 = v73;
									break;
								case 5:
									_this292.s5 = v73;
									break;
								default:
									if(_this292.s6 == null) {
										_this292.s6 = new trilateral_justPath_StoreF6();
									}
									var _this293 = _this292.s6;
									switch(_this293.l) {
									case 0:
										_this293.s0 = v73;
										break;
									case 1:
										_this293.s1 = v73;
										break;
									case 2:
										_this293.s2 = v73;
										break;
									case 3:
										_this293.s3 = v73;
										break;
									case 4:
										_this293.s4 = v73;
										break;
									case 5:
										_this293.s5 = v73;
										break;
									default:
										if(_this293.s6 == null) {
											_this293.s6 = new trilateral_justPath_StoreF6();
										}
										_this293.s6.push(v73);
									}
									_this293.l++;
								}
								_this292.l++;
							} else {
								var _this294 = this.store;
								var v74 = parseFloat(temp13);
								switch(_this294.l) {
								case 0:
									_this294.s0 = v74;
									break;
								case 1:
									_this294.s1 = v74;
									break;
								case 2:
									_this294.s2 = v74;
									break;
								case 3:
									_this294.s3 = v74;
									break;
								case 4:
									_this294.s4 = v74;
									break;
								case 5:
									_this294.s5 = v74;
									break;
								default:
									if(_this294.s6 == null) {
										_this294.s6 = new trilateral_justPath_StoreF6();
									}
									var _this295 = _this294.s6;
									switch(_this295.l) {
									case 0:
										_this295.s0 = v74;
										break;
									case 1:
										_this295.s1 = v74;
										break;
									case 2:
										_this295.s2 = v74;
										break;
									case 3:
										_this295.s3 = v74;
										break;
									case 4:
										_this295.s4 = v74;
										break;
									case 5:
										_this295.s5 = v74;
										break;
									default:
										if(_this295.s6 == null) {
											_this295.s6 = new trilateral_justPath_StoreF6();
										}
										_this295.s6.push(v74);
									}
									_this295.l++;
								}
								_this294.l++;
							}
							temp13 = "";
						}
						this.pos--;
						exit13 = true;
					}
					if(exit13) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.moveTo(this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					var _this296 = this.store;
					var out132 = _this296.s0;
					if(_this296.l != 0) {
						_this296.s0 = _this296.s1;
						_this296.s1 = _this296.s2;
						_this296.s2 = _this296.s3;
						_this296.s3 = _this296.s4;
						_this296.s4 = _this296.s5;
						_this296.s5 = null;
						if(_this296.s6 != null) {
							var _this297 = _this296.s6;
							var out133 = _this297.s0;
							if(_this297.l != 0) {
								_this297.s0 = _this297.s1;
								_this297.s1 = _this297.s2;
								_this297.s2 = _this297.s3;
								_this297.s3 = _this297.s4;
								_this297.s4 = _this297.s5;
								_this297.s5 = null;
								if(_this297.s6 != null) {
									_this297.s5 = _this297.s6.shift();
								}
								_this297.l--;
							}
							_this296.s5 = out133;
						}
						_this296.l--;
					}
					this.lastX = out132 + this.lastX;
					var _this298 = this.store;
					var out134 = _this298.s0;
					if(_this298.l != 0) {
						_this298.s0 = _this298.s1;
						_this298.s1 = _this298.s2;
						_this298.s2 = _this298.s3;
						_this298.s3 = _this298.s4;
						_this298.s4 = _this298.s5;
						_this298.s5 = null;
						if(_this298.s6 != null) {
							var _this299 = _this298.s6;
							var out135 = _this299.s0;
							if(_this299.l != 0) {
								_this299.s0 = _this299.s1;
								_this299.s1 = _this299.s2;
								_this299.s2 = _this299.s3;
								_this299.s3 = _this299.s4;
								_this299.s4 = _this299.s5;
								_this299.s5 = null;
								if(_this299.s6 != null) {
									_this299.s5 = _this299.s6.shift();
								}
								_this299.l--;
							}
							_this298.s5 = out135;
						}
						_this298.l--;
					}
					this.lastY = out134 + this.lastY;
					this.pathContext.moveTo(this.lastX,this.lastY);
					while(this.store.l > 1) {
						var _this300 = this.store;
						var out136 = _this300.s0;
						if(_this300.l != 0) {
							_this300.s0 = _this300.s1;
							_this300.s1 = _this300.s2;
							_this300.s2 = _this300.s3;
							_this300.s3 = _this300.s4;
							_this300.s4 = _this300.s5;
							_this300.s5 = null;
							if(_this300.s6 != null) {
								var _this301 = _this300.s6;
								var out137 = _this301.s0;
								if(_this301.l != 0) {
									_this301.s0 = _this301.s1;
									_this301.s1 = _this301.s2;
									_this301.s2 = _this301.s3;
									_this301.s3 = _this301.s4;
									_this301.s4 = _this301.s5;
									_this301.s5 = null;
									if(_this301.s6 != null) {
										_this301.s5 = _this301.s6.shift();
									}
									_this301.l--;
								}
								_this300.s5 = out137;
							}
							_this300.l--;
						}
						this.lastX = out136 + this.lastX;
						var _this302 = this.store;
						var out138 = _this302.s0;
						if(_this302.l != 0) {
							_this302.s0 = _this302.s1;
							_this302.s1 = _this302.s2;
							_this302.s2 = _this302.s3;
							_this302.s3 = _this302.s4;
							_this302.s4 = _this302.s5;
							_this302.s5 = null;
							if(_this302.s6 != null) {
								var _this303 = _this302.s6;
								var out139 = _this303.s0;
								if(_this303.l != 0) {
									_this303.s0 = _this303.s1;
									_this303.s1 = _this303.s2;
									_this303.s2 = _this303.s3;
									_this303.s3 = _this303.s4;
									_this303.s4 = _this303.s5;
									_this303.s5 = null;
									if(_this303.s6 != null) {
										_this303.s5 = _this303.s6.shift();
									}
									_this303.l--;
								}
								_this302.s5 = out139;
							}
							_this302.l--;
						}
						this.lastY = out138 + this.lastY;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			case 113:
				var _this304 = this.store;
				_this304.l = 0;
				_this304.s0 = null;
				_this304.s1 = null;
				_this304.s2 = null;
				_this304.s3 = null;
				_this304.s4 = null;
				_this304.s5 = null;
				_this304.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count15 = 0;
				var temp14 = "";
				var exit14 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this305 = this.store;
								var v75 = parseFloat(temp14);
								switch(_this305.l) {
								case 0:
									_this305.s0 = v75;
									break;
								case 1:
									_this305.s1 = v75;
									break;
								case 2:
									_this305.s2 = v75;
									break;
								case 3:
									_this305.s3 = v75;
									break;
								case 4:
									_this305.s4 = v75;
									break;
								case 5:
									_this305.s5 = v75;
									break;
								default:
									if(_this305.s6 == null) {
										_this305.s6 = new trilateral_justPath_StoreF6();
									}
									var _this306 = _this305.s6;
									switch(_this306.l) {
									case 0:
										_this306.s0 = v75;
										break;
									case 1:
										_this306.s1 = v75;
										break;
									case 2:
										_this306.s2 = v75;
										break;
									case 3:
										_this306.s3 = v75;
										break;
									case 4:
										_this306.s4 = v75;
										break;
									case 5:
										_this306.s5 = v75;
										break;
									default:
										if(_this306.s6 == null) {
											_this306.s6 = new trilateral_justPath_StoreF6();
										}
										_this306.s6.push(v75);
									}
									_this306.l++;
								}
								_this305.l++;
							} else {
								var _this307 = this.store;
								var v76 = parseFloat(temp14);
								switch(_this307.l) {
								case 0:
									_this307.s0 = v76;
									break;
								case 1:
									_this307.s1 = v76;
									break;
								case 2:
									_this307.s2 = v76;
									break;
								case 3:
									_this307.s3 = v76;
									break;
								case 4:
									_this307.s4 = v76;
									break;
								case 5:
									_this307.s5 = v76;
									break;
								default:
									if(_this307.s6 == null) {
										_this307.s6 = new trilateral_justPath_StoreF6();
									}
									var _this308 = _this307.s6;
									switch(_this308.l) {
									case 0:
										_this308.s0 = v76;
										break;
									case 1:
										_this308.s1 = v76;
										break;
									case 2:
										_this308.s2 = v76;
										break;
									case 3:
										_this308.s3 = v76;
										break;
									case 4:
										_this308.s4 = v76;
										break;
									case 5:
										_this308.s5 = v76;
										break;
									default:
										if(_this308.s6 == null) {
											_this308.s6 = new trilateral_justPath_StoreF6();
										}
										_this308.s6.push(v76);
									}
									_this308.l++;
								}
								_this307.l++;
							}
							temp14 = "";
						}
						break;
					case 45:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this309 = this.store;
								var v77 = parseFloat(temp14);
								switch(_this309.l) {
								case 0:
									_this309.s0 = v77;
									break;
								case 1:
									_this309.s1 = v77;
									break;
								case 2:
									_this309.s2 = v77;
									break;
								case 3:
									_this309.s3 = v77;
									break;
								case 4:
									_this309.s4 = v77;
									break;
								case 5:
									_this309.s5 = v77;
									break;
								default:
									if(_this309.s6 == null) {
										_this309.s6 = new trilateral_justPath_StoreF6();
									}
									var _this310 = _this309.s6;
									switch(_this310.l) {
									case 0:
										_this310.s0 = v77;
										break;
									case 1:
										_this310.s1 = v77;
										break;
									case 2:
										_this310.s2 = v77;
										break;
									case 3:
										_this310.s3 = v77;
										break;
									case 4:
										_this310.s4 = v77;
										break;
									case 5:
										_this310.s5 = v77;
										break;
									default:
										if(_this310.s6 == null) {
											_this310.s6 = new trilateral_justPath_StoreF6();
										}
										_this310.s6.push(v77);
									}
									_this310.l++;
								}
								_this309.l++;
							} else {
								var _this311 = this.store;
								var v78 = parseFloat(temp14);
								switch(_this311.l) {
								case 0:
									_this311.s0 = v78;
									break;
								case 1:
									_this311.s1 = v78;
									break;
								case 2:
									_this311.s2 = v78;
									break;
								case 3:
									_this311.s3 = v78;
									break;
								case 4:
									_this311.s4 = v78;
									break;
								case 5:
									_this311.s5 = v78;
									break;
								default:
									if(_this311.s6 == null) {
										_this311.s6 = new trilateral_justPath_StoreF6();
									}
									var _this312 = _this311.s6;
									switch(_this312.l) {
									case 0:
										_this312.s0 = v78;
										break;
									case 1:
										_this312.s1 = v78;
										break;
									case 2:
										_this312.s2 = v78;
										break;
									case 3:
										_this312.s3 = v78;
										break;
									case 4:
										_this312.s4 = v78;
										break;
									case 5:
										_this312.s5 = v78;
										break;
									default:
										if(_this312.s6 == null) {
											_this312.s6 = new trilateral_justPath_StoreF6();
										}
										_this312.s6.push(v78);
									}
									_this312.l++;
								}
								_this311.l++;
							}
						}
						temp14 = "-";
						break;
					case 46:
						temp14 += ".";
						break;
					case 48:
						temp14 += "0";
						break;
					case 49:
						temp14 += "1";
						break;
					case 50:
						temp14 += "2";
						break;
					case 51:
						temp14 += "3";
						break;
					case 52:
						temp14 += "4";
						break;
					case 53:
						temp14 += "5";
						break;
					case 54:
						temp14 += "6";
						break;
					case 55:
						temp14 += "7";
						break;
					case 56:
						temp14 += "8";
						break;
					case 57:
						temp14 += "9";
						break;
					default:
						if(temp14 != "") {
							if((this.store.l & 1) == 0) {
								var _this313 = this.store;
								var v79 = parseFloat(temp14);
								switch(_this313.l) {
								case 0:
									_this313.s0 = v79;
									break;
								case 1:
									_this313.s1 = v79;
									break;
								case 2:
									_this313.s2 = v79;
									break;
								case 3:
									_this313.s3 = v79;
									break;
								case 4:
									_this313.s4 = v79;
									break;
								case 5:
									_this313.s5 = v79;
									break;
								default:
									if(_this313.s6 == null) {
										_this313.s6 = new trilateral_justPath_StoreF6();
									}
									var _this314 = _this313.s6;
									switch(_this314.l) {
									case 0:
										_this314.s0 = v79;
										break;
									case 1:
										_this314.s1 = v79;
										break;
									case 2:
										_this314.s2 = v79;
										break;
									case 3:
										_this314.s3 = v79;
										break;
									case 4:
										_this314.s4 = v79;
										break;
									case 5:
										_this314.s5 = v79;
										break;
									default:
										if(_this314.s6 == null) {
											_this314.s6 = new trilateral_justPath_StoreF6();
										}
										_this314.s6.push(v79);
									}
									_this314.l++;
								}
								_this313.l++;
							} else {
								var _this315 = this.store;
								var v80 = parseFloat(temp14);
								switch(_this315.l) {
								case 0:
									_this315.s0 = v80;
									break;
								case 1:
									_this315.s1 = v80;
									break;
								case 2:
									_this315.s2 = v80;
									break;
								case 3:
									_this315.s3 = v80;
									break;
								case 4:
									_this315.s4 = v80;
									break;
								case 5:
									_this315.s5 = v80;
									break;
								default:
									if(_this315.s6 == null) {
										_this315.s6 = new trilateral_justPath_StoreF6();
									}
									var _this316 = _this315.s6;
									switch(_this316.l) {
									case 0:
										_this316.s0 = v80;
										break;
									case 1:
										_this316.s1 = v80;
										break;
									case 2:
										_this316.s2 = v80;
										break;
									case 3:
										_this316.s3 = v80;
										break;
									case 4:
										_this316.s4 = v80;
										break;
									case 5:
										_this316.s5 = v80;
										break;
									default:
										if(_this316.s6 == null) {
											_this316.s6 = new trilateral_justPath_StoreF6();
										}
										_this316.s6.push(v80);
									}
									_this316.l++;
								}
								_this315.l++;
							}
							temp14 = "";
						}
						this.pos--;
						exit14 = true;
					}
					if(exit14) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					this.controlX = this.lastX + this.store.s0;
					this.controlY = this.lastY + this.store.s1;
					this.lastX = this.store.s0 + this.lastX;
					this.lastY = this.store.s1 + this.lastY;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var tmp1 = this.lastX;
						var _this317 = this.store;
						var out140 = _this317.s0;
						if(_this317.l != 0) {
							_this317.s0 = _this317.s1;
							_this317.s1 = _this317.s2;
							_this317.s2 = _this317.s3;
							_this317.s3 = _this317.s4;
							_this317.s4 = _this317.s5;
							_this317.s5 = null;
							if(_this317.s6 != null) {
								var _this318 = _this317.s6;
								var out141 = _this318.s0;
								if(_this318.l != 0) {
									_this318.s0 = _this318.s1;
									_this318.s1 = _this318.s2;
									_this318.s2 = _this318.s3;
									_this318.s3 = _this318.s4;
									_this318.s4 = _this318.s5;
									_this318.s5 = null;
									if(_this318.s6 != null) {
										_this318.s5 = _this318.s6.shift();
									}
									_this318.l--;
								}
								_this317.s5 = out141;
							}
							_this317.l--;
						}
						this.controlX = tmp1 + out140;
						var tmp2 = this.lastY;
						var _this319 = this.store;
						var out142 = _this319.s0;
						if(_this319.l != 0) {
							_this319.s0 = _this319.s1;
							_this319.s1 = _this319.s2;
							_this319.s2 = _this319.s3;
							_this319.s3 = _this319.s4;
							_this319.s4 = _this319.s5;
							_this319.s5 = null;
							if(_this319.s6 != null) {
								var _this320 = _this319.s6;
								var out143 = _this320.s0;
								if(_this320.l != 0) {
									_this320.s0 = _this320.s1;
									_this320.s1 = _this320.s2;
									_this320.s2 = _this320.s3;
									_this320.s3 = _this320.s4;
									_this320.s4 = _this320.s5;
									_this320.s5 = null;
									if(_this320.s6 != null) {
										_this320.s5 = _this320.s6.shift();
									}
									_this320.l--;
								}
								_this319.s5 = out143;
							}
							_this319.l--;
						}
						this.controlY = tmp2 + out142;
						var _this321 = this.store;
						var out144 = _this321.s0;
						if(_this321.l != 0) {
							_this321.s0 = _this321.s1;
							_this321.s1 = _this321.s2;
							_this321.s2 = _this321.s3;
							_this321.s3 = _this321.s4;
							_this321.s4 = _this321.s5;
							_this321.s5 = null;
							if(_this321.s6 != null) {
								var _this322 = _this321.s6;
								var out145 = _this322.s0;
								if(_this322.l != 0) {
									_this322.s0 = _this322.s1;
									_this322.s1 = _this322.s2;
									_this322.s2 = _this322.s3;
									_this322.s3 = _this322.s4;
									_this322.s4 = _this322.s5;
									_this322.s5 = null;
									if(_this322.s6 != null) {
										_this322.s5 = _this322.s6.shift();
									}
									_this322.l--;
								}
								_this321.s5 = out145;
							}
							_this321.l--;
						}
						this.lastX = out144 + this.lastX;
						var _this323 = this.store;
						var out146 = _this323.s0;
						if(_this323.l != 0) {
							_this323.s0 = _this323.s1;
							_this323.s1 = _this323.s2;
							_this323.s2 = _this323.s3;
							_this323.s3 = _this323.s4;
							_this323.s4 = _this323.s5;
							_this323.s5 = null;
							if(_this323.s6 != null) {
								var _this324 = _this323.s6;
								var out147 = _this324.s0;
								if(_this324.l != 0) {
									_this324.s0 = _this324.s1;
									_this324.s1 = _this324.s2;
									_this324.s2 = _this324.s3;
									_this324.s3 = _this324.s4;
									_this324.s4 = _this324.s5;
									_this324.s5 = null;
									if(_this324.s6 != null) {
										_this324.s5 = _this324.s6.shift();
									}
									_this324.l--;
								}
								_this323.s5 = out147;
							}
							_this323.l--;
						}
						this.lastY = out146 + this.lastY;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 115:
				var _this325 = this.store;
				_this325.l = 0;
				_this325.s0 = null;
				_this325.s1 = null;
				_this325.s2 = null;
				_this325.s3 = null;
				_this325.s4 = null;
				_this325.s5 = null;
				_this325.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count16 = 0;
				var temp15 = "";
				var exit15 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this326 = this.store;
								var v81 = parseFloat(temp15);
								switch(_this326.l) {
								case 0:
									_this326.s0 = v81;
									break;
								case 1:
									_this326.s1 = v81;
									break;
								case 2:
									_this326.s2 = v81;
									break;
								case 3:
									_this326.s3 = v81;
									break;
								case 4:
									_this326.s4 = v81;
									break;
								case 5:
									_this326.s5 = v81;
									break;
								default:
									if(_this326.s6 == null) {
										_this326.s6 = new trilateral_justPath_StoreF6();
									}
									var _this327 = _this326.s6;
									switch(_this327.l) {
									case 0:
										_this327.s0 = v81;
										break;
									case 1:
										_this327.s1 = v81;
										break;
									case 2:
										_this327.s2 = v81;
										break;
									case 3:
										_this327.s3 = v81;
										break;
									case 4:
										_this327.s4 = v81;
										break;
									case 5:
										_this327.s5 = v81;
										break;
									default:
										if(_this327.s6 == null) {
											_this327.s6 = new trilateral_justPath_StoreF6();
										}
										_this327.s6.push(v81);
									}
									_this327.l++;
								}
								_this326.l++;
							} else {
								var _this328 = this.store;
								var v82 = parseFloat(temp15);
								switch(_this328.l) {
								case 0:
									_this328.s0 = v82;
									break;
								case 1:
									_this328.s1 = v82;
									break;
								case 2:
									_this328.s2 = v82;
									break;
								case 3:
									_this328.s3 = v82;
									break;
								case 4:
									_this328.s4 = v82;
									break;
								case 5:
									_this328.s5 = v82;
									break;
								default:
									if(_this328.s6 == null) {
										_this328.s6 = new trilateral_justPath_StoreF6();
									}
									var _this329 = _this328.s6;
									switch(_this329.l) {
									case 0:
										_this329.s0 = v82;
										break;
									case 1:
										_this329.s1 = v82;
										break;
									case 2:
										_this329.s2 = v82;
										break;
									case 3:
										_this329.s3 = v82;
										break;
									case 4:
										_this329.s4 = v82;
										break;
									case 5:
										_this329.s5 = v82;
										break;
									default:
										if(_this329.s6 == null) {
											_this329.s6 = new trilateral_justPath_StoreF6();
										}
										_this329.s6.push(v82);
									}
									_this329.l++;
								}
								_this328.l++;
							}
							temp15 = "";
						}
						break;
					case 45:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this330 = this.store;
								var v83 = parseFloat(temp15);
								switch(_this330.l) {
								case 0:
									_this330.s0 = v83;
									break;
								case 1:
									_this330.s1 = v83;
									break;
								case 2:
									_this330.s2 = v83;
									break;
								case 3:
									_this330.s3 = v83;
									break;
								case 4:
									_this330.s4 = v83;
									break;
								case 5:
									_this330.s5 = v83;
									break;
								default:
									if(_this330.s6 == null) {
										_this330.s6 = new trilateral_justPath_StoreF6();
									}
									var _this331 = _this330.s6;
									switch(_this331.l) {
									case 0:
										_this331.s0 = v83;
										break;
									case 1:
										_this331.s1 = v83;
										break;
									case 2:
										_this331.s2 = v83;
										break;
									case 3:
										_this331.s3 = v83;
										break;
									case 4:
										_this331.s4 = v83;
										break;
									case 5:
										_this331.s5 = v83;
										break;
									default:
										if(_this331.s6 == null) {
											_this331.s6 = new trilateral_justPath_StoreF6();
										}
										_this331.s6.push(v83);
									}
									_this331.l++;
								}
								_this330.l++;
							} else {
								var _this332 = this.store;
								var v84 = parseFloat(temp15);
								switch(_this332.l) {
								case 0:
									_this332.s0 = v84;
									break;
								case 1:
									_this332.s1 = v84;
									break;
								case 2:
									_this332.s2 = v84;
									break;
								case 3:
									_this332.s3 = v84;
									break;
								case 4:
									_this332.s4 = v84;
									break;
								case 5:
									_this332.s5 = v84;
									break;
								default:
									if(_this332.s6 == null) {
										_this332.s6 = new trilateral_justPath_StoreF6();
									}
									var _this333 = _this332.s6;
									switch(_this333.l) {
									case 0:
										_this333.s0 = v84;
										break;
									case 1:
										_this333.s1 = v84;
										break;
									case 2:
										_this333.s2 = v84;
										break;
									case 3:
										_this333.s3 = v84;
										break;
									case 4:
										_this333.s4 = v84;
										break;
									case 5:
										_this333.s5 = v84;
										break;
									default:
										if(_this333.s6 == null) {
											_this333.s6 = new trilateral_justPath_StoreF6();
										}
										_this333.s6.push(v84);
									}
									_this333.l++;
								}
								_this332.l++;
							}
						}
						temp15 = "-";
						break;
					case 46:
						temp15 += ".";
						break;
					case 48:
						temp15 += "0";
						break;
					case 49:
						temp15 += "1";
						break;
					case 50:
						temp15 += "2";
						break;
					case 51:
						temp15 += "3";
						break;
					case 52:
						temp15 += "4";
						break;
					case 53:
						temp15 += "5";
						break;
					case 54:
						temp15 += "6";
						break;
					case 55:
						temp15 += "7";
						break;
					case 56:
						temp15 += "8";
						break;
					case 57:
						temp15 += "9";
						break;
					default:
						if(temp15 != "") {
							if((this.store.l & 1) == 0) {
								var _this334 = this.store;
								var v85 = parseFloat(temp15);
								switch(_this334.l) {
								case 0:
									_this334.s0 = v85;
									break;
								case 1:
									_this334.s1 = v85;
									break;
								case 2:
									_this334.s2 = v85;
									break;
								case 3:
									_this334.s3 = v85;
									break;
								case 4:
									_this334.s4 = v85;
									break;
								case 5:
									_this334.s5 = v85;
									break;
								default:
									if(_this334.s6 == null) {
										_this334.s6 = new trilateral_justPath_StoreF6();
									}
									var _this335 = _this334.s6;
									switch(_this335.l) {
									case 0:
										_this335.s0 = v85;
										break;
									case 1:
										_this335.s1 = v85;
										break;
									case 2:
										_this335.s2 = v85;
										break;
									case 3:
										_this335.s3 = v85;
										break;
									case 4:
										_this335.s4 = v85;
										break;
									case 5:
										_this335.s5 = v85;
										break;
									default:
										if(_this335.s6 == null) {
											_this335.s6 = new trilateral_justPath_StoreF6();
										}
										_this335.s6.push(v85);
									}
									_this335.l++;
								}
								_this334.l++;
							} else {
								var _this336 = this.store;
								var v86 = parseFloat(temp15);
								switch(_this336.l) {
								case 0:
									_this336.s0 = v86;
									break;
								case 1:
									_this336.s1 = v86;
									break;
								case 2:
									_this336.s2 = v86;
									break;
								case 3:
									_this336.s3 = v86;
									break;
								case 4:
									_this336.s4 = v86;
									break;
								case 5:
									_this336.s5 = v86;
									break;
								default:
									if(_this336.s6 == null) {
										_this336.s6 = new trilateral_justPath_StoreF6();
									}
									var _this337 = _this336.s6;
									switch(_this337.l) {
									case 0:
										_this337.s0 = v86;
										break;
									case 1:
										_this337.s1 = v86;
										break;
									case 2:
										_this337.s2 = v86;
										break;
									case 3:
										_this337.s3 = v86;
										break;
									case 4:
										_this337.s4 = v86;
										break;
									case 5:
										_this337.s5 = v86;
										break;
									default:
										if(_this337.s6 == null) {
											_this337.s6 = new trilateral_justPath_StoreF6();
										}
										_this337.s6.push(v86);
									}
									_this337.l++;
								}
								_this336.l++;
							}
							temp15 = "";
						}
						this.pos--;
						exit15 = true;
					}
					if(exit15) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 4) {
					var firstX5 = this.store.s0 + this.lastX;
					var firstY5 = this.store.s1 + this.lastY;
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s2 + this.lastX;
					this.lastY = this.store.s3 + this.lastY;
					this.pathContext.curveTo(this.controlX,this.controlY,firstX5,firstY5,this.lastX,this.lastY);
					this.controlX = firstX5;
					this.controlY = firstY5;
				} else if(this.store.l > 4) {
					while(this.store.l > 3) {
						var _this338 = this.store;
						var out148 = _this338.s0;
						if(_this338.l != 0) {
							_this338.s0 = _this338.s1;
							_this338.s1 = _this338.s2;
							_this338.s2 = _this338.s3;
							_this338.s3 = _this338.s4;
							_this338.s4 = _this338.s5;
							_this338.s5 = null;
							if(_this338.s6 != null) {
								var _this339 = _this338.s6;
								var out149 = _this339.s0;
								if(_this339.l != 0) {
									_this339.s0 = _this339.s1;
									_this339.s1 = _this339.s2;
									_this339.s2 = _this339.s3;
									_this339.s3 = _this339.s4;
									_this339.s4 = _this339.s5;
									_this339.s5 = null;
									if(_this339.s6 != null) {
										_this339.s5 = _this339.s6.shift();
									}
									_this339.l--;
								}
								_this338.s5 = out149;
							}
							_this338.l--;
						}
						var firstX6 = out148 + this.lastX;
						var _this340 = this.store;
						var out150 = _this340.s0;
						if(_this340.l != 0) {
							_this340.s0 = _this340.s1;
							_this340.s1 = _this340.s2;
							_this340.s2 = _this340.s3;
							_this340.s3 = _this340.s4;
							_this340.s4 = _this340.s5;
							_this340.s5 = null;
							if(_this340.s6 != null) {
								var _this341 = _this340.s6;
								var out151 = _this341.s0;
								if(_this341.l != 0) {
									_this341.s0 = _this341.s1;
									_this341.s1 = _this341.s2;
									_this341.s2 = _this341.s3;
									_this341.s3 = _this341.s4;
									_this341.s4 = _this341.s5;
									_this341.s5 = null;
									if(_this341.s6 != null) {
										_this341.s5 = _this341.s6.shift();
									}
									_this341.l--;
								}
								_this340.s5 = out151;
							}
							_this340.l--;
						}
						var firstY6 = out150 + this.lastY;
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this342 = this.store;
						var out152 = _this342.s0;
						if(_this342.l != 0) {
							_this342.s0 = _this342.s1;
							_this342.s1 = _this342.s2;
							_this342.s2 = _this342.s3;
							_this342.s3 = _this342.s4;
							_this342.s4 = _this342.s5;
							_this342.s5 = null;
							if(_this342.s6 != null) {
								var _this343 = _this342.s6;
								var out153 = _this343.s0;
								if(_this343.l != 0) {
									_this343.s0 = _this343.s1;
									_this343.s1 = _this343.s2;
									_this343.s2 = _this343.s3;
									_this343.s3 = _this343.s4;
									_this343.s4 = _this343.s5;
									_this343.s5 = null;
									if(_this343.s6 != null) {
										_this343.s5 = _this343.s6.shift();
									}
									_this343.l--;
								}
								_this342.s5 = out153;
							}
							_this342.l--;
						}
						this.lastX = out152 + this.lastX;
						var _this344 = this.store;
						var out154 = _this344.s0;
						if(_this344.l != 0) {
							_this344.s0 = _this344.s1;
							_this344.s1 = _this344.s2;
							_this344.s2 = _this344.s3;
							_this344.s3 = _this344.s4;
							_this344.s4 = _this344.s5;
							_this344.s5 = null;
							if(_this344.s6 != null) {
								var _this345 = _this344.s6;
								var out155 = _this345.s0;
								if(_this345.l != 0) {
									_this345.s0 = _this345.s1;
									_this345.s1 = _this345.s2;
									_this345.s2 = _this345.s3;
									_this345.s3 = _this345.s4;
									_this345.s4 = _this345.s5;
									_this345.s5 = null;
									if(_this345.s6 != null) {
										_this345.s5 = _this345.s6.shift();
									}
									_this345.l--;
								}
								_this344.s5 = out155;
							}
							_this344.l--;
						}
						this.lastY = out154 + this.lastY;
						this.pathContext.curveTo(this.controlX,this.controlY,firstX6,firstY6,this.lastX,this.lastY);
						this.controlX = firstX6;
						this.controlY = firstY6;
					}
				}
				break;
			case 116:
				var _this346 = this.store;
				_this346.l = 0;
				_this346.s0 = null;
				_this346.s1 = null;
				_this346.s2 = null;
				_this346.s3 = null;
				_this346.s4 = null;
				_this346.s5 = null;
				_this346.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count17 = 0;
				var temp16 = "";
				var exit16 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this347 = this.store;
								var v87 = parseFloat(temp16);
								switch(_this347.l) {
								case 0:
									_this347.s0 = v87;
									break;
								case 1:
									_this347.s1 = v87;
									break;
								case 2:
									_this347.s2 = v87;
									break;
								case 3:
									_this347.s3 = v87;
									break;
								case 4:
									_this347.s4 = v87;
									break;
								case 5:
									_this347.s5 = v87;
									break;
								default:
									if(_this347.s6 == null) {
										_this347.s6 = new trilateral_justPath_StoreF6();
									}
									var _this348 = _this347.s6;
									switch(_this348.l) {
									case 0:
										_this348.s0 = v87;
										break;
									case 1:
										_this348.s1 = v87;
										break;
									case 2:
										_this348.s2 = v87;
										break;
									case 3:
										_this348.s3 = v87;
										break;
									case 4:
										_this348.s4 = v87;
										break;
									case 5:
										_this348.s5 = v87;
										break;
									default:
										if(_this348.s6 == null) {
											_this348.s6 = new trilateral_justPath_StoreF6();
										}
										_this348.s6.push(v87);
									}
									_this348.l++;
								}
								_this347.l++;
							} else {
								var _this349 = this.store;
								var v88 = parseFloat(temp16);
								switch(_this349.l) {
								case 0:
									_this349.s0 = v88;
									break;
								case 1:
									_this349.s1 = v88;
									break;
								case 2:
									_this349.s2 = v88;
									break;
								case 3:
									_this349.s3 = v88;
									break;
								case 4:
									_this349.s4 = v88;
									break;
								case 5:
									_this349.s5 = v88;
									break;
								default:
									if(_this349.s6 == null) {
										_this349.s6 = new trilateral_justPath_StoreF6();
									}
									var _this350 = _this349.s6;
									switch(_this350.l) {
									case 0:
										_this350.s0 = v88;
										break;
									case 1:
										_this350.s1 = v88;
										break;
									case 2:
										_this350.s2 = v88;
										break;
									case 3:
										_this350.s3 = v88;
										break;
									case 4:
										_this350.s4 = v88;
										break;
									case 5:
										_this350.s5 = v88;
										break;
									default:
										if(_this350.s6 == null) {
											_this350.s6 = new trilateral_justPath_StoreF6();
										}
										_this350.s6.push(v88);
									}
									_this350.l++;
								}
								_this349.l++;
							}
							temp16 = "";
						}
						break;
					case 45:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this351 = this.store;
								var v89 = parseFloat(temp16);
								switch(_this351.l) {
								case 0:
									_this351.s0 = v89;
									break;
								case 1:
									_this351.s1 = v89;
									break;
								case 2:
									_this351.s2 = v89;
									break;
								case 3:
									_this351.s3 = v89;
									break;
								case 4:
									_this351.s4 = v89;
									break;
								case 5:
									_this351.s5 = v89;
									break;
								default:
									if(_this351.s6 == null) {
										_this351.s6 = new trilateral_justPath_StoreF6();
									}
									var _this352 = _this351.s6;
									switch(_this352.l) {
									case 0:
										_this352.s0 = v89;
										break;
									case 1:
										_this352.s1 = v89;
										break;
									case 2:
										_this352.s2 = v89;
										break;
									case 3:
										_this352.s3 = v89;
										break;
									case 4:
										_this352.s4 = v89;
										break;
									case 5:
										_this352.s5 = v89;
										break;
									default:
										if(_this352.s6 == null) {
											_this352.s6 = new trilateral_justPath_StoreF6();
										}
										_this352.s6.push(v89);
									}
									_this352.l++;
								}
								_this351.l++;
							} else {
								var _this353 = this.store;
								var v90 = parseFloat(temp16);
								switch(_this353.l) {
								case 0:
									_this353.s0 = v90;
									break;
								case 1:
									_this353.s1 = v90;
									break;
								case 2:
									_this353.s2 = v90;
									break;
								case 3:
									_this353.s3 = v90;
									break;
								case 4:
									_this353.s4 = v90;
									break;
								case 5:
									_this353.s5 = v90;
									break;
								default:
									if(_this353.s6 == null) {
										_this353.s6 = new trilateral_justPath_StoreF6();
									}
									var _this354 = _this353.s6;
									switch(_this354.l) {
									case 0:
										_this354.s0 = v90;
										break;
									case 1:
										_this354.s1 = v90;
										break;
									case 2:
										_this354.s2 = v90;
										break;
									case 3:
										_this354.s3 = v90;
										break;
									case 4:
										_this354.s4 = v90;
										break;
									case 5:
										_this354.s5 = v90;
										break;
									default:
										if(_this354.s6 == null) {
											_this354.s6 = new trilateral_justPath_StoreF6();
										}
										_this354.s6.push(v90);
									}
									_this354.l++;
								}
								_this353.l++;
							}
						}
						temp16 = "-";
						break;
					case 46:
						temp16 += ".";
						break;
					case 48:
						temp16 += "0";
						break;
					case 49:
						temp16 += "1";
						break;
					case 50:
						temp16 += "2";
						break;
					case 51:
						temp16 += "3";
						break;
					case 52:
						temp16 += "4";
						break;
					case 53:
						temp16 += "5";
						break;
					case 54:
						temp16 += "6";
						break;
					case 55:
						temp16 += "7";
						break;
					case 56:
						temp16 += "8";
						break;
					case 57:
						temp16 += "9";
						break;
					default:
						if(temp16 != "") {
							if((this.store.l & 1) == 0) {
								var _this355 = this.store;
								var v91 = parseFloat(temp16);
								switch(_this355.l) {
								case 0:
									_this355.s0 = v91;
									break;
								case 1:
									_this355.s1 = v91;
									break;
								case 2:
									_this355.s2 = v91;
									break;
								case 3:
									_this355.s3 = v91;
									break;
								case 4:
									_this355.s4 = v91;
									break;
								case 5:
									_this355.s5 = v91;
									break;
								default:
									if(_this355.s6 == null) {
										_this355.s6 = new trilateral_justPath_StoreF6();
									}
									var _this356 = _this355.s6;
									switch(_this356.l) {
									case 0:
										_this356.s0 = v91;
										break;
									case 1:
										_this356.s1 = v91;
										break;
									case 2:
										_this356.s2 = v91;
										break;
									case 3:
										_this356.s3 = v91;
										break;
									case 4:
										_this356.s4 = v91;
										break;
									case 5:
										_this356.s5 = v91;
										break;
									default:
										if(_this356.s6 == null) {
											_this356.s6 = new trilateral_justPath_StoreF6();
										}
										_this356.s6.push(v91);
									}
									_this356.l++;
								}
								_this355.l++;
							} else {
								var _this357 = this.store;
								var v92 = parseFloat(temp16);
								switch(_this357.l) {
								case 0:
									_this357.s0 = v92;
									break;
								case 1:
									_this357.s1 = v92;
									break;
								case 2:
									_this357.s2 = v92;
									break;
								case 3:
									_this357.s3 = v92;
									break;
								case 4:
									_this357.s4 = v92;
									break;
								case 5:
									_this357.s5 = v92;
									break;
								default:
									if(_this357.s6 == null) {
										_this357.s6 = new trilateral_justPath_StoreF6();
									}
									var _this358 = _this357.s6;
									switch(_this358.l) {
									case 0:
										_this358.s0 = v92;
										break;
									case 1:
										_this358.s1 = v92;
										break;
									case 2:
										_this358.s2 = v92;
										break;
									case 3:
										_this358.s3 = v92;
										break;
									case 4:
										_this358.s4 = v92;
										break;
									case 5:
										_this358.s5 = v92;
										break;
									default:
										if(_this358.s6 == null) {
											_this358.s6 = new trilateral_justPath_StoreF6();
										}
										_this358.s6.push(v92);
									}
									_this358.l++;
								}
								_this357.l++;
							}
							temp16 = "";
						}
						this.pos--;
						exit16 = true;
					}
					if(exit16) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 2) {
					this.controlX = 2 * this.lastX - this.controlX;
					this.controlY = 2 * this.lastY - this.controlY;
					this.lastX = this.store.s0 + this.lastY;
					this.lastY = this.store.s1 + this.lastX;
					this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
				} else if(this.store.l > 2) {
					while(this.store.l > 1) {
						this.controlX = 2 * this.lastX - this.controlX;
						this.controlY = 2 * this.lastY - this.controlY;
						var _this359 = this.store;
						var out156 = _this359.s0;
						if(_this359.l != 0) {
							_this359.s0 = _this359.s1;
							_this359.s1 = _this359.s2;
							_this359.s2 = _this359.s3;
							_this359.s3 = _this359.s4;
							_this359.s4 = _this359.s5;
							_this359.s5 = null;
							if(_this359.s6 != null) {
								var _this360 = _this359.s6;
								var out157 = _this360.s0;
								if(_this360.l != 0) {
									_this360.s0 = _this360.s1;
									_this360.s1 = _this360.s2;
									_this360.s2 = _this360.s3;
									_this360.s3 = _this360.s4;
									_this360.s4 = _this360.s5;
									_this360.s5 = null;
									if(_this360.s6 != null) {
										_this360.s5 = _this360.s6.shift();
									}
									_this360.l--;
								}
								_this359.s5 = out157;
							}
							_this359.l--;
						}
						this.lastX = out156 + this.lastY;
						var _this361 = this.store;
						var out158 = _this361.s0;
						if(_this361.l != 0) {
							_this361.s0 = _this361.s1;
							_this361.s1 = _this361.s2;
							_this361.s2 = _this361.s3;
							_this361.s3 = _this361.s4;
							_this361.s4 = _this361.s5;
							_this361.s5 = null;
							if(_this361.s6 != null) {
								var _this362 = _this361.s6;
								var out159 = _this362.s0;
								if(_this362.l != 0) {
									_this362.s0 = _this362.s1;
									_this362.s1 = _this362.s2;
									_this362.s2 = _this362.s3;
									_this362.s3 = _this362.s4;
									_this362.s4 = _this362.s5;
									_this362.s5 = null;
									if(_this362.s6 != null) {
										_this362.s5 = _this362.s6.shift();
									}
									_this362.l--;
								}
								_this361.s5 = out159;
							}
							_this361.l--;
						}
						this.lastY = out158 + this.lastX;
						this.pathContext.quadTo(this.controlX,this.controlY,this.lastX,this.lastY);
					}
				}
				break;
			case 118:
				var _this363 = this.store;
				_this363.l = 0;
				_this363.s0 = null;
				_this363.s1 = null;
				_this363.s2 = null;
				_this363.s3 = null;
				_this363.s4 = null;
				_this363.s5 = null;
				_this363.s6 = null;
				this.c = this.str.charCodeAt(this.pos++);
				var count18 = 0;
				var temp17 = "";
				var exit17 = false;
				while(true) {
					switch(this.c) {
					case 32:case 44:
						if(temp17 != "") {
							var _this364 = this.store;
							var v93 = parseFloat(temp17);
							switch(_this364.l) {
							case 0:
								_this364.s0 = v93;
								break;
							case 1:
								_this364.s1 = v93;
								break;
							case 2:
								_this364.s2 = v93;
								break;
							case 3:
								_this364.s3 = v93;
								break;
							case 4:
								_this364.s4 = v93;
								break;
							case 5:
								_this364.s5 = v93;
								break;
							default:
								if(_this364.s6 == null) {
									_this364.s6 = new trilateral_justPath_StoreF6();
								}
								var _this365 = _this364.s6;
								switch(_this365.l) {
								case 0:
									_this365.s0 = v93;
									break;
								case 1:
									_this365.s1 = v93;
									break;
								case 2:
									_this365.s2 = v93;
									break;
								case 3:
									_this365.s3 = v93;
									break;
								case 4:
									_this365.s4 = v93;
									break;
								case 5:
									_this365.s5 = v93;
									break;
								default:
									if(_this365.s6 == null) {
										_this365.s6 = new trilateral_justPath_StoreF6();
									}
									_this365.s6.push(v93);
								}
								_this365.l++;
							}
							_this364.l++;
							temp17 = "";
						}
						break;
					case 45:
						if(temp17 != "") {
							var _this366 = this.store;
							var v94 = parseFloat(temp17);
							switch(_this366.l) {
							case 0:
								_this366.s0 = v94;
								break;
							case 1:
								_this366.s1 = v94;
								break;
							case 2:
								_this366.s2 = v94;
								break;
							case 3:
								_this366.s3 = v94;
								break;
							case 4:
								_this366.s4 = v94;
								break;
							case 5:
								_this366.s5 = v94;
								break;
							default:
								if(_this366.s6 == null) {
									_this366.s6 = new trilateral_justPath_StoreF6();
								}
								var _this367 = _this366.s6;
								switch(_this367.l) {
								case 0:
									_this367.s0 = v94;
									break;
								case 1:
									_this367.s1 = v94;
									break;
								case 2:
									_this367.s2 = v94;
									break;
								case 3:
									_this367.s3 = v94;
									break;
								case 4:
									_this367.s4 = v94;
									break;
								case 5:
									_this367.s5 = v94;
									break;
								default:
									if(_this367.s6 == null) {
										_this367.s6 = new trilateral_justPath_StoreF6();
									}
									_this367.s6.push(v94);
								}
								_this367.l++;
							}
							_this366.l++;
						}
						temp17 = "-";
						break;
					case 46:
						temp17 += ".";
						break;
					case 48:
						temp17 += "0";
						break;
					case 49:
						temp17 += "1";
						break;
					case 50:
						temp17 += "2";
						break;
					case 51:
						temp17 += "3";
						break;
					case 52:
						temp17 += "4";
						break;
					case 53:
						temp17 += "5";
						break;
					case 54:
						temp17 += "6";
						break;
					case 55:
						temp17 += "7";
						break;
					case 56:
						temp17 += "8";
						break;
					case 57:
						temp17 += "9";
						break;
					default:
						if(temp17 != "") {
							var _this368 = this.store;
							var v95 = parseFloat(temp17);
							switch(_this368.l) {
							case 0:
								_this368.s0 = v95;
								break;
							case 1:
								_this368.s1 = v95;
								break;
							case 2:
								_this368.s2 = v95;
								break;
							case 3:
								_this368.s3 = v95;
								break;
							case 4:
								_this368.s4 = v95;
								break;
							case 5:
								_this368.s5 = v95;
								break;
							default:
								if(_this368.s6 == null) {
									_this368.s6 = new trilateral_justPath_StoreF6();
								}
								var _this369 = _this368.s6;
								switch(_this369.l) {
								case 0:
									_this369.s0 = v95;
									break;
								case 1:
									_this369.s1 = v95;
									break;
								case 2:
									_this369.s2 = v95;
									break;
								case 3:
									_this369.s3 = v95;
									break;
								case 4:
									_this369.s4 = v95;
									break;
								case 5:
									_this369.s5 = v95;
									break;
								default:
									if(_this369.s6 == null) {
										_this369.s6 = new trilateral_justPath_StoreF6();
									}
									_this369.s6.push(v95);
								}
								_this369.l++;
							}
							_this368.l++;
							temp17 = "";
						}
						this.pos--;
						exit17 = true;
					}
					if(exit17) {
						break;
					}
					this.c = this.str.charCodeAt(this.pos++);
				}
				if(this.store.l == 1) {
					this.lastY += this.store.s0;
					this.pathContext.lineTo(this.lastX,this.lastY);
				} else if(this.store.l > 1) {
					while(this.store.l > 0) {
						var tmp3 = this.lastY;
						var _this370 = this.store;
						var out160 = _this370.s0;
						if(_this370.l != 0) {
							_this370.s0 = _this370.s1;
							_this370.s1 = _this370.s2;
							_this370.s2 = _this370.s3;
							_this370.s3 = _this370.s4;
							_this370.s4 = _this370.s5;
							_this370.s5 = null;
							if(_this370.s6 != null) {
								var _this371 = _this370.s6;
								var out161 = _this371.s0;
								if(_this371.l != 0) {
									_this371.s0 = _this371.s1;
									_this371.s1 = _this371.s2;
									_this371.s2 = _this371.s3;
									_this371.s3 = _this371.s4;
									_this371.s4 = _this371.s5;
									_this371.s5 = null;
									if(_this371.s6 != null) {
										_this371.s5 = _this371.s6.shift();
									}
									_this371.l--;
								}
								_this370.s5 = out161;
							}
							_this370.l--;
						}
						this.lastY = tmp3 + out160;
						this.pathContext.lineTo(this.lastX,this.lastY);
					}
				}
				break;
			default:
				++count;
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
		return str_;
	}
	,extractArgs: function(process) {
		if(process == null) {
			process = true;
		}
		var _this = this.store;
		_this.l = 0;
		_this.s0 = null;
		_this.s1 = null;
		_this.s2 = null;
		_this.s3 = null;
		_this.s4 = null;
		_this.s5 = null;
		_this.s6 = null;
		this.c = this.str.charCodeAt(this.pos++);
		var count = 0;
		var temp = "";
		var exit = false;
		while(true) {
			switch(this.c) {
			case 32:case 44:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this1 = this.store;
							var v = parseFloat(temp);
							switch(_this1.l) {
							case 0:
								_this1.s0 = v;
								break;
							case 1:
								_this1.s1 = v;
								break;
							case 2:
								_this1.s2 = v;
								break;
							case 3:
								_this1.s3 = v;
								break;
							case 4:
								_this1.s4 = v;
								break;
							case 5:
								_this1.s5 = v;
								break;
							default:
								if(_this1.s6 == null) {
									_this1.s6 = new trilateral_justPath_StoreF6();
								}
								var _this2 = _this1.s6;
								switch(_this2.l) {
								case 0:
									_this2.s0 = v;
									break;
								case 1:
									_this2.s1 = v;
									break;
								case 2:
									_this2.s2 = v;
									break;
								case 3:
									_this2.s3 = v;
									break;
								case 4:
									_this2.s4 = v;
									break;
								case 5:
									_this2.s5 = v;
									break;
								default:
									if(_this2.s6 == null) {
										_this2.s6 = new trilateral_justPath_StoreF6();
									}
									_this2.s6.push(v);
								}
								_this2.l++;
							}
							_this1.l++;
						} else {
							var _this3 = this.store;
							var v1 = parseFloat(temp);
							switch(_this3.l) {
							case 0:
								_this3.s0 = v1;
								break;
							case 1:
								_this3.s1 = v1;
								break;
							case 2:
								_this3.s2 = v1;
								break;
							case 3:
								_this3.s3 = v1;
								break;
							case 4:
								_this3.s4 = v1;
								break;
							case 5:
								_this3.s5 = v1;
								break;
							default:
								if(_this3.s6 == null) {
									_this3.s6 = new trilateral_justPath_StoreF6();
								}
								var _this4 = _this3.s6;
								switch(_this4.l) {
								case 0:
									_this4.s0 = v1;
									break;
								case 1:
									_this4.s1 = v1;
									break;
								case 2:
									_this4.s2 = v1;
									break;
								case 3:
									_this4.s3 = v1;
									break;
								case 4:
									_this4.s4 = v1;
									break;
								case 5:
									_this4.s5 = v1;
									break;
								default:
									if(_this4.s6 == null) {
										_this4.s6 = new trilateral_justPath_StoreF6();
									}
									_this4.s6.push(v1);
								}
								_this4.l++;
							}
							_this3.l++;
						}
					} else {
						var _this5 = this.store;
						var v2 = parseFloat(temp);
						switch(_this5.l) {
						case 0:
							_this5.s0 = v2;
							break;
						case 1:
							_this5.s1 = v2;
							break;
						case 2:
							_this5.s2 = v2;
							break;
						case 3:
							_this5.s3 = v2;
							break;
						case 4:
							_this5.s4 = v2;
							break;
						case 5:
							_this5.s5 = v2;
							break;
						default:
							if(_this5.s6 == null) {
								_this5.s6 = new trilateral_justPath_StoreF6();
							}
							var _this6 = _this5.s6;
							switch(_this6.l) {
							case 0:
								_this6.s0 = v2;
								break;
							case 1:
								_this6.s1 = v2;
								break;
							case 2:
								_this6.s2 = v2;
								break;
							case 3:
								_this6.s3 = v2;
								break;
							case 4:
								_this6.s4 = v2;
								break;
							case 5:
								_this6.s5 = v2;
								break;
							default:
								if(_this6.s6 == null) {
									_this6.s6 = new trilateral_justPath_StoreF6();
								}
								_this6.s6.push(v2);
							}
							_this6.l++;
						}
						_this5.l++;
					}
					temp = "";
				}
				break;
			case 45:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this7 = this.store;
							var v3 = parseFloat(temp);
							switch(_this7.l) {
							case 0:
								_this7.s0 = v3;
								break;
							case 1:
								_this7.s1 = v3;
								break;
							case 2:
								_this7.s2 = v3;
								break;
							case 3:
								_this7.s3 = v3;
								break;
							case 4:
								_this7.s4 = v3;
								break;
							case 5:
								_this7.s5 = v3;
								break;
							default:
								if(_this7.s6 == null) {
									_this7.s6 = new trilateral_justPath_StoreF6();
								}
								var _this8 = _this7.s6;
								switch(_this8.l) {
								case 0:
									_this8.s0 = v3;
									break;
								case 1:
									_this8.s1 = v3;
									break;
								case 2:
									_this8.s2 = v3;
									break;
								case 3:
									_this8.s3 = v3;
									break;
								case 4:
									_this8.s4 = v3;
									break;
								case 5:
									_this8.s5 = v3;
									break;
								default:
									if(_this8.s6 == null) {
										_this8.s6 = new trilateral_justPath_StoreF6();
									}
									_this8.s6.push(v3);
								}
								_this8.l++;
							}
							_this7.l++;
						} else {
							var _this9 = this.store;
							var v4 = parseFloat(temp);
							switch(_this9.l) {
							case 0:
								_this9.s0 = v4;
								break;
							case 1:
								_this9.s1 = v4;
								break;
							case 2:
								_this9.s2 = v4;
								break;
							case 3:
								_this9.s3 = v4;
								break;
							case 4:
								_this9.s4 = v4;
								break;
							case 5:
								_this9.s5 = v4;
								break;
							default:
								if(_this9.s6 == null) {
									_this9.s6 = new trilateral_justPath_StoreF6();
								}
								var _this10 = _this9.s6;
								switch(_this10.l) {
								case 0:
									_this10.s0 = v4;
									break;
								case 1:
									_this10.s1 = v4;
									break;
								case 2:
									_this10.s2 = v4;
									break;
								case 3:
									_this10.s3 = v4;
									break;
								case 4:
									_this10.s4 = v4;
									break;
								case 5:
									_this10.s5 = v4;
									break;
								default:
									if(_this10.s6 == null) {
										_this10.s6 = new trilateral_justPath_StoreF6();
									}
									_this10.s6.push(v4);
								}
								_this10.l++;
							}
							_this9.l++;
						}
					} else {
						var _this11 = this.store;
						var v5 = parseFloat(temp);
						switch(_this11.l) {
						case 0:
							_this11.s0 = v5;
							break;
						case 1:
							_this11.s1 = v5;
							break;
						case 2:
							_this11.s2 = v5;
							break;
						case 3:
							_this11.s3 = v5;
							break;
						case 4:
							_this11.s4 = v5;
							break;
						case 5:
							_this11.s5 = v5;
							break;
						default:
							if(_this11.s6 == null) {
								_this11.s6 = new trilateral_justPath_StoreF6();
							}
							var _this12 = _this11.s6;
							switch(_this12.l) {
							case 0:
								_this12.s0 = v5;
								break;
							case 1:
								_this12.s1 = v5;
								break;
							case 2:
								_this12.s2 = v5;
								break;
							case 3:
								_this12.s3 = v5;
								break;
							case 4:
								_this12.s4 = v5;
								break;
							case 5:
								_this12.s5 = v5;
								break;
							default:
								if(_this12.s6 == null) {
									_this12.s6 = new trilateral_justPath_StoreF6();
								}
								_this12.s6.push(v5);
							}
							_this12.l++;
						}
						_this11.l++;
					}
				}
				temp = "-";
				break;
			case 46:
				temp += ".";
				break;
			case 48:
				temp += "0";
				break;
			case 49:
				temp += "1";
				break;
			case 50:
				temp += "2";
				break;
			case 51:
				temp += "3";
				break;
			case 52:
				temp += "4";
				break;
			case 53:
				temp += "5";
				break;
			case 54:
				temp += "6";
				break;
			case 55:
				temp += "7";
				break;
			case 56:
				temp += "8";
				break;
			case 57:
				temp += "9";
				break;
			default:
				if(temp != "") {
					if(process) {
						if((this.store.l & 1) == 0) {
							var _this13 = this.store;
							var v6 = parseFloat(temp);
							switch(_this13.l) {
							case 0:
								_this13.s0 = v6;
								break;
							case 1:
								_this13.s1 = v6;
								break;
							case 2:
								_this13.s2 = v6;
								break;
							case 3:
								_this13.s3 = v6;
								break;
							case 4:
								_this13.s4 = v6;
								break;
							case 5:
								_this13.s5 = v6;
								break;
							default:
								if(_this13.s6 == null) {
									_this13.s6 = new trilateral_justPath_StoreF6();
								}
								var _this14 = _this13.s6;
								switch(_this14.l) {
								case 0:
									_this14.s0 = v6;
									break;
								case 1:
									_this14.s1 = v6;
									break;
								case 2:
									_this14.s2 = v6;
									break;
								case 3:
									_this14.s3 = v6;
									break;
								case 4:
									_this14.s4 = v6;
									break;
								case 5:
									_this14.s5 = v6;
									break;
								default:
									if(_this14.s6 == null) {
										_this14.s6 = new trilateral_justPath_StoreF6();
									}
									_this14.s6.push(v6);
								}
								_this14.l++;
							}
							_this13.l++;
						} else {
							var _this15 = this.store;
							var v7 = parseFloat(temp);
							switch(_this15.l) {
							case 0:
								_this15.s0 = v7;
								break;
							case 1:
								_this15.s1 = v7;
								break;
							case 2:
								_this15.s2 = v7;
								break;
							case 3:
								_this15.s3 = v7;
								break;
							case 4:
								_this15.s4 = v7;
								break;
							case 5:
								_this15.s5 = v7;
								break;
							default:
								if(_this15.s6 == null) {
									_this15.s6 = new trilateral_justPath_StoreF6();
								}
								var _this16 = _this15.s6;
								switch(_this16.l) {
								case 0:
									_this16.s0 = v7;
									break;
								case 1:
									_this16.s1 = v7;
									break;
								case 2:
									_this16.s2 = v7;
									break;
								case 3:
									_this16.s3 = v7;
									break;
								case 4:
									_this16.s4 = v7;
									break;
								case 5:
									_this16.s5 = v7;
									break;
								default:
									if(_this16.s6 == null) {
										_this16.s6 = new trilateral_justPath_StoreF6();
									}
									_this16.s6.push(v7);
								}
								_this16.l++;
							}
							_this15.l++;
						}
					} else {
						var _this17 = this.store;
						var v8 = parseFloat(temp);
						switch(_this17.l) {
						case 0:
							_this17.s0 = v8;
							break;
						case 1:
							_this17.s1 = v8;
							break;
						case 2:
							_this17.s2 = v8;
							break;
						case 3:
							_this17.s3 = v8;
							break;
						case 4:
							_this17.s4 = v8;
							break;
						case 5:
							_this17.s5 = v8;
							break;
						default:
							if(_this17.s6 == null) {
								_this17.s6 = new trilateral_justPath_StoreF6();
							}
							var _this18 = _this17.s6;
							switch(_this18.l) {
							case 0:
								_this18.s0 = v8;
								break;
							case 1:
								_this18.s1 = v8;
								break;
							case 2:
								_this18.s2 = v8;
								break;
							case 3:
								_this18.s3 = v8;
								break;
							case 4:
								_this18.s4 = v8;
								break;
							case 5:
								_this18.s5 = v8;
								break;
							default:
								if(_this18.s6 == null) {
									_this18.s6 = new trilateral_justPath_StoreF6();
								}
								_this18.s6.push(v8);
							}
							_this18.l++;
						}
						_this17.l++;
					}
					temp = "";
				}
				this.pos--;
				exit = true;
			}
			if(exit) {
				break;
			}
			this.c = this.str.charCodeAt(this.pos++);
		}
	}
	,nextChar: function() {
		return this.str.charCodeAt(this.pos++);
	}
};
var trilateral_justPath_transform_ScaleContext = function(pathContext_,sx_,sy_) {
	this.pathContext = pathContext_;
	this.sx = sx_;
	this.sy = sy_;
};
trilateral_justPath_transform_ScaleContext.__name__ = true;
trilateral_justPath_transform_ScaleContext.prototype = {
	moveTo: function(x,y) {
		this.pathContext.moveTo(x * this.sx,y * this.sy);
	}
	,lineTo: function(x,y) {
		this.pathContext.lineTo(x * this.sx,y * this.sy);
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.pathContext.quadTo(x1 * this.sx,y1 * this.sy,x2 * this.sx,y2 * this.sy);
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.pathContext.curveTo(x1 * this.sx,y1 * this.sy,x2 * this.sx,y2 * this.sy,x3 * this.sx,y3 * this.sy);
	}
};
var trilateral_justPath_transform_ScaleTranslateContext = function(pathContext_,dx_,dy_,sx_,sy_) {
	this.pathContext = pathContext_;
	this.dx = dx_;
	this.dy = dy_;
	this.sx = sx_;
	this.sy = sy_;
};
trilateral_justPath_transform_ScaleTranslateContext.__name__ = true;
trilateral_justPath_transform_ScaleTranslateContext.prototype = {
	moveTo: function(x,y) {
		this.pathContext.moveTo(x * this.sx + this.dx,y * this.sy + this.dy);
	}
	,lineTo: function(x,y) {
		this.pathContext.lineTo(x * this.sx + this.dx,y * this.sy + this.dy);
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.pathContext.quadTo(x1 * this.sx + this.dx,y1 * this.sy + this.dy,x2 * this.sx + this.dx,y2 * this.sy + this.dy);
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.pathContext.curveTo(x1 * this.sx + this.dx,y1 * this.sy + this.dy,x2 * this.sx + this.dx,y2 * this.sy + this.dy,x3 * this.sx + this.dx,y3 * this.sy + this.dy);
	}
};
var trilateral_justPath_transform_TranslationContext = function(pathContext_,dx_,dy_) {
	this.pathContext = pathContext_;
	this.dx = dx_;
	this.dy = dy_;
};
trilateral_justPath_transform_TranslationContext.__name__ = true;
trilateral_justPath_transform_TranslationContext.prototype = {
	moveTo: function(x,y) {
		this.pathContext.moveTo(x + this.dx,y + this.dy);
	}
	,lineTo: function(x,y) {
		this.pathContext.lineTo(x + this.dx,y + this.dy);
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.pathContext.quadTo(x1 + this.dx,y1 + this.dy,x2 + this.dx,y2 + this.dy);
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.pathContext.curveTo(x1 + this.dx,y1 + this.dy,x2 + this.dx,y2 + this.dy,x3 + this.dx,y3 + this.dy);
	}
};
var trilateral_pairs_Line = function() { };
trilateral_pairs_Line.__name__ = true;
trilateral_pairs_Line.create = function(A,B,width) {
	var dx = A.x - B.x;
	var dy = A.y - B.y;
	var P_x = A.x - width / 2;
	var P_y = A.y;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = A.x + width / 2;
	var pivotY = A.y;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - pivotY;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + pivotY};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - pivotY;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + pivotY};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - pivotY;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + pivotY};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - pivotY;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + pivotY};
	}
	var q_A = A_;
	var q_B = B_;
	var q_C = C_;
	var q_D = D_;
	return { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
};
trilateral_pairs_Line.fromCoord = function(ax,ay,bx,by,width) {
	var dx = ax - bx;
	var dy = ay - by;
	var P_x = ax - width / 2;
	var P_y = ay;
	var omega = Math.atan2(dy,dx);
	var dim_x = width;
	var dim_y = dx * dx + dy * dy;
	var pivotX = ax + width / 2;
	var px = P_x;
	var py = P_y;
	var dx1 = dim_x;
	var dy1 = dim_y;
	var A_ = { x : px, y : py};
	var B_ = { x : px + dx1, y : py};
	var C_ = { x : px + dx1, y : py + dy1};
	var D_ = { x : px, y : py + dy1};
	if(omega != 0.) {
		var sin = Math.sin(omega);
		var cos = Math.cos(omega);
		var px1 = A_.x - pivotX;
		var py1 = A_.y - ay;
		var px2 = px1 * cos - py1 * sin;
		py1 = py1 * cos + px1 * sin;
		A_ = { x : px2 + pivotX, y : py1 + ay};
		var px3 = B_.x - pivotX;
		var py2 = B_.y - ay;
		var px21 = px3 * cos - py2 * sin;
		py2 = py2 * cos + px3 * sin;
		B_ = { x : px21 + pivotX, y : py2 + ay};
		var px4 = C_.x - pivotX;
		var py3 = C_.y - ay;
		var px22 = px4 * cos - py3 * sin;
		py3 = py3 * cos + px4 * sin;
		C_ = { x : px22 + pivotX, y : py3 + ay};
		var px5 = D_.x - pivotX;
		var py4 = D_.y - ay;
		var px23 = px5 * cos - py4 * sin;
		py4 = py4 * cos + px5 * sin;
		D_ = { x : px23 + pivotX, y : py4 + ay};
	}
	var q_A = A_;
	var q_B = B_;
	var q_C = C_;
	var q_D = D_;
	return { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
};
var trilateral_pairs_Quad = function() { };
trilateral_pairs_Quad.__name__ = true;
trilateral_pairs_Quad.rectangle = function(x,y,w,h) {
	var ax = x;
	var ay = y;
	var bx = x + w;
	var by = ay;
	var cx = bx;
	var cy = ay + h;
	var dx = x;
	var dy = cy;
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.squareOutline = function(px,py,radius,thick,theta) {
	if(theta == null) {
		theta = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi2 - pi4;
		var as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = px + r * as;
		ay = py + r * ac;
		bx = px + r * bs;
		by = py + r * bc;
		cx = px + r * cs;
		cy = py + r * cc;
		dx = px + r * ds;
		dy = py + r * dc;
		a0x = px + r0 * as;
		a0y = py + r0 * ac;
		b0x = px + r0 * bs;
		b0y = py + r0 * bc;
		c0x = px + r0 * cs;
		c0y = py + r0 * cc;
		d0x = px + r0 * ds;
		d0y = py + r0 * dc;
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = px - radius0;
		a0y = py - radius0;
		var l0x = radius0 * 2;
		var l0y = l0x;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0y;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
trilateral_pairs_Quad.square = function(px,py,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta - pi4;
		var dTheta = -pi + theta + pi / 2 - pi / 4;
		var cTheta = theta - pi4;
		var bTheta = -pi + theta - pi2 - pi4;
		ax = px + r * Math.sin(aTheta);
		ay = py + r * Math.cos(aTheta);
		bx = px + r * Math.sin(bTheta);
		by = py + r * Math.cos(bTheta);
		cx = px + r * Math.sin(cTheta);
		cy = py + r * Math.cos(cTheta);
		dx = px + r * Math.sin(dTheta);
		dy = py + r * Math.cos(dTheta);
	} else {
		ax = px - radius;
		ay = py - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamond = function(x,y,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi2 - pi4;
		ax = x + r * Math.sin(aTheta);
		ay = y + r * Math.cos(aTheta);
		bx = x + r * Math.sin(bTheta);
		by = y + r * Math.cos(bTheta);
		cx = x + r * Math.sin(cTheta);
		cy = y + r * Math.cos(cTheta);
		dx = x + r * Math.sin(dTheta);
		dy = y + r * Math.cos(dTheta);
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
	}
	return { t0 : new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy), t1 : new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy)};
};
trilateral_pairs_Quad.diamondOutline = function(x,y,thick,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var theta1 = Math.PI / 4 + theta;
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var ax = 0.;
	var ay = 0.;
	var bx = 0.;
	var by = 0.;
	var cx = 0.;
	var cy = 0.;
	var dx = 0.;
	var dy = 0.;
	var a0x = 0.;
	var a0y = 0.;
	var b0x = 0.;
	var b0y = 0.;
	var c0x = 0.;
	var c0y = 0.;
	var d0x = 0.;
	var d0y = 0.;
	if(theta1 != 0) {
		var pi = Math.PI;
		var pi4 = pi / 4;
		var pi2 = pi / 2;
		var sqrt2 = Math.sqrt(2);
		var r = radius * sqrt2;
		var aTheta = -pi + theta1 - pi4;
		var dTheta = -pi + theta1 + pi / 2 - pi / 4;
		var cTheta = theta1 - pi4;
		var bTheta = -pi + theta1 - pi2 - pi4;
		var as = Math.sin(aTheta);
		var ac = Math.cos(aTheta);
		var bs = Math.sin(bTheta);
		var bc = Math.cos(bTheta);
		var cs = Math.sin(cTheta);
		var cc = Math.cos(cTheta);
		var ds = Math.sin(dTheta);
		var dc = Math.cos(dTheta);
		var r0 = r - thick;
		ax = x + r * as;
		ay = y + r * ac;
		bx = x + r * bs;
		by = y + r * bc;
		cx = x + r * cs;
		cy = y + r * cc;
		dx = x + r * ds;
		dy = y + r * dc;
		a0x = x + r0 * as;
		a0y = y + r0 * ac;
		b0x = x + r0 * bs;
		b0y = y + r0 * bc;
		c0x = x + r0 * cs;
		c0y = y + r0 * cc;
		d0x = x + r0 * ds;
		d0y = y + r0 * dc;
	} else {
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = x - radius0;
		a0y = y - radius0;
		var l0x = radius0 * 2;
		var l0y = l0x;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0y;
		d0x = a0x;
		d0y = c0y;
	}
	var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
	out[out.length] = tri;
	var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
	out[out.length] = tri1;
	var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
	out[out.length] = tri2;
	var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
	out[out.length] = tri3;
	var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
	out[out.length] = tri4;
	var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
	out[out.length] = tri5;
	var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
	out[out.length] = tri6;
	var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
	out[out.length] = tri7;
	return out;
};
var trilateral_pairs_Star = function() { };
trilateral_pairs_Star.__name__ = true;
trilateral_pairs_Star.create = function(px,py,radius,theta) {
	if(theta == null) {
		theta = 0;
	}
	var pi = Math.PI;
	var omega = -pi + theta;
	var a0x = px + radius * Math.sin(omega);
	var a0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var a1x = px + radius * Math.sin(omega);
	var a1y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var b0x = px + radius * Math.sin(omega);
	var b0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var b1x = px + radius * Math.sin(omega);
	var b1y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var c0x = px + radius * Math.sin(omega);
	var c0y = py + radius * Math.cos(omega);
	omega += pi / 3;
	var c1x = px + radius * Math.sin(omega);
	var c1y = py + radius * Math.cos(omega);
	return { t0 : new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y), t1 : new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y)};
};
var trilateral_path_Base = function(contour_,trilateralArray_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.width = 0.01;
	this.y = 0.;
	this.x = 0.;
	var tmp;
	if(trilateralArray_ == null) {
		var t = [];
		var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
		var this2 = this1;
		tmp = this2;
	} else {
		tmp = trilateralArray_;
	}
	this.trilateralArray = tmp;
	this.contour = contour_ == null ? new trilateral_geom_Contour(this.trilateralArray,endLine_) : contour_;
	this.endLine = endLine_;
	this.points = [];
	this.pointsClock = [];
	this.pointsAnti = [];
	this.points[0] = [];
	this.dim = [];
};
trilateral_path_Base.__name__ = true;
trilateral_path_Base.prototype = {
	reset: function() {
		var t = [];
		var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
		var this2 = this1;
		this.trilateralArray = this2;
		this.contour = new trilateral_geom_Contour(this.trilateralArray,this.endLine);
		this.points = [];
		this.pointsClock = [];
		this.pointsAnti = [];
		this.points[0] = [];
		this.dim = [];
	}
	,pointsNoEndOverlap: function() {
		var p;
		var l;
		var j = 0;
		var pointsClean = [];
		var _g = 0;
		var _g1 = this.points.length;
		while(_g < _g1) {
			var i = _g++;
			p = this.points[i];
			if(p.length > 2) {
				pointsClean[j++] = p;
			}
		}
		this.points = pointsClean;
		var _g2 = 0;
		var _g3 = this.points.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			p = this.points[i1];
			l = p.length;
			var repeat = p[0] == p[l - 2] && p[1] == p[l - 1];
			if(repeat) {
				this.points[i1].pop();
				this.points[i1].pop();
				l -= 2;
			}
		}
		return this.points;
	}
	,pointsRewound: function() {
		var p;
		var l;
		var j = 0;
		var pointsClean = [];
		var _g = 0;
		var _g1 = this.points.length;
		while(_g < _g1) {
			var i = _g++;
			p = this.points[i];
			if(p.length > 2) {
				pointsClean[j++] = p;
			}
		}
		this.points = pointsClean;
		var _g2 = 0;
		var _g3 = this.points.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			p = this.points[i1];
			l = p.length;
			var repeat = p[0] == p[l - 2] && p[1] == p[l - 1];
			if(repeat) {
				this.points[i1].pop();
				this.points[i1].pop();
				l -= 2;
			}
			var cc = 0.;
			var k = 0;
			var x1;
			var y1;
			var x2;
			var y2;
			var last = l - 2;
			while(k < l) {
				x1 = p[k];
				y1 = p[k + 1];
				if(k == last) {
					x2 = p[0];
					y2 = p[1];
				} else {
					x2 = p[k + 2];
					y2 = p[k + 3];
				}
				cc += (x2 - x1) * (y2 + y1);
				k += 2;
			}
			var reverse = cc > 0;
			if(reverse) {
				k = 0;
				while(k < l) {
					x1 = p[k];
					p[k] = p[k + 1];
					p[k + 1] = x1;
					k += 2;
				}
			}
			p.reverse();
			this.points[i1] = p;
		}
		return this.points;
	}
	,initDim: function() {
		return { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
	}
	,updateDim: function(x,y) {
		var d = this.dim[this.dim.length - 1];
		if(x < d.minX) {
			d.minX = x;
		}
		if(x > d.maxX) {
			d.maxX = x;
		}
		if(y < d.minY) {
			d.minY = y;
		}
		if(y > d.maxY) {
			d.maxY = y;
		}
	}
	,moveTo: function(x_,y_) {
		if(this.endLine == 2 || this.endLine == 3) {
			var _this = this.contour;
			var width_ = this.width;
			_this.endEdges();
			if(_this.count != 0) {
				var ax = _this.bx;
				var ay = _this.by;
				var radius = width_ / 2;
				var beta = -_this.angle1 - Math.PI / 2;
				var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
				var temp = [];
				var this1 = _this.triArr;
				var t = [];
				var this2;
				if(t == null) {
					var t1 = [];
					var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
					this2 = this3;
				} else {
					this2 = t;
				}
				var this4 = this2;
				var out = this4;
				var pi = Math.PI;
				var step = pi * 2 / 36;
				var dif;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f;
					if(beta >= 0 && beta > Math.PI) {
						f = beta;
					} else {
						var a = beta % (2 * Math.PI);
						f = a >= 0 ? a : a + 2 * Math.PI;
					}
					var this5 = f;
					var za = this5;
					var f1;
					if(gamma >= 0 && gamma > Math.PI) {
						f1 = gamma;
					} else {
						var a1 = gamma % (2 * Math.PI);
						f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
					}
					var this6 = f1;
					var zb = this6;
					var fa = za;
					var fb = zb;
					var theta = Math.abs(fa - fb);
					var clockwise = beta < gamma;
					var dif1 = clockwise ? theta : -theta;
					dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
					break;
				case 1:
					var f2;
					if(beta >= 0 && beta > Math.PI) {
						f2 = beta;
					} else {
						var a2 = beta % (2 * Math.PI);
						f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
					}
					var this7 = f2;
					var za1 = this7;
					var f3;
					if(gamma >= 0 && gamma > Math.PI) {
						f3 = gamma;
					} else {
						var a3 = gamma % (2 * Math.PI);
						f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
					}
					var this8 = f3;
					var zb1 = this8;
					var fa1 = za1;
					var fb1 = zb1;
					var theta1 = Math.abs(fa1 - fb1);
					var clockwise1 = beta < gamma;
					var dif2 = clockwise1 ? theta1 : -theta1;
					dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
					break;
				case 2:
					var f4;
					if(beta >= 0 && beta > Math.PI) {
						f4 = beta;
					} else {
						var a4 = beta % (2 * Math.PI);
						f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
					}
					var this9 = f4;
					var za2 = this9;
					var f5;
					if(gamma >= 0 && gamma > Math.PI) {
						f5 = gamma;
					} else {
						var a5 = gamma % (2 * Math.PI);
						f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
					}
					var this10 = f5;
					var zb2 = this10;
					var fa2 = za2;
					var fb2 = zb2;
					var theta2 = Math.abs(fa2 - fb2);
					var smallest = theta2 <= Math.PI;
					var clockwise2 = beta < gamma;
					var dif3 = clockwise2 ? theta2 : -theta2;
					dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
					break;
				case 3:
					var f6;
					if(beta >= 0 && beta > Math.PI) {
						f6 = beta;
					} else {
						var a6 = beta % (2 * Math.PI);
						f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
					}
					var this11 = f6;
					var za3 = this11;
					var f7;
					if(gamma >= 0 && gamma > Math.PI) {
						f7 = gamma;
					} else {
						var a7 = gamma % (2 * Math.PI);
						f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
					}
					var this12 = f7;
					var zb3 = this12;
					var fa3 = za3;
					var fb3 = zb3;
					var theta3 = Math.abs(fa3 - fb3);
					var largest = theta3 > Math.PI;
					var clockwise3 = beta < gamma;
					var dif4 = clockwise3 ? theta3 : -theta3;
					dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
					break;
				}
				var positive = dif >= 0;
				var totalSteps = Math.ceil(Math.abs(dif) / step);
				var step1 = dif / totalSteps;
				var angle = beta;
				var cx;
				var cy;
				var bx = 0;
				var by = 0;
				var p2 = temp.length;
				var _g = 0;
				var _g1 = totalSteps + 1;
				while(_g < _g1) {
					var i = _g++;
					cx = ax + radius * Math.sin(angle);
					cy = ay + radius * Math.cos(angle);
					temp[p2++] = cx;
					temp[p2++] = cy;
					if(i != 0) {
						var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
						out[out.length] = t2;
					}
					angle += step1;
					bx = cx;
					by = cy;
				}
				var triArr = out;
				var _g2 = 0;
				while(_g2 < triArr.length) {
					var t3 = triArr[_g2];
					++_g2;
					this1[this1.length] = t3;
				}
				var pA = _this.pointsAnti.length;
				var len = temp.length / 2 | 0;
				var _g3 = 0;
				var _g11 = len + 2;
				while(_g3 < _g11) {
					var i1 = _g3++;
					_this.pointsAnti[pA++] = temp[i1];
				}
				var pC = _this.pointsClock.length;
				var _g21 = 1;
				var _g31 = len / 2 + 1 | 0;
				while(_g21 < _g31) {
					var i2 = _g21++;
					_this.pointsClock[pC++] = temp[temp.length - 2 * i2];
					_this.pointsClock[pC++] = temp[temp.length - 2 * i2 - 1];
				}
			}
		}
		this.x = x_;
		this.y = y_;
		var l = this.points.length;
		this.points[l] = [];
		this.points[l][0] = x_;
		this.points[l][1] = y_;
		this.pointsClock[this.pointsClock.length] = this.contour.pointsClock.slice();
		this.pointsAnti[this.pointsAnti.length] = this.contour.pointsAnti.slice();
		this.dim[this.dim.length] = { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.contour.reset();
	}
	,lastClock: function() {
		if(this.contour.pointsClock.length != 0) {
			this.pointsClock[this.pointsClock.length] = this.contour.pointsClock.slice();
			this.pointsAnti[this.pointsAnti.length] = this.contour.pointsAnti.slice();
		}
	}
	,getEdges: function() {
		var edges = [];
		var no = this.pointsClock.length;
		if(no > this.pointsAnti.length) {
			no = this.pointsAnti.length;
		}
		var pClock;
		var pAnti;
		var shape;
		var _g = 0;
		var _g1 = no;
		while(_g < _g1) {
			var s = _g++;
			pClock = this.pointsClock[s];
			pAnti = this.pointsAnti[s];
			var lc = pClock.length;
			var la = pAnti.length;
			edges[s] = [];
			shape = edges[s];
			var _g2 = 0;
			var _g11 = lc;
			while(_g2 < _g11) {
				var i = _g2++;
				shape[i] = pClock[i];
			}
			var j = shape.length;
			var l5 = la / 2 | 0;
			var _g21 = 0;
			var _g3 = l5;
			while(_g21 < _g3) {
				var i1 = _g21++;
				shape[j + i1 * 2] = pAnti[la - i1 * 2 - 1];
				shape[j + i1 * 2 + 1] = pAnti[la - i1 * 2];
			}
			j = shape.length;
			shape[j++] = pClock[0];
			shape[j] = pClock[1];
		}
		return edges;
	}
	,lineTo: function(x_,y_) {
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l = this.points.length;
			var p = this.points[l - 1];
			var l2 = p.length;
			p[l2] = x_;
			p[l2 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
	}
	,line: function(x_,y_) {
		console.log("trilateral/path/Base.hx:245:","lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )");
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.halfA = Math.PI / 2;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var dxPrev_ = _this.dx;
		var dyPrev_ = _this.dy;
		var exPrev_ = _this.ex;
		var eyPrev_ = _this.ey;
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var this1 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,exPrev_,eyPrev_,0);
		this1[this1.length] = tri;
		var this2 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(dxPrev_,dyPrev_,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this2[this2.length] = tri1;
	}
	,lineTrace: function(x_,y_) {
		console.log("trilateral/path/Base.hx:245:","lineTo( " + this.x + ", " + this.y + ", " + x_ + ", " + y_ + ", width )");
	}
	,quadTo: function(x1,y1,x2,y2) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x3 = x1 - x2;
		var y3 = y1 - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * x1 + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * y1 + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x2;
		this.y = y2;
	}
	,quadThru: function(x1,y1,x2,y2) {
		var newx = 2 * x1 - 0.5 * (this.x + x2);
		var newy = 2 * y1 - 0.5 * (this.y + y2);
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - newx;
		var y = ay - newy;
		var x3 = newx - x2;
		var y3 = newy - y2;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x3 * x3 + y3 * y3);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.quadStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,2) * ax + 2 * u * t * newx + Math.pow(t,2) * x2;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,2) * ay + 2 * u1 * t * newy + Math.pow(t,2) * y2;
			t += step;
		}
		p[l++] = x2;
		p[l++] = y2;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x2;
		this.y = y2;
		return;
	}
	,curveTo: function(x1,y1,x2,y2,x3,y3) {
		this.tempArr = [];
		var p = this.tempArr;
		var ax = this.x;
		var ay = this.y;
		var x = ax - x1;
		var y = ay - y1;
		var x4 = x1 - x2;
		var y4 = y1 - y2;
		var x5 = x2 - x3;
		var y5 = y2 - y3;
		var approxDistance = Math.sqrt(x * x + y * y) + Math.sqrt(x4 * x4 + y4 * y4) + Math.sqrt(x5 * x5 + y5 * y5);
		if(approxDistance == 0) {
			approxDistance = 0.000001;
		}
		var step = Math.min(1 / (approxDistance * 0.707),trilateral_geom_Algebra.cubicStep);
		var l = p.length;
		p[l++] = ax;
		p[l++] = ay;
		var t = step;
		while(t < 1.) {
			var u = 1 - t;
			p[l++] = Math.pow(u,3) * ax + 3 * Math.pow(u,2) * t * x1 + 3 * u * Math.pow(t,2) * x2 + Math.pow(t,3) * x3;
			var u1 = 1 - t;
			p[l++] = Math.pow(u1,3) * ay + 3 * Math.pow(u1,2) * t * y1 + 3 * u1 * Math.pow(t,2) * y2 + Math.pow(t,3) * y3;
			t += step;
		}
		p[l++] = x3;
		p[l++] = y3;
		var arr = this.tempArr;
		var l1 = arr.length;
		var i = 2;
		var x_ = arr[0];
		var y_ = arr[1];
		var repeat = this.x == x_ && this.y == y_;
		if(!repeat) {
			if(this.widthFunction != null) {
				this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
			}
			this.line(x_,y_);
			var l2 = this.points.length;
			var p1 = this.points[l2 - 1];
			var l21 = p1.length;
			p1[l21] = x_;
			p1[l21 + 1] = y_;
			var d = this.dim[this.dim.length - 1];
			if(x_ < d.minX) {
				d.minX = x_;
			}
			if(x_ > d.maxX) {
				d.maxX = x_;
			}
			if(y_ < d.minY) {
				d.minY = y_;
			}
			if(y_ > d.maxY) {
				d.maxY = y_;
			}
			this.x = x_;
			this.y = y_;
		}
		while(i < l1) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p2 = this.points[l3 - 1];
				var l22 = p2.length;
				p2[l22] = x_1;
				p2[l22 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
		this.x = x3;
		this.y = y3;
	}
	,plotCoord: function(arr,withMove) {
		if(withMove == null) {
			withMove = true;
		}
		var l = arr.length;
		var i = 2;
		if(withMove) {
			this.moveTo(arr[0],arr[1]);
		} else {
			var x_ = arr[0];
			var y_ = arr[1];
			var repeat = this.x == x_ && this.y == y_;
			if(!repeat) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_,y_);
				}
				this.line(x_,y_);
				var l1 = this.points.length;
				var p = this.points[l1 - 1];
				var l2 = p.length;
				p[l2] = x_;
				p[l2 + 1] = y_;
				var d = this.dim[this.dim.length - 1];
				if(x_ < d.minX) {
					d.minX = x_;
				}
				if(x_ > d.maxX) {
					d.maxX = x_;
				}
				if(y_ < d.minY) {
					d.minY = y_;
				}
				if(y_ > d.maxY) {
					d.maxY = y_;
				}
				this.x = x_;
				this.y = y_;
			}
		}
		while(i < l) {
			var x_1 = arr[i];
			var y_1 = arr[i + 1];
			var repeat1 = this.x == x_1 && this.y == y_1;
			if(!repeat1) {
				if(this.widthFunction != null) {
					this.width = this.widthFunction(this.width,this.x,this.x,x_1,y_1);
				}
				this.line(x_1,y_1);
				var l3 = this.points.length;
				var p1 = this.points[l3 - 1];
				var l21 = p1.length;
				p1[l21] = x_1;
				p1[l21 + 1] = y_1;
				var d1 = this.dim[this.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				this.x = x_1;
				this.y = y_1;
			}
			i += 2;
		}
	}
};
var trilateral_path_Fine = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
trilateral_path_Fine.__name__ = true;
trilateral_path_Fine.__super__ = trilateral_path_Base;
trilateral_path_Fine.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		var oldAngle = _this.dx != null ? _this.angle1 : null;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f = theta0;
			} else {
				var a = theta0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this1 = f;
			var za = this1;
			var f1;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f1 = theta1;
			} else {
				var a1 = theta1 % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this2 = f1;
			var zb = this2;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = theta0 < theta1;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f2 = theta0;
			} else {
				var a2 = theta0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this3 = f2;
			var za1 = this3;
			var f3;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f3 = theta1;
			} else {
				var a3 = theta1 % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this4 = f3;
			var zb1 = this4;
			var fa1 = za1;
			var fb1 = zb1;
			var theta2 = Math.abs(fa1 - fb1);
			var clockwise1 = theta0 < theta1;
			var dif2 = clockwise1 ? theta2 : -theta2;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f4 = theta0;
			} else {
				var a4 = theta0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this5 = f4;
			var za2 = this5;
			var f5;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f5 = theta1;
			} else {
				var a5 = theta1 % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this6 = f5;
			var zb2 = this6;
			var fa2 = za2;
			var fb2 = zb2;
			var theta3 = Math.abs(fa2 - fb2);
			var smallest = theta3 <= Math.PI;
			var clockwise2 = theta0 < theta1;
			var dif3 = clockwise2 ? theta3 : -theta3;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		case 3:
			var f6;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f6 = theta0;
			} else {
				var a6 = theta0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this7 = f6;
			var za3 = this7;
			var f7;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f7 = theta1;
			} else {
				var a7 = theta1 % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this8 = f7;
			var zb3 = this8;
			var fa3 = za3;
			var fb3 = zb3;
			var theta4 = Math.abs(fa3 - fb3);
			var largest = theta4 > Math.PI;
			var clockwise3 = theta0 < theta1;
			var dif4 = clockwise3 ? theta4 : -theta4;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
			break;
		}
		if(_this.count != 0) {
			var gamma = Math.abs(dif) / 2;
			var h = width_ / 2 / Math.cos(gamma);
			var f8;
			if(theta0 <= Math.PI && theta0 > -Math.PI) {
				f8 = theta0;
			} else {
				var a8 = (theta0 + Math.PI) % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 - Math.PI : a8 + Math.PI;
			}
			var this9 = f8;
			var start = this9;
			var start2 = start;
			var delta = start2 + dif / 2 + Math.PI;
			_this.jx = _this.ax + h * Math.sin(delta);
			_this.jy = _this.ay + h * Math.cos(delta);
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma1 = -_this.angle1 - Math.PI / 2 + Math.PI;
			var temp = [];
			var this10 = _this.triArr;
			var t = [];
			var this11;
			if(t == null) {
				var t1 = [];
				var this12 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this11 = this12;
			} else {
				this11 = t;
			}
			var this13 = this11;
			var out = this13;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f9;
				if(beta >= 0 && beta > Math.PI) {
					f9 = beta;
				} else {
					var a9 = beta % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this14 = f9;
				var za4 = this14;
				var f10;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f10 = gamma1;
				} else {
					var a10 = gamma1 % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this15 = f10;
				var zb4 = this15;
				var fa4 = za4;
				var fb4 = zb4;
				var theta5 = Math.abs(fa4 - fb4);
				var clockwise4 = beta < gamma1;
				var dif6 = clockwise4 ? theta5 : -theta5;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f11;
				if(beta >= 0 && beta > Math.PI) {
					f11 = beta;
				} else {
					var a11 = beta % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this16 = f11;
				var za5 = this16;
				var f12;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f12 = gamma1;
				} else {
					var a12 = gamma1 % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this17 = f12;
				var zb5 = this17;
				var fa5 = za5;
				var fb5 = zb5;
				var theta6 = Math.abs(fa5 - fb5);
				var clockwise5 = beta < gamma1;
				var dif7 = clockwise5 ? theta6 : -theta6;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f13;
				if(beta >= 0 && beta > Math.PI) {
					f13 = beta;
				} else {
					var a13 = beta % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this18 = f13;
				var za6 = this18;
				var f14;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f14 = gamma1;
				} else {
					var a14 = gamma1 % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this19 = f14;
				var zb6 = this19;
				var fa6 = za6;
				var fb6 = zb6;
				var theta7 = Math.abs(fa6 - fb6);
				var smallest1 = theta7 <= Math.PI;
				var clockwise6 = beta < gamma1;
				var dif8 = clockwise6 ? theta7 : -theta7;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			case 3:
				var f15;
				if(beta >= 0 && beta > Math.PI) {
					f15 = beta;
				} else {
					var a15 = beta % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this20 = f15;
				var za7 = this20;
				var f16;
				if(gamma1 >= 0 && gamma1 > Math.PI) {
					f16 = gamma1;
				} else {
					var a16 = gamma1 % (2 * Math.PI);
					f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
				}
				var this21 = f16;
				var zb7 = this21;
				var fa7 = za7;
				var fb7 = zb7;
				var theta8 = Math.abs(fa7 - fb7);
				var largest1 = theta8 > Math.PI;
				var clockwise7 = beta < gamma1;
				var dif9 = clockwise7 ? theta8 : -theta8;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
				break;
			}
			var positive = dif5 >= 0;
			var totalSteps = Math.ceil(Math.abs(dif5) / step);
			var step1 = dif5 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var p2 = temp.length;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				temp[p2++] = cx;
				temp[p2++] = cy;
				if(i != 0) {
					var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t2;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t3 = triArr[_g2];
				++_g2;
				this10[this10.length] = t3;
			}
			var pA = _this.pointsAnti.length;
			var len = temp.length / 2 | 0;
			var p4 = temp.length / 4 | 0;
			var _g3 = 0;
			var _g11 = p4;
			while(_g3 < _g11) {
				var i1 = _g3++;
				_this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
				_this.pointsAnti[pA++] = temp[len - 2 * i1];
			}
			var pC = _this.pointsClock.length;
			var _g21 = 0;
			var _g31 = p4;
			while(_g21 < _g31) {
				var i2 = _g21++;
				_this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
				_this.pointsClock[pC++] = temp[i2 * 2 + len];
			}
		}
		if(_this.count != 0) {
			_this.addQuads(clockWise,width_);
		}
		_this.quadIndex = _this.triArr.length;
		if(_this.count == 0) {
			_this.penultimateAX = _this.dxPrev;
			_this.penultimateAY = _this.dyPrev;
			_this.lastAntiX = _this.ex;
			_this.lastAntiY = _this.ey;
			_this.penultimateCX = _this.dx;
			_this.penultimateCY = _this.dy;
			_this.lastClockX = _this.exPrev;
			_this.lastClockY = _this.eyPrev;
			var this22 = _this.triArr;
			var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
			this22[this22.length] = tri;
			var this23 = _this.triArr;
			var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
			this23[this23.length] = tri1;
		} else {
			if(clockWise && !_this.lastClock) {
				_this.penultimateAX = _this.jx;
				_this.penultimateAY = _this.jy;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				_this.penultimateCX = _this.dx;
				_this.penultimateCY = _this.dy;
				_this.lastClockX = _this.exPrev;
				_this.lastClockY = _this.eyPrev;
				var this24 = _this.triArr;
				var tri2 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this24[this24.length] = tri2;
				var this25 = _this.triArr;
				var tri3 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this25[this25.length] = tri3;
			}
			if(clockWise && _this.lastClock) {
				_this.penultimateAX = _this.jx;
				_this.penultimateAY = _this.jy;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				_this.penultimateCX = _this.dx;
				_this.penultimateCY = _this.dy;
				_this.lastClockX = _this.exPrev;
				_this.lastClockY = _this.eyPrev;
				var this26 = _this.triArr;
				var tri4 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this26[this26.length] = tri4;
				var this27 = _this.triArr;
				var tri5 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
				this27[this27.length] = tri5;
			}
			if(!clockWise && !_this.lastClock) {
				_this.penultimateCX = _this.dx;
				_this.penultimateCY = _this.dy;
				_this.lastClockX = _this.jx;
				_this.lastClockY = _this.jy;
				_this.penultimateAX = _this.dxPrev;
				_this.penultimateAY = _this.dyPrev;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				var this28 = _this.triArr;
				var tri6 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.jx,_this.jy,0);
				this28[this28.length] = tri6;
				var this29 = _this.triArr;
				var tri7 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this29[this29.length] = tri7;
			}
			if(!clockWise && _this.lastClock) {
				_this.penultimateAX = _this.dxPrev;
				_this.penultimateAY = _this.dyPrev;
				_this.lastAntiX = _this.ex;
				_this.lastAntiY = _this.ey;
				_this.penultimateCX = _this.jx;
				_this.penultimateCY = _this.jy;
				_this.lastClockX = _this.dx;
				_this.lastClockY = _this.dy;
				var this30 = _this.triArr;
				var tri8 = new trilateral_tri_Trilateral(_this.jx,_this.jy,_this.dx,_this.dy,_this.ex,_this.ey,0);
				this30[this30.length] = tri8;
				var this31 = _this.triArr;
				var tri9 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,_this.ex,_this.ey,0);
				this31[this31.length] = tri9;
			}
		}
		if(clockWise) {
			var radius1 = width_ / 2;
			var edgePoly = _this.pointsClock;
			var t4 = [];
			var this32;
			if(t4 == null) {
				var t5 = [];
				var this33 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
				this32 = this33;
			} else {
				this32 = t4;
			}
			var this34 = this32;
			var out1 = this34;
			var pi1 = Math.PI;
			var step2 = pi1 * 2 / 36;
			var positive1 = dif >= 0;
			var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
			var step3 = dif / totalSteps1;
			var angle1 = theta0;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var p21 = edgePoly.length;
			var count = 0;
			var _g4 = 0;
			var _g12 = totalSteps1 + 1;
			while(_g4 < _g12) {
				var i3 = _g4++;
				cx1 = ax_ + radius1 * Math.sin(angle1);
				cy1 = ay_ + radius1 * Math.cos(angle1);
				if(i3 != 0) {
					var t6 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
					out1[out1.length] = t6;
					edgePoly[p21++] = cx1;
					edgePoly[p21++] = cy1;
				}
				angle1 += step3;
				bx1 = cx1;
				by1 = cy1;
			}
			var trilateralArray = out1;
			var this35 = _this.triArr;
			var _g5 = 0;
			while(_g5 < trilateralArray.length) {
				var t7 = trilateralArray[_g5];
				++_g5;
				this35[this35.length] = t7;
			}
		} else {
			var radius2 = width_ / 2;
			var edgePoly1 = _this.pointsAnti;
			var t8 = [];
			var this36;
			if(t8 == null) {
				var t9 = [];
				var this37 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
				this36 = this37;
			} else {
				this36 = t8;
			}
			var this38 = this36;
			var out2 = this38;
			var pi2 = Math.PI;
			var step4 = pi2 * 2 / 36;
			var positive2 = dif >= 0;
			var totalSteps2 = Math.ceil(Math.abs(dif) / step4);
			var step5 = dif / totalSteps2;
			var angle2 = theta0;
			var cx2;
			var cy2;
			var bx2 = 0;
			var by2 = 0;
			var p22 = edgePoly1.length;
			var count1 = 0;
			var _g6 = 0;
			var _g13 = totalSteps2 + 1;
			while(_g6 < _g13) {
				var i4 = _g6++;
				cx2 = ax_ + radius2 * Math.sin(angle2);
				cy2 = ay_ + radius2 * Math.cos(angle2);
				if(i4 != 0) {
					var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
					out2[out2.length] = t10;
					edgePoly1[p22++] = cx2;
					edgePoly1[p22++] = cy2;
				}
				angle2 += step5;
				bx2 = cx2;
				by2 = cy2;
			}
			var trilateralArray1 = out2;
			var this39 = _this.triArr;
			var _g7 = 0;
			while(_g7 < trilateralArray1.length) {
				var t11 = trilateralArray1[_g7];
				++_g7;
				this39[this39.length] = t11;
			}
		}
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		if(_this.count != 0) {
			if(clockWise) {
				var this40 = _this.triArr;
				var tri10 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxOld,_this.dyOld,_this.jx,_this.jy,0);
				this40[this40.length] = tri10;
				var this41 = _this.triArr;
				var tri11 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exPrev,_this.eyPrev,_this.jx,_this.jy,0);
				this41[this41.length] = tri11;
			} else {
				var this42 = _this.triArr;
				var tri12 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.exOld,_this.eyOld,_this.jx,_this.jy,0);
				this42[this42.length] = tri12;
				var this43 = _this.triArr;
				var tri13 = new trilateral_tri_Trilateral(_this.ax,_this.ay,_this.dxPrev,_this.dyPrev,_this.jx,_this.jy,0);
				this43[this43.length] = tri13;
			}
		}
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
});
var trilateral_path_FineOverlap = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
trilateral_path_FineOverlap.__name__ = true;
trilateral_path_FineOverlap.__super__ = trilateral_path_Base;
trilateral_path_FineOverlap.prototype = $extend(trilateral_path_Base.prototype,{
	line: function(x_,y_) {
		var _this = this.contour;
		var ax_ = this.x;
		var ay_ = this.y;
		var width_ = this.width;
		var oldAngle = _this.dx != null ? _this.angle1 : null;
		_this.halfA = Math.PI / 2;
		_this.ax = x_;
		_this.ay = y_;
		_this.bx = ax_;
		_this.by = ay_;
		_this.beta = Math.PI / 2 - _this.halfA;
		_this.r = width_ / 2 * Math.cos(_this.beta);
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		_this.ax = ax_;
		_this.ay = ay_;
		_this.bx = x_;
		_this.by = y_;
		_this.theta = Math.atan2(_this.ay - _this.by,_this.ax - _this.bx);
		if(_this.theta > 0) {
			if(_this.halfA < 0) {
				_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
				_this.angle1 = _this.theta - _this.halfA;
			} else {
				_this.angle1 = _this.theta + _this.halfA - Math.PI;
				_this.angle2 = _this.theta + _this.halfA;
			}
		} else if(_this.halfA > 0) {
			_this.angle1 = _this.theta + _this.halfA - Math.PI;
			_this.angle2 = _this.theta + _this.halfA;
		} else {
			_this.angle2 = _this.theta + _this.halfA + Math.PI / 2;
			_this.angle1 = _this.theta - _this.halfA;
		}
		if(_this.dxPrev != null) {
			_this.dxOld = _this.dxPrev;
		}
		if(_this.dyPrev != null) {
			_this.dyOld = _this.dyPrev;
		}
		if(_this.exPrev != null) {
			_this.exOld = _this.exPrev;
		}
		if(_this.eyPrev != null) {
			_this.eyOld = _this.eyPrev;
		}
		if(_this.dx != null) {
			_this.dxPrev = _this.dx;
		}
		if(_this.dy != null) {
			_this.dyPrev = _this.dy;
		}
		if(_this.ex != null) {
			_this.exPrev = _this.ex;
		}
		if(_this.ey != null) {
			_this.eyPrev = _this.ey;
		}
		_this.dx = _this.bx + _this.r * Math.cos(_this.angle1);
		_this.dy = _this.by + _this.r * Math.sin(_this.angle1);
		_this.ex = _this.bx + _this.r * Math.cos(_this.angle2);
		_this.ey = _this.by + _this.r * Math.sin(_this.angle2);
		var x = _this.dxOld - x_;
		var y = _this.dyOld - y_;
		var x1 = _this.exOld - x_;
		var y1 = _this.eyOld - y_;
		var clockWise = x * x + y * y > x1 * x1 + y1 * y1;
		var theta0;
		var theta1;
		if(clockWise) {
			theta0 = -Math.atan2(_this.ay - _this.dyOld,_this.ax - _this.dxOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.eyPrev,_this.ax - _this.exPrev) - Math.PI / 2;
		} else {
			theta0 = -Math.atan2(_this.ay - _this.eyOld,_this.ax - _this.exOld) - Math.PI / 2;
			theta1 = -Math.atan2(_this.ay - _this.dyPrev,_this.ax - _this.dxPrev) - Math.PI / 2;
		}
		var dif;
		switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
		case 0:
			var f;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f = theta0;
			} else {
				var a = theta0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this1 = f;
			var za = this1;
			var f1;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f1 = theta1;
			} else {
				var a1 = theta1 % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this2 = f1;
			var zb = this2;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = theta0 < theta1;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f2 = theta0;
			} else {
				var a2 = theta0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this3 = f2;
			var za1 = this3;
			var f3;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f3 = theta1;
			} else {
				var a3 = theta1 % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this4 = f3;
			var zb1 = this4;
			var fa1 = za1;
			var fb1 = zb1;
			var theta2 = Math.abs(fa1 - fb1);
			var clockwise1 = theta0 < theta1;
			var dif2 = clockwise1 ? theta2 : -theta2;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f4 = theta0;
			} else {
				var a4 = theta0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this5 = f4;
			var za2 = this5;
			var f5;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f5 = theta1;
			} else {
				var a5 = theta1 % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this6 = f5;
			var zb2 = this6;
			var fa2 = za2;
			var fb2 = zb2;
			var theta3 = Math.abs(fa2 - fb2);
			var smallest = theta3 <= Math.PI;
			var clockwise2 = theta0 < theta1;
			var dif3 = clockwise2 ? theta3 : -theta3;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		case 3:
			var f6;
			if(theta0 >= 0 && theta0 > Math.PI) {
				f6 = theta0;
			} else {
				var a6 = theta0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this7 = f6;
			var za3 = this7;
			var f7;
			if(theta1 >= 0 && theta1 > Math.PI) {
				f7 = theta1;
			} else {
				var a7 = theta1 % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this8 = f7;
			var zb3 = this8;
			var fa3 = za3;
			var fb3 = zb3;
			var theta4 = Math.abs(fa3 - fb3);
			var largest = theta4 > Math.PI;
			var clockwise3 = theta0 < theta1;
			var dif4 = clockwise3 ? theta4 : -theta4;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta4) : 2 * Math.PI - theta4;
			break;
		}
		if(_this.count == 0 && (_this.endLine == 1 || _this.endLine == 3)) {
			var ax = _this.ax;
			var ay = _this.ay;
			var radius = width_ / 2;
			var beta = -_this.angle1 - Math.PI / 2;
			var gamma = -_this.angle1 - Math.PI / 2 + Math.PI;
			var temp = [];
			var this9 = _this.triArr;
			var t = [];
			var this10;
			if(t == null) {
				var t1 = [];
				var this11 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this10 = this11;
			} else {
				this10 = t;
			}
			var this12 = this10;
			var out = this12;
			var pi = Math.PI;
			var step = pi * 2 / 36;
			var dif5;
			switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
			case 0:
				var f8;
				if(beta >= 0 && beta > Math.PI) {
					f8 = beta;
				} else {
					var a8 = beta % (2 * Math.PI);
					f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
				}
				var this13 = f8;
				var za4 = this13;
				var f9;
				if(gamma >= 0 && gamma > Math.PI) {
					f9 = gamma;
				} else {
					var a9 = gamma % (2 * Math.PI);
					f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
				}
				var this14 = f9;
				var zb4 = this14;
				var fa4 = za4;
				var fb4 = zb4;
				var theta5 = Math.abs(fa4 - fb4);
				var clockwise4 = beta < gamma;
				var dif6 = clockwise4 ? theta5 : -theta5;
				dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
				break;
			case 1:
				var f10;
				if(beta >= 0 && beta > Math.PI) {
					f10 = beta;
				} else {
					var a10 = beta % (2 * Math.PI);
					f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
				}
				var this15 = f10;
				var za5 = this15;
				var f11;
				if(gamma >= 0 && gamma > Math.PI) {
					f11 = gamma;
				} else {
					var a11 = gamma % (2 * Math.PI);
					f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
				}
				var this16 = f11;
				var zb5 = this16;
				var fa5 = za5;
				var fb5 = zb5;
				var theta6 = Math.abs(fa5 - fb5);
				var clockwise5 = beta < gamma;
				var dif7 = clockwise5 ? theta6 : -theta6;
				dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
				break;
			case 2:
				var f12;
				if(beta >= 0 && beta > Math.PI) {
					f12 = beta;
				} else {
					var a12 = beta % (2 * Math.PI);
					f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
				}
				var this17 = f12;
				var za6 = this17;
				var f13;
				if(gamma >= 0 && gamma > Math.PI) {
					f13 = gamma;
				} else {
					var a13 = gamma % (2 * Math.PI);
					f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
				}
				var this18 = f13;
				var zb6 = this18;
				var fa6 = za6;
				var fb6 = zb6;
				var theta7 = Math.abs(fa6 - fb6);
				var smallest1 = theta7 <= Math.PI;
				var clockwise6 = beta < gamma;
				var dif8 = clockwise6 ? theta7 : -theta7;
				dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
				break;
			case 3:
				var f14;
				if(beta >= 0 && beta > Math.PI) {
					f14 = beta;
				} else {
					var a14 = beta % (2 * Math.PI);
					f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
				}
				var this19 = f14;
				var za7 = this19;
				var f15;
				if(gamma >= 0 && gamma > Math.PI) {
					f15 = gamma;
				} else {
					var a15 = gamma % (2 * Math.PI);
					f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
				}
				var this20 = f15;
				var zb7 = this20;
				var fa7 = za7;
				var fb7 = zb7;
				var theta8 = Math.abs(fa7 - fb7);
				var largest1 = theta8 > Math.PI;
				var clockwise7 = beta < gamma;
				var dif9 = clockwise7 ? theta8 : -theta8;
				dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta8) : 2 * Math.PI - theta8;
				break;
			}
			var positive = dif5 >= 0;
			var totalSteps = Math.ceil(Math.abs(dif5) / step);
			var step1 = dif5 / totalSteps;
			var angle = beta;
			var cx;
			var cy;
			var bx = 0;
			var by = 0;
			var p2 = temp.length;
			var _g = 0;
			var _g1 = totalSteps + 1;
			while(_g < _g1) {
				var i = _g++;
				cx = ax + radius * Math.sin(angle);
				cy = ay + radius * Math.cos(angle);
				temp[p2++] = cx;
				temp[p2++] = cy;
				if(i != 0) {
					var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
					out[out.length] = t2;
				}
				angle += step1;
				bx = cx;
				by = cy;
			}
			var triArr = out;
			var _g2 = 0;
			while(_g2 < triArr.length) {
				var t3 = triArr[_g2];
				++_g2;
				this9[this9.length] = t3;
			}
			var pA = _this.pointsAnti.length;
			var len = temp.length / 2 | 0;
			var p4 = temp.length / 4 | 0;
			var _g3 = 0;
			var _g11 = p4;
			while(_g3 < _g11) {
				var i1 = _g3++;
				_this.pointsAnti[pA++] = temp[len - 2 * i1 + 1];
				_this.pointsAnti[pA++] = temp[len - 2 * i1];
			}
			var pC = _this.pointsClock.length;
			var _g21 = 0;
			var _g31 = p4;
			while(_g21 < _g31) {
				var i2 = _g21++;
				_this.pointsClock[pC++] = temp[i2 * 2 + len + 1];
				_this.pointsClock[pC++] = temp[i2 * 2 + len];
			}
		}
		var this21 = _this.triArr;
		var tri = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.ex,_this.ey,0);
		this21[this21.length] = tri;
		var this22 = _this.triArr;
		var tri1 = new trilateral_tri_Trilateral(_this.dxPrev,_this.dyPrev,_this.dx,_this.dy,_this.exPrev,_this.eyPrev,0);
		this22[this22.length] = tri1;
		if(clockWise) {
			var radius1 = width_ / 2;
			var edgePoly = _this.pointsClock;
			var t4 = [];
			var this23;
			if(t4 == null) {
				var t5 = [];
				var this24 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
				this23 = this24;
			} else {
				this23 = t4;
			}
			var this25 = this23;
			var out1 = this25;
			var pi1 = Math.PI;
			var step2 = pi1 * 2 / 36;
			var positive1 = dif >= 0;
			var totalSteps1 = Math.ceil(Math.abs(dif) / step2);
			var step3 = dif / totalSteps1;
			var angle1 = theta0;
			var cx1;
			var cy1;
			var bx1 = 0;
			var by1 = 0;
			var p21 = edgePoly.length;
			var count = 0;
			var _g4 = 0;
			var _g12 = totalSteps1 + 1;
			while(_g4 < _g12) {
				var i3 = _g4++;
				cx1 = ax_ + radius1 * Math.sin(angle1);
				cy1 = ay_ + radius1 * Math.cos(angle1);
				if(i3 != 0) {
					var t6 = new trilateral_tri_Trilateral(ax_,ay_,bx1,by1,cx1,cy1);
					out1[out1.length] = t6;
					edgePoly[p21++] = cx1;
					edgePoly[p21++] = cy1;
				}
				angle1 += step3;
				bx1 = cx1;
				by1 = cy1;
			}
			var trilateralArray = out1;
			var this26 = _this.triArr;
			var _g5 = 0;
			while(_g5 < trilateralArray.length) {
				var t7 = trilateralArray[_g5];
				++_g5;
				this26[this26.length] = t7;
			}
		} else {
			var radius2 = width_ / 2;
			var edgePoly1 = _this.pointsAnti;
			var t8 = [];
			var this27;
			if(t8 == null) {
				var t9 = [];
				var this28 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
				this27 = this28;
			} else {
				this27 = t8;
			}
			var this29 = this27;
			var out2 = this29;
			var pi2 = Math.PI;
			var step4 = pi2 * 2 / 36;
			var positive2 = dif >= 0;
			var totalSteps2 = Math.ceil(Math.abs(dif) / step4);
			var step5 = dif / totalSteps2;
			var angle2 = theta0;
			var cx2;
			var cy2;
			var bx2 = 0;
			var by2 = 0;
			var p22 = edgePoly1.length;
			var count1 = 0;
			var _g6 = 0;
			var _g13 = totalSteps2 + 1;
			while(_g6 < _g13) {
				var i4 = _g6++;
				cx2 = ax_ + radius2 * Math.sin(angle2);
				cy2 = ay_ + radius2 * Math.cos(angle2);
				if(i4 != 0) {
					var t10 = new trilateral_tri_Trilateral(ax_,ay_,bx2,by2,cx2,cy2);
					out2[out2.length] = t10;
					edgePoly1[p22++] = cx2;
					edgePoly1[p22++] = cy2;
				}
				angle2 += step5;
				bx2 = cx2;
				by2 = cy2;
			}
			var trilateralArray1 = out2;
			var this30 = _this.triArr;
			var _g7 = 0;
			while(_g7 < trilateralArray1.length) {
				var t11 = trilateralArray1[_g7];
				++_g7;
				this30[this30.length] = t11;
			}
		}
		_this.kax = _this.dxPrev;
		_this.kay = _this.dyPrev;
		_this.kbx = _this.dx;
		_this.kby = _this.dy;
		_this.ncx = _this.exPrev;
		_this.ncy = _this.eyPrev;
		_this.kcx = _this.ex;
		_this.kcy = _this.ey;
		_this.jxOld = _this.jx;
		_this.jyOld = _this.jy;
		_this.lastClock = clockWise;
		_this.count++;
	}
});
var trilateral_polys_Poly = function() { };
trilateral_polys_Poly.__name__ = true;
trilateral_polys_Poly.circle = function(ax,ay,radius,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var theta = pi / 2 + omega;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.ellipse = function(ax,ay,rx,ry,sides) {
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + rx * Math.sin(theta);
		by = ay + ry * Math.cos(theta);
		theta += step;
		cx = ax + rx * Math.sin(theta);
		cy = ay + ry * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.pie = function(ax,ay,radius,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this3 = f;
		var za = this3;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this4 = f1;
		var zb = this4;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this5 = f2;
		var za1 = this5;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this6 = f3;
		var zb1 = this6;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this7 = f4;
		var za2 = this7;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this8 = f5;
		var zb2 = this8;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this9 = f6;
		var za3 = this9;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this10 = f7;
		var zb3 = this10;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t1;
			if(mark != 0) {
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.pieX = function(ax,ay,radius,beta,gamma,prefer,edgePoly,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this3 = f;
		var za = this3;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this4 = f1;
		var zb = this4;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this5 = f2;
		var za1 = this5;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this6 = f3;
		var zb1 = this6;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this7 = f4;
		var za2 = this7;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this8 = f5;
		var zb2 = this8;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this9 = f6;
		var za3 = this9;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this10 = f7;
		var zb3 = this10;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var p2 = edgePoly.length;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		edgePoly[p2++] = cx;
		edgePoly[p2++] = cy;
		if(i != 0) {
			var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t1;
			if(mark != 0) {
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.ellpisePie = function(ax,ay,rx,ry,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this3 = f;
		var za = this3;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this4 = f1;
		var zb = this4;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this5 = f2;
		var za1 = this5;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this6 = f3;
		var zb1 = this6;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this7 = f4;
		var za2 = this7;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this8 = f5;
		var zb2 = this8;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this9 = f6;
		var za3 = this9;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this10 = f7;
		var zb3 = this10;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + rx * Math.sin(angle);
		cy = ay + ry * Math.cos(angle);
		if(i != 0) {
			var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t1;
			if(mark != 0) {
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.pieDif = function(ax,ay,radius,beta,dif,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t1;
			if(mark != 0) {
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.pieDifX = function(ax,ay,radius,beta,dif,edgePoly,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var p2 = edgePoly.length;
	var count = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
			out[out.length] = t1;
			if(mark != 0) {
				t1.mark = mark;
			}
			edgePoly[p2++] = cx;
			edgePoly[p2++] = cy;
		}
		angle += step1;
		bx = cx;
		by = cy;
	}
	return out;
};
trilateral_polys_Poly.arc = function(ax,ay,radius,width,beta,gamma,prefer,mark,sides) {
	if(sides == null) {
		sides = 36;
	}
	if(mark == null) {
		mark = 0;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var step = pi * 2 / sides;
	var dif;
	switch(prefer._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this3 = f;
		var za = this3;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this4 = f1;
		var zb = this4;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this5 = f2;
		var za1 = this5;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this6 = f3;
		var zb1 = this6;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this7 = f4;
		var za2 = this7;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this8 = f5;
		var zb2 = this8;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this9 = f6;
		var za3 = this9;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this10 = f7;
		var zb3 = this10;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx;
	var cy;
	var bx = 0;
	var by = 0;
	var dx = 0;
	var dy = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - width;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx = ax + radius * Math.sin(angle);
		cy = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(i != 0) {
			var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
			var t1 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
			out[out.length] = t0;
			out[out.length] = t1;
			if(mark != 0) {
				t0.mark = mark;
				t1.mark = mark;
			}
		}
		angle += step1;
		bx = cx;
		by = cy;
		dx = ex;
		dy = ey;
	}
	return out;
};
trilateral_polys_Poly.circleMarked = function(ax,ay,radius,mark,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var theta = pi / 2 + omega;
	var step = pi * 2 / sides;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var t1 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = t1;
		t1.mark = mark;
	}
	return out;
};
trilateral_polys_Poly.circleOnSide = function(ax,ay,radius,sides,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	theta -= step / 2 + omega;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + radius * Math.sin(theta);
		by = ay + radius * Math.cos(theta);
		theta += step;
		cx = ax + radius * Math.sin(theta);
		cy = ay + radius * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.ellipseOnSide = function(ax,ay,rx,ry,sides) {
	if(sides == null) {
		sides = 36;
	}
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var theta = pi / 2;
	var step = pi * 2 / sides;
	theta -= step / 2;
	var bx;
	var by;
	var cx;
	var cy;
	var _g = 0;
	var _g1 = sides;
	while(_g < _g1) {
		var i = _g++;
		bx = ax + rx * Math.sin(theta);
		by = ay + rx * Math.cos(theta);
		theta += step;
		cx = ax + rx * Math.sin(theta);
		cy = ay + ry * Math.cos(theta);
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
		out[out.length] = tri;
	}
	return out;
};
trilateral_polys_Poly.shape = function(x,y,radius,p,omega) {
	if(omega == null) {
		omega = 0.;
	}
	if((p & 1) == 0) {
		var t = [];
		var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
		var this2 = this1;
		var out = this2;
		var pi = Math.PI;
		var theta = pi / 2;
		var step = pi * 2 / p;
		theta -= step / 2 + omega;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = p;
		while(_g < _g1) {
			var i = _g++;
			bx = x + radius * Math.sin(theta);
			by = y + radius * Math.cos(theta);
			theta += step;
			cx = x + radius * Math.sin(theta);
			cy = y + radius * Math.cos(theta);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		return out;
	} else {
		var t1 = [];
		var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
		var this4 = this3;
		var out1 = this4;
		var pi1 = Math.PI;
		var theta1 = pi1 / 2 + omega;
		var step1 = pi1 * 2 / p;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g2 = 0;
		var _g11 = p;
		while(_g2 < _g11) {
			var i1 = _g2++;
			bx1 = x + radius * Math.sin(theta1);
			by1 = y + radius * Math.cos(theta1);
			theta1 += step1;
			cx1 = x + radius * Math.sin(theta1);
			cy1 = y + radius * Math.cos(theta1);
			var tri1 = new trilateral_tri_Trilateral(x,y,bx1,by1,cx1,cy1);
			out1[out1.length] = tri1;
		}
		return out1;
	}
};
trilateral_polys_Poly.roundedRectangle = function(x,y,width,height,radius) {
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cx = bx;
	var cy = y + height - radius;
	var dx = ax;
	var dy = cy;
	var ax1 = ax;
	var ay1 = y;
	var bx1 = ax + (width - radius * 2);
	var by1 = ay1;
	var cx1 = bx1;
	var cy1 = ay1 + height;
	var dx1 = ax;
	var dy1 = cy1;
	var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
	var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var dimY = height - 2 * radius;
	var ax2 = x;
	var ay2 = ay;
	var bx2 = x + radius;
	var by2 = ay2;
	var cx2 = bx2;
	var cy2 = ay2 + dimY;
	var dx2 = x;
	var dy2 = cy2;
	var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
	var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var ax3 = bx;
	var ay3 = by;
	var bx3 = bx + radius;
	var by3 = ay3;
	var cx3 = bx3;
	var cy3 = ay3 + dimY;
	var dx3 = bx;
	var dy3 = cy3;
	var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
	var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var beta = -pi;
	var gamma = -pi_2;
	var t1 = [];
	var this3;
	if(t1 == null) {
		var t2 = [];
		var this4 = t2 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t2;
		this3 = this4;
	} else {
		this3 = t1;
	}
	var this5 = this3;
	var out1 = this5;
	var pi1 = Math.PI;
	var step = pi1 * 2 / 36;
	var dif;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this6 = f;
		var za = this6;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this7 = f1;
		var zb = this7;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this8 = f2;
		var za1 = this8;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this9 = f3;
		var zb1 = this9;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this10 = f4;
		var za2 = this10;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this11 = f5;
		var zb2 = this11;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this12 = f6;
		var za3 = this12;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this13 = f7;
		var zb3 = this13;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx4;
	var cy4;
	var bx4 = 0;
	var by4 = 0;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx4 = ax + radius * Math.sin(angle);
		cy4 = ay + radius * Math.cos(angle);
		if(i != 0) {
			var t3 = new trilateral_tri_Trilateral(ax,ay,bx4,by4,cx4,cy4);
			out1[out1.length] = t3;
		}
		angle += step1;
		bx4 = cx4;
		by4 = cy4;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t4 = triArr[_g2];
		++_g2;
		out[out.length] = t4;
	}
	var t5 = [];
	var this14;
	if(t5 == null) {
		var t6 = [];
		var this15 = t6 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t6;
		this14 = this15;
	} else {
		this14 = t5;
	}
	var this16 = this14;
	var out2 = this16;
	var pi2 = Math.PI;
	var step2 = pi2 * 2 / 36;
	var dif5;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f8;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f8 = pi_2;
		} else {
			var a8 = pi_2 % (2 * Math.PI);
			f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this17 = f8;
		var za4 = this17;
		var f9;
		if(pi >= 0 && pi > Math.PI) {
			f9 = pi;
		} else {
			var a9 = pi % (2 * Math.PI);
			f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
		}
		var this18 = f9;
		var zb4 = this18;
		var fa4 = za4;
		var fb4 = zb4;
		var theta4 = Math.abs(fa4 - fb4);
		var clockwise4 = pi_2 < pi;
		var dif6 = clockwise4 ? theta4 : -theta4;
		dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
		break;
	case 1:
		var f10;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f10 = pi_2;
		} else {
			var a10 = pi_2 % (2 * Math.PI);
			f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
		}
		var this19 = f10;
		var za5 = this19;
		var f11;
		if(pi >= 0 && pi > Math.PI) {
			f11 = pi;
		} else {
			var a11 = pi % (2 * Math.PI);
			f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
		}
		var this20 = f11;
		var zb5 = this20;
		var fa5 = za5;
		var fb5 = zb5;
		var theta5 = Math.abs(fa5 - fb5);
		var clockwise5 = pi_2 < pi;
		var dif7 = clockwise5 ? theta5 : -theta5;
		dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
		break;
	case 2:
		var f12;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f12 = pi_2;
		} else {
			var a12 = pi_2 % (2 * Math.PI);
			f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
		}
		var this21 = f12;
		var za6 = this21;
		var f13;
		if(pi >= 0 && pi > Math.PI) {
			f13 = pi;
		} else {
			var a13 = pi % (2 * Math.PI);
			f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
		}
		var this22 = f13;
		var zb6 = this22;
		var fa6 = za6;
		var fb6 = zb6;
		var theta6 = Math.abs(fa6 - fb6);
		var smallest1 = theta6 <= Math.PI;
		var clockwise6 = pi_2 < pi;
		var dif8 = clockwise6 ? theta6 : -theta6;
		dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
		break;
	case 3:
		var f14;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f14 = pi_2;
		} else {
			var a14 = pi_2 % (2 * Math.PI);
			f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
		}
		var this23 = f14;
		var za7 = this23;
		var f15;
		if(pi >= 0 && pi > Math.PI) {
			f15 = pi;
		} else {
			var a15 = pi % (2 * Math.PI);
			f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
		}
		var this24 = f15;
		var zb7 = this24;
		var fa7 = za7;
		var fb7 = zb7;
		var theta7 = Math.abs(fa7 - fb7);
		var largest1 = theta7 > Math.PI;
		var clockwise7 = pi_2 < pi;
		var dif9 = clockwise7 ? theta7 : -theta7;
		dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
		break;
	}
	var positive1 = dif5 >= 0;
	var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
	var step3 = dif5 / totalSteps1;
	var angle1 = pi_2;
	var cx5;
	var cy5;
	var bx5 = 0;
	var by5 = 0;
	var _g3 = 0;
	var _g11 = totalSteps1 + 1;
	while(_g3 < _g11) {
		var i1 = _g3++;
		cx5 = bx + radius * Math.sin(angle1);
		cy5 = by + radius * Math.cos(angle1);
		if(i1 != 0) {
			var t7 = new trilateral_tri_Trilateral(bx,by,bx5,by5,cx5,cy5);
			out2[out2.length] = t7;
		}
		angle1 += step3;
		bx5 = cx5;
		by5 = cy5;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t8 = triArr1[_g4];
		++_g4;
		out[out.length] = t8;
	}
	var t9 = [];
	var this25;
	if(t9 == null) {
		var t10 = [];
		var this26 = t10 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t10;
		this25 = this26;
	} else {
		this25 = t9;
	}
	var this27 = this25;
	var out3 = this27;
	var pi3 = Math.PI;
	var step4 = pi3 * 2 / 36;
	var dif10;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f16;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f16 = pi_2;
		} else {
			var a16 = pi_2 % (2 * Math.PI);
			f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
		}
		var this28 = f16;
		var za8 = this28;
		var f17;
		if(0 > Math.PI) {
			f17 = 0;
		} else {
			var a17 = 0 % (2 * Math.PI);
			f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
		}
		var this29 = f17;
		var zb8 = this29;
		var fa8 = za8;
		var fb8 = zb8;
		var theta8 = Math.abs(fa8 - fb8);
		var clockwise8 = pi_2 < 0;
		var dif11 = clockwise8 ? theta8 : -theta8;
		dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
		break;
	case 1:
		var f18;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f18 = pi_2;
		} else {
			var a18 = pi_2 % (2 * Math.PI);
			f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
		}
		var this30 = f18;
		var za9 = this30;
		var f19;
		if(0 > Math.PI) {
			f19 = 0;
		} else {
			var a19 = 0 % (2 * Math.PI);
			f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
		}
		var this31 = f19;
		var zb9 = this31;
		var fa9 = za9;
		var fb9 = zb9;
		var theta9 = Math.abs(fa9 - fb9);
		var clockwise9 = pi_2 < 0;
		var dif12 = clockwise9 ? theta9 : -theta9;
		dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
		break;
	case 2:
		var f20;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f20 = pi_2;
		} else {
			var a20 = pi_2 % (2 * Math.PI);
			f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
		}
		var this32 = f20;
		var za10 = this32;
		var f21;
		if(0 > Math.PI) {
			f21 = 0;
		} else {
			var a21 = 0 % (2 * Math.PI);
			f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
		}
		var this33 = f21;
		var zb10 = this33;
		var fa10 = za10;
		var fb10 = zb10;
		var theta10 = Math.abs(fa10 - fb10);
		var smallest2 = theta10 <= Math.PI;
		var clockwise10 = pi_2 < 0;
		var dif13 = clockwise10 ? theta10 : -theta10;
		dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
		break;
	case 3:
		var f22;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f22 = pi_2;
		} else {
			var a22 = pi_2 % (2 * Math.PI);
			f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
		}
		var this34 = f22;
		var za11 = this34;
		var f23;
		if(0 > Math.PI) {
			f23 = 0;
		} else {
			var a23 = 0 % (2 * Math.PI);
			f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
		}
		var this35 = f23;
		var zb11 = this35;
		var fa11 = za11;
		var fb11 = zb11;
		var theta11 = Math.abs(fa11 - fb11);
		var largest2 = theta11 > Math.PI;
		var clockwise11 = pi_2 < 0;
		var dif14 = clockwise11 ? theta11 : -theta11;
		dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
		break;
	}
	var positive2 = dif10 >= 0;
	var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
	var step5 = dif10 / totalSteps2;
	var angle2 = pi_2;
	var cx6;
	var cy6;
	var bx6 = 0;
	var by6 = 0;
	var _g5 = 0;
	var _g12 = totalSteps2 + 1;
	while(_g5 < _g12) {
		var i2 = _g5++;
		cx6 = cx + radius * Math.sin(angle2);
		cy6 = cy + radius * Math.cos(angle2);
		if(i2 != 0) {
			var t11 = new trilateral_tri_Trilateral(cx,cy,bx6,by6,cx6,cy6);
			out3[out3.length] = t11;
		}
		angle2 += step5;
		bx6 = cx6;
		by6 = cy6;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t12 = triArr2[_g6];
		++_g6;
		out[out.length] = t12;
	}
	var gamma1 = -pi_2;
	var t13 = [];
	var this36;
	if(t13 == null) {
		var t14 = [];
		var this37 = t14 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t14;
		this36 = this37;
	} else {
		this36 = t13;
	}
	var this38 = this36;
	var out4 = this38;
	var pi4 = Math.PI;
	var step6 = pi4 * 2 / 36;
	var dif15;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f24;
		if(0 > Math.PI) {
			f24 = 0;
		} else {
			var a24 = 0 % (2 * Math.PI);
			f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
		}
		var this39 = f24;
		var za12 = this39;
		var f25;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f25 = gamma1;
		} else {
			var a25 = gamma1 % (2 * Math.PI);
			f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
		}
		var this40 = f25;
		var zb12 = this40;
		var fa12 = za12;
		var fb12 = zb12;
		var theta12 = Math.abs(fa12 - fb12);
		var clockwise12 = 0 < gamma1;
		var dif16 = clockwise12 ? theta12 : -theta12;
		dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
		break;
	case 1:
		var f26;
		if(0 > Math.PI) {
			f26 = 0;
		} else {
			var a26 = 0 % (2 * Math.PI);
			f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
		}
		var this41 = f26;
		var za13 = this41;
		var f27;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f27 = gamma1;
		} else {
			var a27 = gamma1 % (2 * Math.PI);
			f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
		}
		var this42 = f27;
		var zb13 = this42;
		var fa13 = za13;
		var fb13 = zb13;
		var theta13 = Math.abs(fa13 - fb13);
		var clockwise13 = 0 < gamma1;
		var dif17 = clockwise13 ? theta13 : -theta13;
		dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
		break;
	case 2:
		var f28;
		if(0 > Math.PI) {
			f28 = 0;
		} else {
			var a28 = 0 % (2 * Math.PI);
			f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
		}
		var this43 = f28;
		var za14 = this43;
		var f29;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f29 = gamma1;
		} else {
			var a29 = gamma1 % (2 * Math.PI);
			f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
		}
		var this44 = f29;
		var zb14 = this44;
		var fa14 = za14;
		var fb14 = zb14;
		var theta14 = Math.abs(fa14 - fb14);
		var smallest3 = theta14 <= Math.PI;
		var clockwise14 = 0 < gamma1;
		var dif18 = clockwise14 ? theta14 : -theta14;
		dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
		break;
	case 3:
		var f30;
		if(0 > Math.PI) {
			f30 = 0;
		} else {
			var a30 = 0 % (2 * Math.PI);
			f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
		}
		var this45 = f30;
		var za15 = this45;
		var f31;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f31 = gamma1;
		} else {
			var a31 = gamma1 % (2 * Math.PI);
			f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
		}
		var this46 = f31;
		var zb15 = this46;
		var fa15 = za15;
		var fb15 = zb15;
		var theta15 = Math.abs(fa15 - fb15);
		var largest3 = theta15 > Math.PI;
		var clockwise15 = 0 < gamma1;
		var dif19 = clockwise15 ? theta15 : -theta15;
		dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
		break;
	}
	var positive3 = dif15 >= 0;
	var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
	var step7 = dif15 / totalSteps3;
	var angle3 = 0;
	var cx7;
	var cy7;
	var bx7 = 0;
	var by7 = 0;
	var _g7 = 0;
	var _g13 = totalSteps3 + 1;
	while(_g7 < _g13) {
		var i3 = _g7++;
		cx7 = dx + radius * Math.sin(angle3);
		cy7 = dy + radius * Math.cos(angle3);
		if(i3 != 0) {
			var t15 = new trilateral_tri_Trilateral(dx,dy,bx7,by7,cx7,cy7);
			out4[out4.length] = t15;
		}
		angle3 += step7;
		bx7 = cx7;
		by7 = cy7;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t16 = triArr3[_g8];
		++_g8;
		out[out.length] = t16;
	}
	return out;
};
trilateral_polys_Poly.roundedRectangleOutline = function(x,y,width,height,thick,radius) {
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this2 = this1;
	var out = this2;
	var pi = Math.PI;
	var pi_2 = Math.PI / 2;
	var ax = x + radius;
	var ay = y + radius;
	var bx = x + width - radius;
	var by = y + radius;
	var cx = bx;
	var cy = y + height - radius;
	var dx = ax;
	var dy = cy;
	var ax1 = ax;
	var ay1 = y;
	var bx1 = ax + (width - radius * 2);
	var by1 = ay1;
	var cx1 = bx1;
	var cy1 = ay1 + thick;
	var dx1 = ax;
	var dy1 = cy1;
	var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
	var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
	out[out.length] = tp_t0;
	out[out.length] = tp_t1;
	var ax2 = ax;
	var ay2 = y + height - thick;
	var bx2 = ax + (width - radius * 2);
	var by2 = ay2;
	var cx2 = bx2;
	var cy2 = ay2 + thick;
	var dx2 = ax;
	var dy2 = cy2;
	var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
	var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
	out[out.length] = tp_t01;
	out[out.length] = tp_t11;
	var dimY = height - 2 * radius;
	var ax3 = x;
	var ay3 = ay;
	var bx3 = x + thick;
	var by3 = ay3;
	var cx3 = bx3;
	var cy3 = ay3 + dimY;
	var dx3 = x;
	var dy3 = cy3;
	var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
	var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
	out[out.length] = tp_t02;
	out[out.length] = tp_t12;
	var x1 = x + width - thick;
	var ax4 = x1;
	var ay4 = by;
	var bx4 = x1 + thick;
	var by4 = ay4;
	var cx4 = bx4;
	var cy4 = ay4 + dimY;
	var dx4 = x1;
	var dy4 = cy4;
	var tp_t03 = new trilateral_tri_Trilateral(ax4,ay4,bx4,by4,dx4,dy4);
	var tp_t13 = new trilateral_tri_Trilateral(bx4,by4,cx4,cy4,dx4,dy4);
	out[out.length] = tp_t03;
	out[out.length] = tp_t13;
	var beta = -pi;
	var gamma = -pi_2;
	var t1 = [];
	var this3;
	if(t1 == null) {
		var t2 = [];
		var this4 = t2 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t2;
		this3 = this4;
	} else {
		this3 = t1;
	}
	var this5 = this3;
	var out1 = this5;
	var pi1 = Math.PI;
	var step = pi1 * 2 / 36;
	var dif;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f;
		if(beta >= 0 && beta > Math.PI) {
			f = beta;
		} else {
			var a = beta % (2 * Math.PI);
			f = a >= 0 ? a : a + 2 * Math.PI;
		}
		var this6 = f;
		var za = this6;
		var f1;
		if(gamma >= 0 && gamma > Math.PI) {
			f1 = gamma;
		} else {
			var a1 = gamma % (2 * Math.PI);
			f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
		}
		var this7 = f1;
		var zb = this7;
		var fa = za;
		var fb = zb;
		var theta = Math.abs(fa - fb);
		var clockwise = beta < gamma;
		var dif1 = clockwise ? theta : -theta;
		dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
		break;
	case 1:
		var f2;
		if(beta >= 0 && beta > Math.PI) {
			f2 = beta;
		} else {
			var a2 = beta % (2 * Math.PI);
			f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
		}
		var this8 = f2;
		var za1 = this8;
		var f3;
		if(gamma >= 0 && gamma > Math.PI) {
			f3 = gamma;
		} else {
			var a3 = gamma % (2 * Math.PI);
			f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
		}
		var this9 = f3;
		var zb1 = this9;
		var fa1 = za1;
		var fb1 = zb1;
		var theta1 = Math.abs(fa1 - fb1);
		var clockwise1 = beta < gamma;
		var dif2 = clockwise1 ? theta1 : -theta1;
		dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
		break;
	case 2:
		var f4;
		if(beta >= 0 && beta > Math.PI) {
			f4 = beta;
		} else {
			var a4 = beta % (2 * Math.PI);
			f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
		}
		var this10 = f4;
		var za2 = this10;
		var f5;
		if(gamma >= 0 && gamma > Math.PI) {
			f5 = gamma;
		} else {
			var a5 = gamma % (2 * Math.PI);
			f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
		}
		var this11 = f5;
		var zb2 = this11;
		var fa2 = za2;
		var fb2 = zb2;
		var theta2 = Math.abs(fa2 - fb2);
		var smallest = theta2 <= Math.PI;
		var clockwise2 = beta < gamma;
		var dif3 = clockwise2 ? theta2 : -theta2;
		dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
		break;
	case 3:
		var f6;
		if(beta >= 0 && beta > Math.PI) {
			f6 = beta;
		} else {
			var a6 = beta % (2 * Math.PI);
			f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
		}
		var this12 = f6;
		var za3 = this12;
		var f7;
		if(gamma >= 0 && gamma > Math.PI) {
			f7 = gamma;
		} else {
			var a7 = gamma % (2 * Math.PI);
			f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
		}
		var this13 = f7;
		var zb3 = this13;
		var fa3 = za3;
		var fb3 = zb3;
		var theta3 = Math.abs(fa3 - fb3);
		var largest = theta3 > Math.PI;
		var clockwise3 = beta < gamma;
		var dif4 = clockwise3 ? theta3 : -theta3;
		dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
		break;
	}
	var positive = dif >= 0;
	var totalSteps = Math.ceil(Math.abs(dif) / step);
	var step1 = dif / totalSteps;
	var angle = beta;
	var cx5;
	var cy5;
	var bx5 = 0;
	var by5 = 0;
	var dx5 = 0;
	var dy5 = 0;
	var ex = 0;
	var ey = 0;
	var r2 = radius - thick;
	var _g = 0;
	var _g1 = totalSteps + 1;
	while(_g < _g1) {
		var i = _g++;
		cx5 = ax + radius * Math.sin(angle);
		cy5 = ay + radius * Math.cos(angle);
		ex = ax + r2 * Math.sin(angle);
		ey = ay + r2 * Math.cos(angle);
		if(i != 0) {
			var t0 = new trilateral_tri_Trilateral(dx5,dy5,bx5,by5,cx5,cy5);
			var t11 = new trilateral_tri_Trilateral(dx5,dy5,cx5,cy5,ex,ey);
			out1[out1.length] = t0;
			out1[out1.length] = t11;
		}
		angle += step1;
		bx5 = cx5;
		by5 = cy5;
		dx5 = ex;
		dy5 = ey;
	}
	var triArr = out1;
	var _g2 = 0;
	while(_g2 < triArr.length) {
		var t3 = triArr[_g2];
		++_g2;
		out[out.length] = t3;
	}
	var t4 = [];
	var this14;
	if(t4 == null) {
		var t5 = [];
		var this15 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
		this14 = this15;
	} else {
		this14 = t4;
	}
	var this16 = this14;
	var out2 = this16;
	var pi2 = Math.PI;
	var step2 = pi2 * 2 / 36;
	var dif5;
	switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
	case 0:
		var f8;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f8 = pi_2;
		} else {
			var a8 = pi_2 % (2 * Math.PI);
			f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
		}
		var this17 = f8;
		var za4 = this17;
		var f9;
		if(pi >= 0 && pi > Math.PI) {
			f9 = pi;
		} else {
			var a9 = pi % (2 * Math.PI);
			f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
		}
		var this18 = f9;
		var zb4 = this18;
		var fa4 = za4;
		var fb4 = zb4;
		var theta4 = Math.abs(fa4 - fb4);
		var clockwise4 = pi_2 < pi;
		var dif6 = clockwise4 ? theta4 : -theta4;
		dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
		break;
	case 1:
		var f10;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f10 = pi_2;
		} else {
			var a10 = pi_2 % (2 * Math.PI);
			f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
		}
		var this19 = f10;
		var za5 = this19;
		var f11;
		if(pi >= 0 && pi > Math.PI) {
			f11 = pi;
		} else {
			var a11 = pi % (2 * Math.PI);
			f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
		}
		var this20 = f11;
		var zb5 = this20;
		var fa5 = za5;
		var fb5 = zb5;
		var theta5 = Math.abs(fa5 - fb5);
		var clockwise5 = pi_2 < pi;
		var dif7 = clockwise5 ? theta5 : -theta5;
		dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
		break;
	case 2:
		var f12;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f12 = pi_2;
		} else {
			var a12 = pi_2 % (2 * Math.PI);
			f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
		}
		var this21 = f12;
		var za6 = this21;
		var f13;
		if(pi >= 0 && pi > Math.PI) {
			f13 = pi;
		} else {
			var a13 = pi % (2 * Math.PI);
			f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
		}
		var this22 = f13;
		var zb6 = this22;
		var fa6 = za6;
		var fb6 = zb6;
		var theta6 = Math.abs(fa6 - fb6);
		var smallest1 = theta6 <= Math.PI;
		var clockwise6 = pi_2 < pi;
		var dif8 = clockwise6 ? theta6 : -theta6;
		dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
		break;
	case 3:
		var f14;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f14 = pi_2;
		} else {
			var a14 = pi_2 % (2 * Math.PI);
			f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
		}
		var this23 = f14;
		var za7 = this23;
		var f15;
		if(pi >= 0 && pi > Math.PI) {
			f15 = pi;
		} else {
			var a15 = pi % (2 * Math.PI);
			f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
		}
		var this24 = f15;
		var zb7 = this24;
		var fa7 = za7;
		var fb7 = zb7;
		var theta7 = Math.abs(fa7 - fb7);
		var largest1 = theta7 > Math.PI;
		var clockwise7 = pi_2 < pi;
		var dif9 = clockwise7 ? theta7 : -theta7;
		dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
		break;
	}
	var positive1 = dif5 >= 0;
	var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
	var step3 = dif5 / totalSteps1;
	var angle1 = pi_2;
	var cx6;
	var cy6;
	var bx6 = 0;
	var by6 = 0;
	var dx6 = 0;
	var dy6 = 0;
	var ex1 = 0;
	var ey1 = 0;
	var r21 = radius - thick;
	var _g3 = 0;
	var _g11 = totalSteps1 + 1;
	while(_g3 < _g11) {
		var i1 = _g3++;
		cx6 = bx + radius * Math.sin(angle1);
		cy6 = by + radius * Math.cos(angle1);
		ex1 = bx + r21 * Math.sin(angle1);
		ey1 = by + r21 * Math.cos(angle1);
		if(i1 != 0) {
			var t01 = new trilateral_tri_Trilateral(dx6,dy6,bx6,by6,cx6,cy6);
			var t12 = new trilateral_tri_Trilateral(dx6,dy6,cx6,cy6,ex1,ey1);
			out2[out2.length] = t01;
			out2[out2.length] = t12;
		}
		angle1 += step3;
		bx6 = cx6;
		by6 = cy6;
		dx6 = ex1;
		dy6 = ey1;
	}
	var triArr1 = out2;
	var _g4 = 0;
	while(_g4 < triArr1.length) {
		var t6 = triArr1[_g4];
		++_g4;
		out[out.length] = t6;
	}
	var t7 = [];
	var this25;
	if(t7 == null) {
		var t8 = [];
		var this26 = t8 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t8;
		this25 = this26;
	} else {
		this25 = t7;
	}
	var this27 = this25;
	var out3 = this27;
	var pi3 = Math.PI;
	var step4 = pi3 * 2 / 36;
	var dif10;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f16;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f16 = pi_2;
		} else {
			var a16 = pi_2 % (2 * Math.PI);
			f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
		}
		var this28 = f16;
		var za8 = this28;
		var f17;
		if(0 > Math.PI) {
			f17 = 0;
		} else {
			var a17 = 0 % (2 * Math.PI);
			f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
		}
		var this29 = f17;
		var zb8 = this29;
		var fa8 = za8;
		var fb8 = zb8;
		var theta8 = Math.abs(fa8 - fb8);
		var clockwise8 = pi_2 < 0;
		var dif11 = clockwise8 ? theta8 : -theta8;
		dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
		break;
	case 1:
		var f18;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f18 = pi_2;
		} else {
			var a18 = pi_2 % (2 * Math.PI);
			f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
		}
		var this30 = f18;
		var za9 = this30;
		var f19;
		if(0 > Math.PI) {
			f19 = 0;
		} else {
			var a19 = 0 % (2 * Math.PI);
			f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
		}
		var this31 = f19;
		var zb9 = this31;
		var fa9 = za9;
		var fb9 = zb9;
		var theta9 = Math.abs(fa9 - fb9);
		var clockwise9 = pi_2 < 0;
		var dif12 = clockwise9 ? theta9 : -theta9;
		dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
		break;
	case 2:
		var f20;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f20 = pi_2;
		} else {
			var a20 = pi_2 % (2 * Math.PI);
			f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
		}
		var this32 = f20;
		var za10 = this32;
		var f21;
		if(0 > Math.PI) {
			f21 = 0;
		} else {
			var a21 = 0 % (2 * Math.PI);
			f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
		}
		var this33 = f21;
		var zb10 = this33;
		var fa10 = za10;
		var fb10 = zb10;
		var theta10 = Math.abs(fa10 - fb10);
		var smallest2 = theta10 <= Math.PI;
		var clockwise10 = pi_2 < 0;
		var dif13 = clockwise10 ? theta10 : -theta10;
		dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
		break;
	case 3:
		var f22;
		if(pi_2 >= 0 && pi_2 > Math.PI) {
			f22 = pi_2;
		} else {
			var a22 = pi_2 % (2 * Math.PI);
			f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
		}
		var this34 = f22;
		var za11 = this34;
		var f23;
		if(0 > Math.PI) {
			f23 = 0;
		} else {
			var a23 = 0 % (2 * Math.PI);
			f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
		}
		var this35 = f23;
		var zb11 = this35;
		var fa11 = za11;
		var fb11 = zb11;
		var theta11 = Math.abs(fa11 - fb11);
		var largest2 = theta11 > Math.PI;
		var clockwise11 = pi_2 < 0;
		var dif14 = clockwise11 ? theta11 : -theta11;
		dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
		break;
	}
	var positive2 = dif10 >= 0;
	var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
	var step5 = dif10 / totalSteps2;
	var angle2 = pi_2;
	var cx7;
	var cy7;
	var bx7 = 0;
	var by7 = 0;
	var dx7 = 0;
	var dy7 = 0;
	var ex2 = 0;
	var ey2 = 0;
	var r22 = radius - thick;
	var _g5 = 0;
	var _g12 = totalSteps2 + 1;
	while(_g5 < _g12) {
		var i2 = _g5++;
		cx7 = cx + radius * Math.sin(angle2);
		cy7 = cy + radius * Math.cos(angle2);
		ex2 = cx + r22 * Math.sin(angle2);
		ey2 = cy + r22 * Math.cos(angle2);
		if(i2 != 0) {
			var t02 = new trilateral_tri_Trilateral(dx7,dy7,bx7,by7,cx7,cy7);
			var t13 = new trilateral_tri_Trilateral(dx7,dy7,cx7,cy7,ex2,ey2);
			out3[out3.length] = t02;
			out3[out3.length] = t13;
		}
		angle2 += step5;
		bx7 = cx7;
		by7 = cy7;
		dx7 = ex2;
		dy7 = ey2;
	}
	var triArr2 = out3;
	var _g6 = 0;
	while(_g6 < triArr2.length) {
		var t9 = triArr2[_g6];
		++_g6;
		out[out.length] = t9;
	}
	var gamma1 = -pi_2;
	var t10 = [];
	var this36;
	if(t10 == null) {
		var t14 = [];
		var this37 = t14 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t14;
		this36 = this37;
	} else {
		this36 = t10;
	}
	var this38 = this36;
	var out4 = this38;
	var pi4 = Math.PI;
	var step6 = pi4 * 2 / 36;
	var dif15;
	switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
	case 0:
		var f24;
		if(0 > Math.PI) {
			f24 = 0;
		} else {
			var a24 = 0 % (2 * Math.PI);
			f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
		}
		var this39 = f24;
		var za12 = this39;
		var f25;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f25 = gamma1;
		} else {
			var a25 = gamma1 % (2 * Math.PI);
			f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
		}
		var this40 = f25;
		var zb12 = this40;
		var fa12 = za12;
		var fb12 = zb12;
		var theta12 = Math.abs(fa12 - fb12);
		var clockwise12 = 0 < gamma1;
		var dif16 = clockwise12 ? theta12 : -theta12;
		dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
		break;
	case 1:
		var f26;
		if(0 > Math.PI) {
			f26 = 0;
		} else {
			var a26 = 0 % (2 * Math.PI);
			f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
		}
		var this41 = f26;
		var za13 = this41;
		var f27;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f27 = gamma1;
		} else {
			var a27 = gamma1 % (2 * Math.PI);
			f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
		}
		var this42 = f27;
		var zb13 = this42;
		var fa13 = za13;
		var fb13 = zb13;
		var theta13 = Math.abs(fa13 - fb13);
		var clockwise13 = 0 < gamma1;
		var dif17 = clockwise13 ? theta13 : -theta13;
		dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
		break;
	case 2:
		var f28;
		if(0 > Math.PI) {
			f28 = 0;
		} else {
			var a28 = 0 % (2 * Math.PI);
			f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
		}
		var this43 = f28;
		var za14 = this43;
		var f29;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f29 = gamma1;
		} else {
			var a29 = gamma1 % (2 * Math.PI);
			f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
		}
		var this44 = f29;
		var zb14 = this44;
		var fa14 = za14;
		var fb14 = zb14;
		var theta14 = Math.abs(fa14 - fb14);
		var smallest3 = theta14 <= Math.PI;
		var clockwise14 = 0 < gamma1;
		var dif18 = clockwise14 ? theta14 : -theta14;
		dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
		break;
	case 3:
		var f30;
		if(0 > Math.PI) {
			f30 = 0;
		} else {
			var a30 = 0 % (2 * Math.PI);
			f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
		}
		var this45 = f30;
		var za15 = this45;
		var f31;
		if(gamma1 >= 0 && gamma1 > Math.PI) {
			f31 = gamma1;
		} else {
			var a31 = gamma1 % (2 * Math.PI);
			f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
		}
		var this46 = f31;
		var zb15 = this46;
		var fa15 = za15;
		var fb15 = zb15;
		var theta15 = Math.abs(fa15 - fb15);
		var largest3 = theta15 > Math.PI;
		var clockwise15 = 0 < gamma1;
		var dif19 = clockwise15 ? theta15 : -theta15;
		dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
		break;
	}
	var positive3 = dif15 >= 0;
	var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
	var step7 = dif15 / totalSteps3;
	var angle3 = 0;
	var cx8;
	var cy8;
	var bx8 = 0;
	var by8 = 0;
	var dx8 = 0;
	var dy8 = 0;
	var ex3 = 0;
	var ey3 = 0;
	var r23 = radius - thick;
	var _g7 = 0;
	var _g13 = totalSteps3 + 1;
	while(_g7 < _g13) {
		var i3 = _g7++;
		cx8 = dx + radius * Math.sin(angle3);
		cy8 = dy + radius * Math.cos(angle3);
		ex3 = dx + r23 * Math.sin(angle3);
		ey3 = dy + r23 * Math.cos(angle3);
		if(i3 != 0) {
			var t03 = new trilateral_tri_Trilateral(dx8,dy8,bx8,by8,cx8,cy8);
			var t15 = new trilateral_tri_Trilateral(dx8,dy8,cx8,cy8,ex3,ey3);
			out4[out4.length] = t03;
			out4[out4.length] = t15;
		}
		angle3 += step7;
		bx8 = cx8;
		by8 = cy8;
		dx8 = ex3;
		dy8 = ey3;
	}
	var triArr3 = out4;
	var _g8 = 0;
	while(_g8 < triArr3.length) {
		var t16 = triArr3[_g8];
		++_g8;
		out[out.length] = t16;
	}
	return out;
};
var trilateral_polys_Shapes = function(triangleArray_,colors_) {
	this.refCount = 0;
	this.triangles = triangleArray_;
	this.colors = colors_;
};
trilateral_polys_Shapes.__name__ = true;
trilateral_polys_Shapes.prototype = {
	findShapeById: function(id) {
		var this1 = this.triangles;
		var t = [];
		var this2 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
		var this3 = this2;
		var out = this3;
		var _g = 0;
		var _g1 = this1.length;
		while(_g < _g1) {
			var i = _g++;
			if(this1[i].id == id) {
				out[out.length] = this1[i];
			}
		}
		return out;
	}
	,star: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var pi = Math.PI;
		var omega = -pi + theta;
		var a0x = x + radius * Math.sin(omega);
		var a0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var a1x = x + radius * Math.sin(omega);
		var a1y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var b0x = x + radius * Math.sin(omega);
		var b0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var b1x = x + radius * Math.sin(omega);
		var b1y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var c0x = x + radius * Math.sin(omega);
		var c0y = y + radius * Math.cos(omega);
		omega += pi / 3;
		var c1x = x + radius * Math.sin(omega);
		var c1y = y + radius * Math.cos(omega);
		var tri_t0 = new trilateral_tri_Trilateral(a0x,a0y,b0x,b0y,c0x,c0y);
		var tri_t1 = new trilateral_tri_Trilateral(a1x,a1y,b1x,b1y,c1x,c1y);
		var tri = tri_t0;
		var t = Object.create(trilateral_tri_Triangle.prototype);
		t.id = id;
		t.ax = tri.ax;
		t.ay = tri.ay;
		t.bx = tri.bx;
		t.by = tri.by;
		t.cx = tri.cx;
		t.cy = tri.cy;
		t.mark = tri.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = color;
		t.colorA = color;
		t.colorB = color;
		t.colorC = color;
		t.windingAdjusted = tri.windingAdjusted;
		var tri0 = t;
		this1[this1.length] = tri0;
		var tri1 = tri_t1;
		var t1 = Object.create(trilateral_tri_Triangle.prototype);
		t1.id = id;
		t1.ax = tri1.ax;
		t1.ay = tri1.ay;
		t1.bx = tri1.bx;
		t1.by = tri1.by;
		t1.cx = tri1.cx;
		t1.cy = tri1.cy;
		t1.mark = tri1.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = color;
		t1.colorA = color;
		t1.colorB = color;
		t1.colorC = color;
		t1.windingAdjusted = tri1.windingAdjusted;
		var tri11 = t1;
		this1[this1.length] = tri11;
		return this.refCount - 1;
	}
	,diamond: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var theta1 = Math.PI / 4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		if(theta1 != 0) {
			var pi = Math.PI;
			var pi4 = pi / 4;
			var pi2 = pi / 2;
			var sqrt2 = Math.sqrt(2);
			var r = radius * sqrt2;
			var aTheta = -pi + theta1 - pi4;
			var dTheta = -pi + theta1 + pi / 2 - pi / 4;
			var cTheta = theta1 - pi4;
			var bTheta = -pi + theta1 - pi2 - pi4;
			ax = x + r * Math.sin(aTheta);
			ay = y + r * Math.cos(aTheta);
			bx = x + r * Math.sin(bTheta);
			by = y + r * Math.cos(bTheta);
			cx = x + r * Math.sin(cTheta);
			cy = y + r * Math.cos(cTheta);
			dx = x + r * Math.sin(dTheta);
			dy = y + r * Math.cos(dTheta);
		} else {
			ax = x - radius;
			ay = y - radius;
			var lx = radius * 2;
			var ly = lx;
			bx = ax + lx;
			by = ay;
			cx = bx;
			cy = ay + ly;
			dx = ax;
			dy = cy;
		}
		var tri_t0 = new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy);
		var tri_t1 = new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy);
		var tri = tri_t0;
		var t = Object.create(trilateral_tri_Triangle.prototype);
		t.id = id;
		t.ax = tri.ax;
		t.ay = tri.ay;
		t.bx = tri.bx;
		t.by = tri.by;
		t.cx = tri.cx;
		t.cy = tri.cy;
		t.mark = tri.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = color;
		t.colorA = color;
		t.colorB = color;
		t.colorC = color;
		t.windingAdjusted = tri.windingAdjusted;
		var tri0 = t;
		this1[this1.length] = tri0;
		var tri1 = tri_t1;
		var t1 = Object.create(trilateral_tri_Triangle.prototype);
		t1.id = id;
		t1.ax = tri1.ax;
		t1.ay = tri1.ay;
		t1.bx = tri1.bx;
		t1.by = tri1.by;
		t1.cx = tri1.cx;
		t1.cy = tri1.cy;
		t1.mark = tri1.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = color;
		t1.colorA = color;
		t1.colorB = color;
		t1.colorC = color;
		t1.windingAdjusted = tri1.windingAdjusted;
		var tri11 = t1;
		this1[this1.length] = tri11;
		return this.refCount - 1;
	}
	,diamondOutline: function(x,y,radius,thick,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var theta1 = Math.PI / 4;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		var a0x = 0.;
		var a0y = 0.;
		var b0x = 0.;
		var b0y = 0.;
		var c0x = 0.;
		var c0y = 0.;
		var d0x = 0.;
		var d0y = 0.;
		if(theta1 != 0) {
			var pi = Math.PI;
			var pi4 = pi / 4;
			var pi2 = pi / 2;
			var sqrt2 = Math.sqrt(2);
			var r = radius * sqrt2;
			var aTheta = -pi + theta1 - pi4;
			var dTheta = -pi + theta1 + pi / 2 - pi / 4;
			var cTheta = theta1 - pi4;
			var bTheta = -pi + theta1 - pi2 - pi4;
			var as = Math.sin(aTheta);
			var ac = Math.cos(aTheta);
			var bs = Math.sin(bTheta);
			var bc = Math.cos(bTheta);
			var cs = Math.sin(cTheta);
			var cc = Math.cos(cTheta);
			var ds = Math.sin(dTheta);
			var dc = Math.cos(dTheta);
			var r0 = r - thick;
			ax = x + r * as;
			ay = y + r * ac;
			bx = x + r * bs;
			by = y + r * bc;
			cx = x + r * cs;
			cy = y + r * cc;
			dx = x + r * ds;
			dy = y + r * dc;
			a0x = x + r0 * as;
			a0y = y + r0 * ac;
			b0x = x + r0 * bs;
			b0y = y + r0 * bc;
			c0x = x + r0 * cs;
			c0y = y + r0 * cc;
			d0x = x + r0 * ds;
			d0y = y + r0 * dc;
		} else {
			ax = x - radius;
			ay = y - radius;
			var lx = radius * 2;
			var ly = lx;
			bx = ax + lx;
			by = ay;
			cx = bx;
			cy = ay + ly;
			dx = ax;
			dy = cy;
			var radius0 = radius - thick;
			a0x = x - radius0;
			a0y = y - radius0;
			var l0x = radius0 * 2;
			var l0y = l0x;
			b0x = a0x + l0x;
			b0y = a0y;
			c0x = b0x;
			c0y = a0y + l0y;
			d0x = a0x;
			d0y = c0y;
		}
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
		out[out.length] = tri;
		var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
		out[out.length] = tri1;
		var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
		out[out.length] = tri2;
		var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
		out[out.length] = tri3;
		var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
		out[out.length] = tri4;
		var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
		out[out.length] = tri5;
		var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
		out[out.length] = tri7;
		var triArr = out;
		var tri8;
		var _g = 0;
		while(_g < triArr.length) {
			var t2 = triArr[_g];
			++_g;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = id;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = color;
				t3.colorA = color;
				t3.colorB = color;
				t3.colorC = color;
				t3.windingAdjusted = t2.windingAdjusted;
				tri8 = t3;
				this1[this1.length] = tri8;
			}
		}
		return this.refCount - 1;
	}
	,square: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var tri_t0 = new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy);
		var tri_t1 = new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy);
		var tri = tri_t0;
		var t = Object.create(trilateral_tri_Triangle.prototype);
		t.id = id;
		t.ax = tri.ax;
		t.ay = tri.ay;
		t.bx = tri.bx;
		t.by = tri.by;
		t.cx = tri.cx;
		t.cy = tri.cy;
		t.mark = tri.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = color;
		t.colorA = color;
		t.colorB = color;
		t.colorC = color;
		t.windingAdjusted = tri.windingAdjusted;
		var tri0 = t;
		this1[this1.length] = tri0;
		var tri1 = tri_t1;
		var t1 = Object.create(trilateral_tri_Triangle.prototype);
		t1.id = id;
		t1.ax = tri1.ax;
		t1.ay = tri1.ay;
		t1.bx = tri1.bx;
		t1.by = tri1.by;
		t1.cx = tri1.cx;
		t1.cy = tri1.cy;
		t1.mark = tri1.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = color;
		t1.colorA = color;
		t1.colorB = color;
		t1.colorC = color;
		t1.windingAdjusted = tri1.windingAdjusted;
		var tri11 = t1;
		this1[this1.length] = tri11;
		return this.refCount - 1;
	}
	,squareOutline: function(x,y,radius,thick,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var ax = 0.;
		var ay = 0.;
		var bx = 0.;
		var by = 0.;
		var cx = 0.;
		var cy = 0.;
		var dx = 0.;
		var dy = 0.;
		var a0x = 0.;
		var a0y = 0.;
		var b0x = 0.;
		var b0y = 0.;
		var c0x = 0.;
		var c0y = 0.;
		var d0x = 0.;
		var d0y = 0.;
		ax = x - radius;
		ay = y - radius;
		var lx = radius * 2;
		var ly = lx;
		bx = ax + lx;
		by = ay;
		cx = bx;
		cy = ay + ly;
		dx = ax;
		dy = cy;
		var radius0 = radius - thick;
		a0x = x - radius0;
		a0y = y - radius0;
		var l0x = radius0 * 2;
		var l0y = l0x;
		b0x = a0x + l0x;
		b0y = a0y;
		c0x = b0x;
		c0y = a0y + l0y;
		d0x = a0x;
		d0y = c0y;
		var tri = new trilateral_tri_Trilateral(ax,ay,bx,by,a0x,a0y);
		out[out.length] = tri;
		var tri1 = new trilateral_tri_Trilateral(bx,by,b0x,b0y,a0x,a0y);
		out[out.length] = tri1;
		var tri2 = new trilateral_tri_Trilateral(d0x,d0y,c0x,c0y,dx,dy);
		out[out.length] = tri2;
		var tri3 = new trilateral_tri_Trilateral(c0x,c0y,cx,cy,dx,dy);
		out[out.length] = tri3;
		var tri4 = new trilateral_tri_Trilateral(ax,ay,a0x,a0y,d0x,d0y);
		out[out.length] = tri4;
		var tri5 = new trilateral_tri_Trilateral(ax,ay,d0x,d0y,dx,dy);
		out[out.length] = tri5;
		var tri6 = new trilateral_tri_Trilateral(b0x,b0y,bx,by,c0x,c0y);
		out[out.length] = tri6;
		var tri7 = new trilateral_tri_Trilateral(bx,by,cx,cy,c0x,c0y);
		out[out.length] = tri7;
		var triArr = out;
		var tri8;
		var _g = 0;
		while(_g < triArr.length) {
			var t2 = triArr[_g];
			++_g;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = id;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = color;
				t3.colorA = color;
				t3.colorB = color;
				t3.colorC = color;
				t3.windingAdjusted = t2.windingAdjusted;
				tri8 = t3;
				this1[this1.length] = tri8;
			}
		}
		return this.refCount - 1;
	}
	,rectangle: function(x,y,width,height,color) {
		var this1 = this.triangles;
		var id = this.refCount++;
		var ax = x;
		var ay = y;
		var bx = x + width;
		var by = ay;
		var cx = bx;
		var cy = ay + height;
		var dx = x;
		var dy = cy;
		var tri_t0 = new trilateral_tri_Trilateral(ax,ay,bx,by,dx,dy);
		var tri_t1 = new trilateral_tri_Trilateral(bx,by,cx,cy,dx,dy);
		var tri = tri_t0;
		var t = Object.create(trilateral_tri_Triangle.prototype);
		t.id = id;
		t.ax = tri.ax;
		t.ay = tri.ay;
		t.bx = tri.bx;
		t.by = tri.by;
		t.cx = tri.cx;
		t.cy = tri.cy;
		t.mark = tri.mark;
		t.depth = 0;
		t.alpha = 1.;
		t.colorID = color;
		t.colorA = color;
		t.colorB = color;
		t.colorC = color;
		t.windingAdjusted = tri.windingAdjusted;
		var tri0 = t;
		this1[this1.length] = tri0;
		var tri1 = tri_t1;
		var t1 = Object.create(trilateral_tri_Triangle.prototype);
		t1.id = id;
		t1.ax = tri1.ax;
		t1.ay = tri1.ay;
		t1.bx = tri1.bx;
		t1.by = tri1.by;
		t1.cx = tri1.cx;
		t1.cy = tri1.cy;
		t1.mark = tri1.mark;
		t1.depth = 0;
		t1.alpha = 1.;
		t1.colorID = color;
		t1.colorA = color;
		t1.colorB = color;
		t1.colorC = color;
		t1.windingAdjusted = tri1.windingAdjusted;
		var tri11 = t1;
		this1[this1.length] = tri11;
		return this.refCount - 1;
	}
	,circle: function(x,y,radius,color,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var theta1 = pi / 2;
		var step = pi * 2 / 36;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = 36;
		while(_g < _g1) {
			var i = _g++;
			bx = x + radius * Math.sin(theta1);
			by = y + radius * Math.cos(theta1);
			theta1 += step;
			cx = x + radius * Math.sin(theta1);
			cy = y + radius * Math.cos(theta1);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		var triArr = out;
		var tri1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t2 = triArr[_g2];
			++_g2;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = id;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = color;
				t3.colorA = color;
				t3.colorB = color;
				t3.colorC = color;
				t3.windingAdjusted = t2.windingAdjusted;
				tri1 = t3;
				this1[this1.length] = tri1;
			}
		}
		return this.refCount - 1;
	}
	,shape: function(x,y,radius,color,sides,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var triArr;
		if((sides & 1) == 0) {
			var t = [];
			var this2;
			if(t == null) {
				var t1 = [];
				var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
				this2 = this3;
			} else {
				this2 = t;
			}
			var this4 = this2;
			var out = this4;
			var pi = Math.PI;
			var theta1 = pi / 2;
			var step = pi * 2 / sides;
			theta1 -= step / 2 + theta;
			var bx;
			var by;
			var cx;
			var cy;
			var _g = 0;
			var _g1 = sides;
			while(_g < _g1) {
				var i = _g++;
				bx = x + radius * Math.sin(theta1);
				by = y + radius * Math.cos(theta1);
				theta1 += step;
				cx = x + radius * Math.sin(theta1);
				cy = y + radius * Math.cos(theta1);
				var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
				out[out.length] = tri;
			}
			triArr = out;
		} else {
			var t2 = [];
			var this5;
			if(t2 == null) {
				var t3 = [];
				var this6 = t3 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t3;
				this5 = this6;
			} else {
				this5 = t2;
			}
			var this7 = this5;
			var out1 = this7;
			var pi1 = Math.PI;
			var theta2 = pi1 / 2 + theta;
			var step1 = pi1 * 2 / sides;
			var bx1;
			var by1;
			var cx1;
			var cy1;
			var _g2 = 0;
			var _g11 = sides;
			while(_g2 < _g11) {
				var i1 = _g2++;
				bx1 = x + radius * Math.sin(theta2);
				by1 = y + radius * Math.cos(theta2);
				theta2 += step1;
				cx1 = x + radius * Math.sin(theta2);
				cy1 = y + radius * Math.cos(theta2);
				var tri1 = new trilateral_tri_Trilateral(x,y,bx1,by1,cx1,cy1);
				out1[out1.length] = tri1;
			}
			triArr = out1;
		}
		var tri2;
		var _g3 = 0;
		while(_g3 < triArr.length) {
			var t4 = triArr[_g3];
			++_g3;
			if(t4 != null) {
				var t5 = Object.create(trilateral_tri_Triangle.prototype);
				t5.id = id;
				t5.ax = t4.ax;
				t5.ay = t4.ay;
				t5.bx = t4.bx;
				t5.by = t4.by;
				t5.cx = t4.cx;
				t5.cy = t4.cy;
				t5.mark = t4.mark;
				t5.depth = 0;
				t5.alpha = 1.;
				t5.colorID = color;
				t5.colorA = color;
				t5.colorB = color;
				t5.colorC = color;
				t5.windingAdjusted = t4.windingAdjusted;
				tri2 = t5;
				this1[this1.length] = tri2;
			}
		}
		return this.refCount - 1;
	}
	,ellipse: function(x,y,rx,ry,color,sides,theta) {
		if(theta == null) {
			theta = 0;
		}
		var this1 = this.triangles;
		var id = this.refCount++;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var theta1 = pi / 2;
		var step = pi * 2 / sides;
		var bx;
		var by;
		var cx;
		var cy;
		var _g = 0;
		var _g1 = sides;
		while(_g < _g1) {
			var i = _g++;
			bx = x + rx * Math.sin(theta1);
			by = y + ry * Math.cos(theta1);
			theta1 += step;
			cx = x + rx * Math.sin(theta1);
			cy = y + ry * Math.cos(theta1);
			var tri = new trilateral_tri_Trilateral(x,y,bx,by,cx,cy);
			out[out.length] = tri;
		}
		var triArr = out;
		var tri1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t2 = triArr[_g2];
			++_g2;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = id;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = color;
				t3.colorA = color;
				t3.colorB = color;
				t3.colorC = color;
				t3.windingAdjusted = t2.windingAdjusted;
				tri1 = t3;
				this1[this1.length] = tri1;
			}
		}
		return this.refCount - 1;
	}
	,roundedRectangle: function(x,y,width,height,radius,color) {
		var this1 = this.triangles;
		var id = this.refCount++;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax = x + radius;
		var ay = y + radius;
		var bx = x + width - radius;
		var by = y + radius;
		var cx = bx;
		var cy = y + height - radius;
		var dx = ax;
		var dy = cy;
		var ax1 = ax;
		var ay1 = y;
		var bx1 = ax + (width - radius * 2);
		var by1 = ay1;
		var cx1 = bx1;
		var cy1 = ay1 + height;
		var dx1 = ax;
		var dy1 = cy1;
		var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
		var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
		out[out.length] = tp_t0;
		out[out.length] = tp_t1;
		var dimY = height - 2 * radius;
		var ax2 = x;
		var ay2 = ay;
		var bx2 = x + radius;
		var by2 = ay2;
		var cx2 = bx2;
		var cy2 = ay2 + dimY;
		var dx2 = x;
		var dy2 = cy2;
		var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
		var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
		out[out.length] = tp_t01;
		out[out.length] = tp_t11;
		var ax3 = bx;
		var ay3 = by;
		var bx3 = bx + radius;
		var by3 = ay3;
		var cx3 = bx3;
		var cy3 = ay3 + dimY;
		var dx3 = bx;
		var dy3 = cy3;
		var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
		var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
		out[out.length] = tp_t02;
		out[out.length] = tp_t12;
		var beta = -pi;
		var gamma = -pi_2;
		var t2 = [];
		var this5;
		if(t2 == null) {
			var t3 = [];
			var this6;
			if(t3 == null) {
				var t4 = [];
				var this7 = t4 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t4;
				this6 = this7;
			} else {
				this6 = t3;
			}
			this5 = this6;
		} else {
			this5 = t2;
		}
		var this8 = this5;
		var out1 = this8;
		var pi1 = Math.PI;
		var step = pi1 * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this9 = f;
			var za = this9;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this10 = f1;
			var zb = this10;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this11 = f2;
			var za1 = this11;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this12 = f3;
			var zb1 = this12;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this13 = f4;
			var za2 = this13;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this14 = f5;
			var zb2 = this14;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this15 = f6;
			var za3 = this15;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this16 = f7;
			var zb3 = this16;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx4;
		var cy4;
		var bx4 = 0;
		var by4 = 0;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx4 = ax + radius * Math.sin(angle);
			cy4 = ay + radius * Math.cos(angle);
			if(i != 0) {
				var t5 = new trilateral_tri_Trilateral(ax,ay,bx4,by4,cx4,cy4);
				out1[out1.length] = t5;
			}
			angle += step1;
			bx4 = cx4;
			by4 = cy4;
		}
		var triArr = out1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t6 = triArr[_g2];
			++_g2;
			out[out.length] = t6;
		}
		var t7 = [];
		var this17;
		if(t7 == null) {
			var t8 = [];
			var this18;
			if(t8 == null) {
				var t9 = [];
				var this19 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
				this18 = this19;
			} else {
				this18 = t8;
			}
			this17 = this18;
		} else {
			this17 = t7;
		}
		var this20 = this17;
		var out2 = this20;
		var pi2 = Math.PI;
		var step2 = pi2 * 2 / 36;
		var dif5;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f8;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f8 = pi_2;
			} else {
				var a8 = pi_2 % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
			}
			var this21 = f8;
			var za4 = this21;
			var f9;
			if(pi >= 0 && pi > Math.PI) {
				f9 = pi;
			} else {
				var a9 = pi % (2 * Math.PI);
				f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
			}
			var this22 = f9;
			var zb4 = this22;
			var fa4 = za4;
			var fb4 = zb4;
			var theta4 = Math.abs(fa4 - fb4);
			var clockwise4 = pi_2 < pi;
			var dif6 = clockwise4 ? theta4 : -theta4;
			dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
			break;
		case 1:
			var f10;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f10 = pi_2;
			} else {
				var a10 = pi_2 % (2 * Math.PI);
				f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
			}
			var this23 = f10;
			var za5 = this23;
			var f11;
			if(pi >= 0 && pi > Math.PI) {
				f11 = pi;
			} else {
				var a11 = pi % (2 * Math.PI);
				f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
			}
			var this24 = f11;
			var zb5 = this24;
			var fa5 = za5;
			var fb5 = zb5;
			var theta5 = Math.abs(fa5 - fb5);
			var clockwise5 = pi_2 < pi;
			var dif7 = clockwise5 ? theta5 : -theta5;
			dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
			break;
		case 2:
			var f12;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f12 = pi_2;
			} else {
				var a12 = pi_2 % (2 * Math.PI);
				f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
			}
			var this25 = f12;
			var za6 = this25;
			var f13;
			if(pi >= 0 && pi > Math.PI) {
				f13 = pi;
			} else {
				var a13 = pi % (2 * Math.PI);
				f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
			}
			var this26 = f13;
			var zb6 = this26;
			var fa6 = za6;
			var fb6 = zb6;
			var theta6 = Math.abs(fa6 - fb6);
			var smallest1 = theta6 <= Math.PI;
			var clockwise6 = pi_2 < pi;
			var dif8 = clockwise6 ? theta6 : -theta6;
			dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
			break;
		case 3:
			var f14;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f14 = pi_2;
			} else {
				var a14 = pi_2 % (2 * Math.PI);
				f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
			}
			var this27 = f14;
			var za7 = this27;
			var f15;
			if(pi >= 0 && pi > Math.PI) {
				f15 = pi;
			} else {
				var a15 = pi % (2 * Math.PI);
				f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
			}
			var this28 = f15;
			var zb7 = this28;
			var fa7 = za7;
			var fb7 = zb7;
			var theta7 = Math.abs(fa7 - fb7);
			var largest1 = theta7 > Math.PI;
			var clockwise7 = pi_2 < pi;
			var dif9 = clockwise7 ? theta7 : -theta7;
			dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
			break;
		}
		var positive1 = dif5 >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
		var step3 = dif5 / totalSteps1;
		var angle1 = pi_2;
		var cx5;
		var cy5;
		var bx5 = 0;
		var by5 = 0;
		var _g3 = 0;
		var _g11 = totalSteps1 + 1;
		while(_g3 < _g11) {
			var i1 = _g3++;
			cx5 = bx + radius * Math.sin(angle1);
			cy5 = by + radius * Math.cos(angle1);
			if(i1 != 0) {
				var t10 = new trilateral_tri_Trilateral(bx,by,bx5,by5,cx5,cy5);
				out2[out2.length] = t10;
			}
			angle1 += step3;
			bx5 = cx5;
			by5 = cy5;
		}
		var triArr1 = out2;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t11 = triArr1[_g4];
			++_g4;
			out[out.length] = t11;
		}
		var t12 = [];
		var this29;
		if(t12 == null) {
			var t13 = [];
			var this30;
			if(t13 == null) {
				var t14 = [];
				var this31 = t14 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t14;
				this30 = this31;
			} else {
				this30 = t13;
			}
			this29 = this30;
		} else {
			this29 = t12;
		}
		var this32 = this29;
		var out3 = this32;
		var pi3 = Math.PI;
		var step4 = pi3 * 2 / 36;
		var dif10;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f16;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f16 = pi_2;
			} else {
				var a16 = pi_2 % (2 * Math.PI);
				f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
			}
			var this33 = f16;
			var za8 = this33;
			var f17;
			if(0 > Math.PI) {
				f17 = 0;
			} else {
				var a17 = 0 % (2 * Math.PI);
				f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
			}
			var this34 = f17;
			var zb8 = this34;
			var fa8 = za8;
			var fb8 = zb8;
			var theta8 = Math.abs(fa8 - fb8);
			var clockwise8 = pi_2 < 0;
			var dif11 = clockwise8 ? theta8 : -theta8;
			dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
			break;
		case 1:
			var f18;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f18 = pi_2;
			} else {
				var a18 = pi_2 % (2 * Math.PI);
				f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
			}
			var this35 = f18;
			var za9 = this35;
			var f19;
			if(0 > Math.PI) {
				f19 = 0;
			} else {
				var a19 = 0 % (2 * Math.PI);
				f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
			}
			var this36 = f19;
			var zb9 = this36;
			var fa9 = za9;
			var fb9 = zb9;
			var theta9 = Math.abs(fa9 - fb9);
			var clockwise9 = pi_2 < 0;
			var dif12 = clockwise9 ? theta9 : -theta9;
			dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
			break;
		case 2:
			var f20;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f20 = pi_2;
			} else {
				var a20 = pi_2 % (2 * Math.PI);
				f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
			}
			var this37 = f20;
			var za10 = this37;
			var f21;
			if(0 > Math.PI) {
				f21 = 0;
			} else {
				var a21 = 0 % (2 * Math.PI);
				f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
			}
			var this38 = f21;
			var zb10 = this38;
			var fa10 = za10;
			var fb10 = zb10;
			var theta10 = Math.abs(fa10 - fb10);
			var smallest2 = theta10 <= Math.PI;
			var clockwise10 = pi_2 < 0;
			var dif13 = clockwise10 ? theta10 : -theta10;
			dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
			break;
		case 3:
			var f22;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f22 = pi_2;
			} else {
				var a22 = pi_2 % (2 * Math.PI);
				f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
			}
			var this39 = f22;
			var za11 = this39;
			var f23;
			if(0 > Math.PI) {
				f23 = 0;
			} else {
				var a23 = 0 % (2 * Math.PI);
				f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
			}
			var this40 = f23;
			var zb11 = this40;
			var fa11 = za11;
			var fb11 = zb11;
			var theta11 = Math.abs(fa11 - fb11);
			var largest2 = theta11 > Math.PI;
			var clockwise11 = pi_2 < 0;
			var dif14 = clockwise11 ? theta11 : -theta11;
			dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
			break;
		}
		var positive2 = dif10 >= 0;
		var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
		var step5 = dif10 / totalSteps2;
		var angle2 = pi_2;
		var cx6;
		var cy6;
		var bx6 = 0;
		var by6 = 0;
		var _g5 = 0;
		var _g12 = totalSteps2 + 1;
		while(_g5 < _g12) {
			var i2 = _g5++;
			cx6 = cx + radius * Math.sin(angle2);
			cy6 = cy + radius * Math.cos(angle2);
			if(i2 != 0) {
				var t15 = new trilateral_tri_Trilateral(cx,cy,bx6,by6,cx6,cy6);
				out3[out3.length] = t15;
			}
			angle2 += step5;
			bx6 = cx6;
			by6 = cy6;
		}
		var triArr2 = out3;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t16 = triArr2[_g6];
			++_g6;
			out[out.length] = t16;
		}
		var gamma1 = -pi_2;
		var t17 = [];
		var this41;
		if(t17 == null) {
			var t18 = [];
			var this42;
			if(t18 == null) {
				var t19 = [];
				var this43 = t19 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t19;
				this42 = this43;
			} else {
				this42 = t18;
			}
			this41 = this42;
		} else {
			this41 = t17;
		}
		var this44 = this41;
		var out4 = this44;
		var pi4 = Math.PI;
		var step6 = pi4 * 2 / 36;
		var dif15;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f24;
			if(0 > Math.PI) {
				f24 = 0;
			} else {
				var a24 = 0 % (2 * Math.PI);
				f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
			}
			var this45 = f24;
			var za12 = this45;
			var f25;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f25 = gamma1;
			} else {
				var a25 = gamma1 % (2 * Math.PI);
				f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
			}
			var this46 = f25;
			var zb12 = this46;
			var fa12 = za12;
			var fb12 = zb12;
			var theta12 = Math.abs(fa12 - fb12);
			var clockwise12 = 0 < gamma1;
			var dif16 = clockwise12 ? theta12 : -theta12;
			dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
			break;
		case 1:
			var f26;
			if(0 > Math.PI) {
				f26 = 0;
			} else {
				var a26 = 0 % (2 * Math.PI);
				f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
			}
			var this47 = f26;
			var za13 = this47;
			var f27;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f27 = gamma1;
			} else {
				var a27 = gamma1 % (2 * Math.PI);
				f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
			}
			var this48 = f27;
			var zb13 = this48;
			var fa13 = za13;
			var fb13 = zb13;
			var theta13 = Math.abs(fa13 - fb13);
			var clockwise13 = 0 < gamma1;
			var dif17 = clockwise13 ? theta13 : -theta13;
			dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
			break;
		case 2:
			var f28;
			if(0 > Math.PI) {
				f28 = 0;
			} else {
				var a28 = 0 % (2 * Math.PI);
				f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
			}
			var this49 = f28;
			var za14 = this49;
			var f29;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f29 = gamma1;
			} else {
				var a29 = gamma1 % (2 * Math.PI);
				f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
			}
			var this50 = f29;
			var zb14 = this50;
			var fa14 = za14;
			var fb14 = zb14;
			var theta14 = Math.abs(fa14 - fb14);
			var smallest3 = theta14 <= Math.PI;
			var clockwise14 = 0 < gamma1;
			var dif18 = clockwise14 ? theta14 : -theta14;
			dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
			break;
		case 3:
			var f30;
			if(0 > Math.PI) {
				f30 = 0;
			} else {
				var a30 = 0 % (2 * Math.PI);
				f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
			}
			var this51 = f30;
			var za15 = this51;
			var f31;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f31 = gamma1;
			} else {
				var a31 = gamma1 % (2 * Math.PI);
				f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
			}
			var this52 = f31;
			var zb15 = this52;
			var fa15 = za15;
			var fb15 = zb15;
			var theta15 = Math.abs(fa15 - fb15);
			var largest3 = theta15 > Math.PI;
			var clockwise15 = 0 < gamma1;
			var dif19 = clockwise15 ? theta15 : -theta15;
			dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
			break;
		}
		var positive3 = dif15 >= 0;
		var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
		var step7 = dif15 / totalSteps3;
		var angle3 = 0;
		var cx7;
		var cy7;
		var bx7 = 0;
		var by7 = 0;
		var _g7 = 0;
		var _g13 = totalSteps3 + 1;
		while(_g7 < _g13) {
			var i3 = _g7++;
			cx7 = dx + radius * Math.sin(angle3);
			cy7 = dy + radius * Math.cos(angle3);
			if(i3 != 0) {
				var t20 = new trilateral_tri_Trilateral(dx,dy,bx7,by7,cx7,cy7);
				out4[out4.length] = t20;
			}
			angle3 += step7;
			bx7 = cx7;
			by7 = cy7;
		}
		var triArr3 = out4;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t21 = triArr3[_g8];
			++_g8;
			out[out.length] = t21;
		}
		var triArr4 = out;
		var tri;
		var _g9 = 0;
		while(_g9 < triArr4.length) {
			var t22 = triArr4[_g9];
			++_g9;
			if(t22 != null) {
				var t23 = Object.create(trilateral_tri_Triangle.prototype);
				t23.id = id;
				t23.ax = t22.ax;
				t23.ay = t22.ay;
				t23.bx = t22.bx;
				t23.by = t22.by;
				t23.cx = t22.cx;
				t23.cy = t22.cy;
				t23.mark = t22.mark;
				t23.depth = 0;
				t23.alpha = 1.;
				t23.colorID = color;
				t23.colorA = color;
				t23.colorB = color;
				t23.colorC = color;
				t23.windingAdjusted = t22.windingAdjusted;
				tri = t23;
				this1[this1.length] = tri;
			}
		}
		return this.refCount - 1;
	}
	,roundedRectangleOutline: function(x,y,width,height,thick,radius,color) {
		var this1 = this.triangles;
		var id = this.refCount++;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var pi_2 = Math.PI / 2;
		var ax = x + radius;
		var ay = y + radius;
		var bx = x + width - radius;
		var by = y + radius;
		var cx = bx;
		var cy = y + height - radius;
		var dx = ax;
		var dy = cy;
		var ax1 = ax;
		var ay1 = y;
		var bx1 = ax + (width - radius * 2);
		var by1 = ay1;
		var cx1 = bx1;
		var cy1 = ay1 + thick;
		var dx1 = ax;
		var dy1 = cy1;
		var tp_t0 = new trilateral_tri_Trilateral(ax1,ay1,bx1,by1,dx1,dy1);
		var tp_t1 = new trilateral_tri_Trilateral(bx1,by1,cx1,cy1,dx1,dy1);
		out[out.length] = tp_t0;
		out[out.length] = tp_t1;
		var ax2 = ax;
		var ay2 = y + height - thick;
		var bx2 = ax + (width - radius * 2);
		var by2 = ay2;
		var cx2 = bx2;
		var cy2 = ay2 + thick;
		var dx2 = ax;
		var dy2 = cy2;
		var tp_t01 = new trilateral_tri_Trilateral(ax2,ay2,bx2,by2,dx2,dy2);
		var tp_t11 = new trilateral_tri_Trilateral(bx2,by2,cx2,cy2,dx2,dy2);
		out[out.length] = tp_t01;
		out[out.length] = tp_t11;
		var dimY = height - 2 * radius;
		var ax3 = x;
		var ay3 = ay;
		var bx3 = x + thick;
		var by3 = ay3;
		var cx3 = bx3;
		var cy3 = ay3 + dimY;
		var dx3 = x;
		var dy3 = cy3;
		var tp_t02 = new trilateral_tri_Trilateral(ax3,ay3,bx3,by3,dx3,dy3);
		var tp_t12 = new trilateral_tri_Trilateral(bx3,by3,cx3,cy3,dx3,dy3);
		out[out.length] = tp_t02;
		out[out.length] = tp_t12;
		var x1 = x + width - thick;
		var ax4 = x1;
		var ay4 = by;
		var bx4 = x1 + thick;
		var by4 = ay4;
		var cx4 = bx4;
		var cy4 = ay4 + dimY;
		var dx4 = x1;
		var dy4 = cy4;
		var tp_t03 = new trilateral_tri_Trilateral(ax4,ay4,bx4,by4,dx4,dy4);
		var tp_t13 = new trilateral_tri_Trilateral(bx4,by4,cx4,cy4,dx4,dy4);
		out[out.length] = tp_t03;
		out[out.length] = tp_t13;
		var beta = -pi;
		var gamma = -pi_2;
		var t2 = [];
		var this5;
		if(t2 == null) {
			var t3 = [];
			var this6;
			if(t3 == null) {
				var t4 = [];
				var this7 = t4 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t4;
				this6 = this7;
			} else {
				this6 = t3;
			}
			this5 = this6;
		} else {
			this5 = t2;
		}
		var this8 = this5;
		var out1 = this8;
		var pi1 = Math.PI;
		var step = pi1 * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(beta >= 0 && beta > Math.PI) {
				f = beta;
			} else {
				var a = beta % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this9 = f;
			var za = this9;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this10 = f1;
			var zb = this10;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(fa - fb);
			var clockwise = beta < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(beta >= 0 && beta > Math.PI) {
				f2 = beta;
			} else {
				var a2 = beta % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this11 = f2;
			var za1 = this11;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this12 = f3;
			var zb1 = this12;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(fa1 - fb1);
			var clockwise1 = beta < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(beta >= 0 && beta > Math.PI) {
				f4 = beta;
			} else {
				var a4 = beta % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this13 = f4;
			var za2 = this13;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this14 = f5;
			var zb2 = this14;
			var fa2 = za2;
			var fb2 = zb2;
			var theta2 = Math.abs(fa2 - fb2);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = beta < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(beta >= 0 && beta > Math.PI) {
				f6 = beta;
			} else {
				var a6 = beta % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this15 = f6;
			var za3 = this15;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this16 = f7;
			var zb3 = this16;
			var fa3 = za3;
			var fb3 = zb3;
			var theta3 = Math.abs(fa3 - fb3);
			var largest = theta3 > Math.PI;
			var clockwise3 = beta < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = beta;
		var cx5;
		var cy5;
		var bx5 = 0;
		var by5 = 0;
		var dx5 = 0;
		var dy5 = 0;
		var ex = 0;
		var ey = 0;
		var r2 = radius - thick;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i = _g++;
			cx5 = ax + radius * Math.sin(angle);
			cy5 = ay + radius * Math.cos(angle);
			ex = ax + r2 * Math.sin(angle);
			ey = ay + r2 * Math.cos(angle);
			if(i != 0) {
				var t0 = new trilateral_tri_Trilateral(dx5,dy5,bx5,by5,cx5,cy5);
				var t11 = new trilateral_tri_Trilateral(dx5,dy5,cx5,cy5,ex,ey);
				out1[out1.length] = t0;
				out1[out1.length] = t11;
			}
			angle += step1;
			bx5 = cx5;
			by5 = cy5;
			dx5 = ex;
			dy5 = ey;
		}
		var triArr = out1;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t5 = triArr[_g2];
			++_g2;
			out[out.length] = t5;
		}
		var t6 = [];
		var this17;
		if(t6 == null) {
			var t7 = [];
			var this18;
			if(t7 == null) {
				var t8 = [];
				var this19 = t8 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t8;
				this18 = this19;
			} else {
				this18 = t7;
			}
			this17 = this18;
		} else {
			this17 = t6;
		}
		var this20 = this17;
		var out2 = this20;
		var pi2 = Math.PI;
		var step2 = pi2 * 2 / 36;
		var dif5;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f8;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f8 = pi_2;
			} else {
				var a8 = pi_2 % (2 * Math.PI);
				f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
			}
			var this21 = f8;
			var za4 = this21;
			var f9;
			if(pi >= 0 && pi > Math.PI) {
				f9 = pi;
			} else {
				var a9 = pi % (2 * Math.PI);
				f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
			}
			var this22 = f9;
			var zb4 = this22;
			var fa4 = za4;
			var fb4 = zb4;
			var theta4 = Math.abs(fa4 - fb4);
			var clockwise4 = pi_2 < pi;
			var dif6 = clockwise4 ? theta4 : -theta4;
			dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
			break;
		case 1:
			var f10;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f10 = pi_2;
			} else {
				var a10 = pi_2 % (2 * Math.PI);
				f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
			}
			var this23 = f10;
			var za5 = this23;
			var f11;
			if(pi >= 0 && pi > Math.PI) {
				f11 = pi;
			} else {
				var a11 = pi % (2 * Math.PI);
				f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
			}
			var this24 = f11;
			var zb5 = this24;
			var fa5 = za5;
			var fb5 = zb5;
			var theta5 = Math.abs(fa5 - fb5);
			var clockwise5 = pi_2 < pi;
			var dif7 = clockwise5 ? theta5 : -theta5;
			dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
			break;
		case 2:
			var f12;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f12 = pi_2;
			} else {
				var a12 = pi_2 % (2 * Math.PI);
				f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
			}
			var this25 = f12;
			var za6 = this25;
			var f13;
			if(pi >= 0 && pi > Math.PI) {
				f13 = pi;
			} else {
				var a13 = pi % (2 * Math.PI);
				f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
			}
			var this26 = f13;
			var zb6 = this26;
			var fa6 = za6;
			var fb6 = zb6;
			var theta6 = Math.abs(fa6 - fb6);
			var smallest1 = theta6 <= Math.PI;
			var clockwise6 = pi_2 < pi;
			var dif8 = clockwise6 ? theta6 : -theta6;
			dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta6) : 2 * Math.PI - theta6;
			break;
		case 3:
			var f14;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f14 = pi_2;
			} else {
				var a14 = pi_2 % (2 * Math.PI);
				f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
			}
			var this27 = f14;
			var za7 = this27;
			var f15;
			if(pi >= 0 && pi > Math.PI) {
				f15 = pi;
			} else {
				var a15 = pi % (2 * Math.PI);
				f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
			}
			var this28 = f15;
			var zb7 = this28;
			var fa7 = za7;
			var fb7 = zb7;
			var theta7 = Math.abs(fa7 - fb7);
			var largest1 = theta7 > Math.PI;
			var clockwise7 = pi_2 < pi;
			var dif9 = clockwise7 ? theta7 : -theta7;
			dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta7) : 2 * Math.PI - theta7;
			break;
		}
		var positive1 = dif5 >= 0;
		var totalSteps1 = Math.ceil(Math.abs(dif5) / step2);
		var step3 = dif5 / totalSteps1;
		var angle1 = pi_2;
		var cx6;
		var cy6;
		var bx6 = 0;
		var by6 = 0;
		var dx6 = 0;
		var dy6 = 0;
		var ex1 = 0;
		var ey1 = 0;
		var r21 = radius - thick;
		var _g3 = 0;
		var _g11 = totalSteps1 + 1;
		while(_g3 < _g11) {
			var i1 = _g3++;
			cx6 = bx + radius * Math.sin(angle1);
			cy6 = by + radius * Math.cos(angle1);
			ex1 = bx + r21 * Math.sin(angle1);
			ey1 = by + r21 * Math.cos(angle1);
			if(i1 != 0) {
				var t01 = new trilateral_tri_Trilateral(dx6,dy6,bx6,by6,cx6,cy6);
				var t12 = new trilateral_tri_Trilateral(dx6,dy6,cx6,cy6,ex1,ey1);
				out2[out2.length] = t01;
				out2[out2.length] = t12;
			}
			angle1 += step3;
			bx6 = cx6;
			by6 = cy6;
			dx6 = ex1;
			dy6 = ey1;
		}
		var triArr1 = out2;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t9 = triArr1[_g4];
			++_g4;
			out[out.length] = t9;
		}
		var t10 = [];
		var this29;
		if(t10 == null) {
			var t13 = [];
			var this30;
			if(t13 == null) {
				var t14 = [];
				var this31 = t14 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t14;
				this30 = this31;
			} else {
				this30 = t13;
			}
			this29 = this30;
		} else {
			this29 = t10;
		}
		var this32 = this29;
		var out3 = this32;
		var pi3 = Math.PI;
		var step4 = pi3 * 2 / 36;
		var dif10;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f16;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f16 = pi_2;
			} else {
				var a16 = pi_2 % (2 * Math.PI);
				f16 = a16 >= 0 ? a16 : a16 + 2 * Math.PI;
			}
			var this33 = f16;
			var za8 = this33;
			var f17;
			if(0 > Math.PI) {
				f17 = 0;
			} else {
				var a17 = 0 % (2 * Math.PI);
				f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
			}
			var this34 = f17;
			var zb8 = this34;
			var fa8 = za8;
			var fb8 = zb8;
			var theta8 = Math.abs(fa8 - fb8);
			var clockwise8 = pi_2 < 0;
			var dif11 = clockwise8 ? theta8 : -theta8;
			dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
			break;
		case 1:
			var f18;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f18 = pi_2;
			} else {
				var a18 = pi_2 % (2 * Math.PI);
				f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
			}
			var this35 = f18;
			var za9 = this35;
			var f19;
			if(0 > Math.PI) {
				f19 = 0;
			} else {
				var a19 = 0 % (2 * Math.PI);
				f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
			}
			var this36 = f19;
			var zb9 = this36;
			var fa9 = za9;
			var fb9 = zb9;
			var theta9 = Math.abs(fa9 - fb9);
			var clockwise9 = pi_2 < 0;
			var dif12 = clockwise9 ? theta9 : -theta9;
			dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
			break;
		case 2:
			var f20;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f20 = pi_2;
			} else {
				var a20 = pi_2 % (2 * Math.PI);
				f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
			}
			var this37 = f20;
			var za10 = this37;
			var f21;
			if(0 > Math.PI) {
				f21 = 0;
			} else {
				var a21 = 0 % (2 * Math.PI);
				f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
			}
			var this38 = f21;
			var zb10 = this38;
			var fa10 = za10;
			var fb10 = zb10;
			var theta10 = Math.abs(fa10 - fb10);
			var smallest2 = theta10 <= Math.PI;
			var clockwise10 = pi_2 < 0;
			var dif13 = clockwise10 ? theta10 : -theta10;
			dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
			break;
		case 3:
			var f22;
			if(pi_2 >= 0 && pi_2 > Math.PI) {
				f22 = pi_2;
			} else {
				var a22 = pi_2 % (2 * Math.PI);
				f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
			}
			var this39 = f22;
			var za11 = this39;
			var f23;
			if(0 > Math.PI) {
				f23 = 0;
			} else {
				var a23 = 0 % (2 * Math.PI);
				f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
			}
			var this40 = f23;
			var zb11 = this40;
			var fa11 = za11;
			var fb11 = zb11;
			var theta11 = Math.abs(fa11 - fb11);
			var largest2 = theta11 > Math.PI;
			var clockwise11 = pi_2 < 0;
			var dif14 = clockwise11 ? theta11 : -theta11;
			dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta11) : 2 * Math.PI - theta11;
			break;
		}
		var positive2 = dif10 >= 0;
		var totalSteps2 = Math.ceil(Math.abs(dif10) / step4);
		var step5 = dif10 / totalSteps2;
		var angle2 = pi_2;
		var cx7;
		var cy7;
		var bx7 = 0;
		var by7 = 0;
		var dx7 = 0;
		var dy7 = 0;
		var ex2 = 0;
		var ey2 = 0;
		var r22 = radius - thick;
		var _g5 = 0;
		var _g12 = totalSteps2 + 1;
		while(_g5 < _g12) {
			var i2 = _g5++;
			cx7 = cx + radius * Math.sin(angle2);
			cy7 = cy + radius * Math.cos(angle2);
			ex2 = cx + r22 * Math.sin(angle2);
			ey2 = cy + r22 * Math.cos(angle2);
			if(i2 != 0) {
				var t02 = new trilateral_tri_Trilateral(dx7,dy7,bx7,by7,cx7,cy7);
				var t15 = new trilateral_tri_Trilateral(dx7,dy7,cx7,cy7,ex2,ey2);
				out3[out3.length] = t02;
				out3[out3.length] = t15;
			}
			angle2 += step5;
			bx7 = cx7;
			by7 = cy7;
			dx7 = ex2;
			dy7 = ey2;
		}
		var triArr2 = out3;
		var _g6 = 0;
		while(_g6 < triArr2.length) {
			var t16 = triArr2[_g6];
			++_g6;
			out[out.length] = t16;
		}
		var gamma1 = -pi_2;
		var t17 = [];
		var this41;
		if(t17 == null) {
			var t18 = [];
			var this42;
			if(t18 == null) {
				var t19 = [];
				var this43 = t19 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t19;
				this42 = this43;
			} else {
				this42 = t18;
			}
			this41 = this42;
		} else {
			this41 = t17;
		}
		var this44 = this41;
		var out4 = this44;
		var pi4 = Math.PI;
		var step6 = pi4 * 2 / 36;
		var dif15;
		switch(trilateral_angle_DifferencePreference.ANTICLOCKWISE._hx_index) {
		case 0:
			var f24;
			if(0 > Math.PI) {
				f24 = 0;
			} else {
				var a24 = 0 % (2 * Math.PI);
				f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
			}
			var this45 = f24;
			var za12 = this45;
			var f25;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f25 = gamma1;
			} else {
				var a25 = gamma1 % (2 * Math.PI);
				f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
			}
			var this46 = f25;
			var zb12 = this46;
			var fa12 = za12;
			var fb12 = zb12;
			var theta12 = Math.abs(fa12 - fb12);
			var clockwise12 = 0 < gamma1;
			var dif16 = clockwise12 ? theta12 : -theta12;
			dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
			break;
		case 1:
			var f26;
			if(0 > Math.PI) {
				f26 = 0;
			} else {
				var a26 = 0 % (2 * Math.PI);
				f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
			}
			var this47 = f26;
			var za13 = this47;
			var f27;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f27 = gamma1;
			} else {
				var a27 = gamma1 % (2 * Math.PI);
				f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
			}
			var this48 = f27;
			var zb13 = this48;
			var fa13 = za13;
			var fb13 = zb13;
			var theta13 = Math.abs(fa13 - fb13);
			var clockwise13 = 0 < gamma1;
			var dif17 = clockwise13 ? theta13 : -theta13;
			dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
			break;
		case 2:
			var f28;
			if(0 > Math.PI) {
				f28 = 0;
			} else {
				var a28 = 0 % (2 * Math.PI);
				f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
			}
			var this49 = f28;
			var za14 = this49;
			var f29;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f29 = gamma1;
			} else {
				var a29 = gamma1 % (2 * Math.PI);
				f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
			}
			var this50 = f29;
			var zb14 = this50;
			var fa14 = za14;
			var fb14 = zb14;
			var theta14 = Math.abs(fa14 - fb14);
			var smallest3 = theta14 <= Math.PI;
			var clockwise14 = 0 < gamma1;
			var dif18 = clockwise14 ? theta14 : -theta14;
			dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
			break;
		case 3:
			var f30;
			if(0 > Math.PI) {
				f30 = 0;
			} else {
				var a30 = 0 % (2 * Math.PI);
				f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
			}
			var this51 = f30;
			var za15 = this51;
			var f31;
			if(gamma1 >= 0 && gamma1 > Math.PI) {
				f31 = gamma1;
			} else {
				var a31 = gamma1 % (2 * Math.PI);
				f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
			}
			var this52 = f31;
			var zb15 = this52;
			var fa15 = za15;
			var fb15 = zb15;
			var theta15 = Math.abs(fa15 - fb15);
			var largest3 = theta15 > Math.PI;
			var clockwise15 = 0 < gamma1;
			var dif19 = clockwise15 ? theta15 : -theta15;
			dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
			break;
		}
		var positive3 = dif15 >= 0;
		var totalSteps3 = Math.ceil(Math.abs(dif15) / step6);
		var step7 = dif15 / totalSteps3;
		var angle3 = 0;
		var cx8;
		var cy8;
		var bx8 = 0;
		var by8 = 0;
		var dx8 = 0;
		var dy8 = 0;
		var ex3 = 0;
		var ey3 = 0;
		var r23 = radius - thick;
		var _g7 = 0;
		var _g13 = totalSteps3 + 1;
		while(_g7 < _g13) {
			var i3 = _g7++;
			cx8 = dx + radius * Math.sin(angle3);
			cy8 = dy + radius * Math.cos(angle3);
			ex3 = dx + r23 * Math.sin(angle3);
			ey3 = dy + r23 * Math.cos(angle3);
			if(i3 != 0) {
				var t03 = new trilateral_tri_Trilateral(dx8,dy8,bx8,by8,cx8,cy8);
				var t110 = new trilateral_tri_Trilateral(dx8,dy8,cx8,cy8,ex3,ey3);
				out4[out4.length] = t03;
				out4[out4.length] = t110;
			}
			angle3 += step7;
			bx8 = cx8;
			by8 = cy8;
			dx8 = ex3;
			dy8 = ey3;
		}
		var triArr3 = out4;
		var _g8 = 0;
		while(_g8 < triArr3.length) {
			var t20 = triArr3[_g8];
			++_g8;
			out[out.length] = t20;
		}
		var triArr4 = out;
		var tri;
		var _g9 = 0;
		while(_g9 < triArr4.length) {
			var t21 = triArr4[_g9];
			++_g9;
			if(t21 != null) {
				var t22 = Object.create(trilateral_tri_Triangle.prototype);
				t22.id = id;
				t22.ax = t21.ax;
				t22.ay = t21.ay;
				t22.bx = t21.bx;
				t22.by = t21.by;
				t22.cx = t21.cx;
				t22.cy = t21.cy;
				t22.mark = t21.mark;
				t22.depth = 0;
				t22.alpha = 1.;
				t22.colorID = color;
				t22.colorA = color;
				t22.colorB = color;
				t22.colorC = color;
				t22.windingAdjusted = t21.windingAdjusted;
				tri = t22;
				this1[this1.length] = tri;
			}
		}
		return this.refCount - 1;
	}
	,spiralLines: function(x,y,radius,nolines,startWid,stepWid,color) {
		var theta = 0.;
		var line;
		var wid = startWid;
		var _g = 0;
		var _g1 = nolines;
		while(_g < _g1) {
			var i = _g++;
			var p0_x = x;
			var p0_y = y;
			var p1_x = x + radius * Math.sin(theta);
			var p1_y = y + radius * Math.cos(theta);
			theta += Math.PI * 2 / nolines;
			var width = wid += stepWid;
			var dx = p0_x - p1_x;
			var dy = p0_y - p1_y;
			var P_x = p0_x - width / 2;
			var P_y = p0_y;
			var omega = Math.atan2(dy,dx);
			var dim_x = width;
			var dim_y = dx * dx + dy * dy;
			var pivotX = p0_x + width / 2;
			var pivotY = p0_y;
			var px = P_x;
			var py = P_y;
			var dx1 = dim_x;
			var dy1 = dim_y;
			var A_ = { x : px, y : py};
			var B_ = { x : px + dx1, y : py};
			var C_ = { x : px + dx1, y : py + dy1};
			var D_ = { x : px, y : py + dy1};
			if(omega != 0.) {
				var sin = Math.sin(omega);
				var cos = Math.cos(omega);
				var px1 = A_.x - pivotX;
				var py1 = A_.y - pivotY;
				var px2 = px1 * cos - py1 * sin;
				py1 = py1 * cos + px1 * sin;
				A_ = { x : px2 + pivotX, y : py1 + pivotY};
				var px3 = B_.x - pivotX;
				var py2 = B_.y - pivotY;
				var px21 = px3 * cos - py2 * sin;
				py2 = py2 * cos + px3 * sin;
				B_ = { x : px21 + pivotX, y : py2 + pivotY};
				var px4 = C_.x - pivotX;
				var py3 = C_.y - pivotY;
				var px22 = px4 * cos - py3 * sin;
				py3 = py3 * cos + px4 * sin;
				C_ = { x : px22 + pivotX, y : py3 + pivotY};
				var px5 = D_.x - pivotX;
				var py4 = D_.y - pivotY;
				var px23 = px5 * cos - py4 * sin;
				py4 = py4 * cos + px5 * sin;
				D_ = { x : px23 + pivotX, y : py4 + pivotY};
			}
			var q_A = A_;
			var q_B = B_;
			var q_C = C_;
			var q_D = D_;
			line = { t0 : new trilateral_tri_Trilateral(q_A.x,q_A.y,q_B.x,q_B.y,q_D.x,q_D.y), t1 : new trilateral_tri_Trilateral(q_B.x,q_B.y,q_C.x,q_C.y,q_D.x,q_D.y)};
			var this1 = this.triangles;
			var id = this.refCount;
			var tri = line.t0;
			var t = Object.create(trilateral_tri_Triangle.prototype);
			t.id = id;
			t.ax = tri.ax;
			t.ay = tri.ay;
			t.bx = tri.bx;
			t.by = tri.by;
			t.cx = tri.cx;
			t.cy = tri.cy;
			t.mark = tri.mark;
			t.depth = 0;
			t.alpha = 1.;
			t.colorID = color;
			t.colorA = color;
			t.colorB = color;
			t.colorC = color;
			t.windingAdjusted = tri.windingAdjusted;
			var tri0 = t;
			this1[this1.length] = tri0;
			var tri1 = line.t1;
			var t1 = Object.create(trilateral_tri_Triangle.prototype);
			t1.id = id;
			t1.ax = tri1.ax;
			t1.ay = tri1.ay;
			t1.bx = tri1.bx;
			t1.by = tri1.by;
			t1.cx = tri1.cx;
			t1.cy = tri1.cy;
			t1.mark = tri1.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = color;
			t1.colorA = color;
			t1.colorB = color;
			t1.colorC = color;
			t1.windingAdjusted = tri1.windingAdjusted;
			var tri11 = t1;
			this1[this1.length] = tri11;
		}
		this.refCount++;
		return this.refCount - 1;
	}
};
var trilateral_tri_Trilateral = function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
	if(mark_ == null) {
		mark_ = 0;
	}
	this.mark = 0;
	this.ax = ax_;
	this.ay = ay_;
	this.bx = bx_;
	this.by = by_;
	this.cx = cx_;
	this.cy = cy_;
	this.windingAdjusted = this.adjustWinding();
	if(this.windingAdjusted) {
		this.ax = ax_;
		this.ay = ay_;
		this.bx = cx_;
		this.by = cy_;
		this.cx = bx_;
		this.cy = by_;
	}
	this.mark = mark_;
};
trilateral_tri_Trilateral.__name__ = true;
trilateral_tri_Trilateral.prototype = {
	get_x: function() {
		return Math.min(Math.min(this.ax,this.bx),this.cx);
	}
	,set_x: function(x) {
		var dx = x - this.get_x();
		this.ax += dx;
		this.bx += dx;
		this.cx += dx;
		return x;
	}
	,get_y: function() {
		return Math.min(Math.min(this.ay,this.by),this.cy);
	}
	,set_y: function(y) {
		var dy = y - this.get_y();
		this.ay += dy;
		this.by += dy;
		this.cy += dy;
		return y;
	}
	,get_right: function() {
		return Math.max(Math.max(this.ax,this.bx),this.cx);
	}
	,get_bottom: function() {
		return Math.max(Math.max(this.ay,this.by),this.cy);
	}
	,moveDelta: function(dx,dy) {
		this.ax += dx;
		this.ay += dy;
		this.bx += dx;
		this.by += dy;
		this.cx += dx;
		this.cy += dy;
	}
	,liteHit: function(px,py) {
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,fullHit: function(px,py) {
		if(px > this.get_x() && px < this.get_right() && py > this.get_y() && py < this.get_bottom()) {
			return true;
		}
		var planeAB = (this.ax - px) * (this.by - py) - (this.bx - px) * (this.ay - py);
		var planeBC = (this.bx - px) * (this.cy - py) - (this.cx - px) * (this.by - py);
		var planeCA = (this.cx - px) * (this.ay - py) - (this.ax - px) * (this.cy - py);
		if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0)) {
			return (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0);
		} else {
			return false;
		}
	}
	,adjustWinding: function() {
		return this.ax * this.by - this.bx * this.ay + (this.bx * this.cy - this.cx * this.by) + (this.cx * this.ay - this.ax * this.cy) > 0;
	}
	,rotate: function(x,y,theta) {
		var cos = Math.cos(theta);
		var sin = Math.sin(theta);
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx = this.ax;
		var dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
	,rotateTrig: function(x,y,cos,sin) {
		this.ax -= x;
		this.ay -= y;
		this.bx -= x;
		this.by -= y;
		this.cx -= x;
		this.cy -= y;
		var dx = this.ax;
		var dy = this.ay;
		this.ax = dx * cos - dy * sin;
		this.ay = dx * sin + dy * cos;
		dx = this.bx;
		dy = this.by;
		this.bx = dx * cos - dy * sin;
		this.by = dx * sin + dy * cos;
		dx = this.cx;
		dy = this.cy;
		this.cx = dx * cos - dy * sin;
		this.cy = dx * sin + dy * cos;
		this.ax += x;
		this.ay += y;
		this.bx += x;
		this.by += y;
		this.cx += x;
		this.cy += y;
	}
};
var trilateral_tri_Triangle = function(id_,A,B,C,depth_,colorID_) {
	this.id = id_;
	trilateral_tri_Trilateral.call(this,A.x,A.y,B.x,B.y,C.x,C.y);
	this.depth = depth_;
	this.alpha = 1.;
	this.colorID = colorID_;
	this.colorA = colorID_;
	this.colorB = colorID_;
	this.colorC = colorID_;
};
trilateral_tri_Triangle.__name__ = true;
trilateral_tri_Triangle.fromTrilateral = function(id_,tri,depth_,colorID_) {
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id_;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = depth_;
	t.alpha = 1.;
	t.colorID = colorID_;
	t.colorA = colorID_;
	t.colorB = colorID_;
	t.colorC = colorID_;
	t.windingAdjusted = tri.windingAdjusted;
	return t;
};
trilateral_tri_Triangle.__super__ = trilateral_tri_Trilateral;
trilateral_tri_Triangle.prototype = $extend(trilateral_tri_Trilateral.prototype,{
	hitTest: function(P) {
		return this.fullHit(P.x,P.y);
	}
	,drawStrips: function(drawRect) {
		var xi = Math.floor(this.get_x());
		var yi = Math.floor(this.get_y());
		var righti = Math.ceil(this.get_right());
		var bottomi = Math.ceil(this.get_bottom());
		var sx = 0;
		var ex = 0;
		var sFound;
		var eFound;
		var _g = yi;
		var _g1 = bottomi;
		while(_g < _g1) {
			var y0 = _g++;
			sFound = false;
			eFound = false;
			var _g2 = xi;
			var _g11 = righti;
			while(_g2 < _g11) {
				var x0 = _g2++;
				var planeAB = (this.ax - x0) * (this.by - y0) - (this.bx - x0) * (this.ay - y0);
				var planeBC = (this.bx - x0) * (this.cy - y0) - (this.cx - x0) * (this.by - y0);
				var planeCA = (this.cx - x0) * (this.ay - y0) - (this.ax - x0) * (this.cy - y0);
				if((Math.abs(planeAB) / planeAB | 0) == (Math.abs(planeBC) / planeBC | 0) && (Math.abs(planeBC) / planeBC | 0) == (Math.abs(planeCA) / planeCA | 0)) {
					sx = x0;
					sFound = true;
					break;
				}
			}
			if(sFound) {
				var _g21 = sx;
				var _g3 = righti;
				while(_g21 < _g3) {
					var x01 = _g21++;
					var planeAB1 = (this.ax - x01) * (this.by - y0) - (this.bx - x01) * (this.ay - y0);
					var planeBC1 = (this.bx - x01) * (this.cy - y0) - (this.cx - x01) * (this.by - y0);
					var planeCA1 = (this.cx - x01) * (this.ay - y0) - (this.ax - x01) * (this.cy - y0);
					if(!((Math.abs(planeAB1) / planeAB1 | 0) == (Math.abs(planeBC1) / planeBC1 | 0) && (Math.abs(planeBC1) / planeBC1 | 0) == (Math.abs(planeCA1) / planeCA1 | 0))) {
						ex = x01;
						eFound = true;
						break;
					}
				}
				if(eFound) {
					drawRect(sx,y0,ex - sx,1);
				}
			}
		}
	}
});
var trilateral_tri__$TriangleArray_TriangleArray_$Impl_$ = {};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.__name__ = true;
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new = function(t) {
	var this1 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	return this1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.changeFillColorByID = function(this1,id,colorID,startID,endID) {
	if(endID == null) {
		endID = 0;
	}
	if(startID == null) {
		startID = 0;
	}
	var tri;
	if(endID == 0) {
		endID = this1.length;
	}
	var _g = startID;
	var _g1 = endID;
	while(_g < _g1) {
		var i = _g++;
		tri = this1[i];
		if(tri.id == id) {
			tri.colorID = colorID;
			tri.colorA = colorID;
			tri.colorB = colorID;
			tri.colorC = colorID;
		}
	}
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getEmpty = function() {
	var t = [];
	var this1 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	return this1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.clear = function(this1) {
	var t = [];
	var this2 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	var this3 = this2;
	this1 = this3;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.pushPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.drawTriangle = function(this1,id,p0,p1,p2,colorID) {
	var tri = new trilateral_tri_Triangle(id,p0,p1,p2,0,colorID);
	this1[this1.length] = tri;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.add = function(this1,id,tri,colorID) {
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id;
	t.ax = tri.ax;
	t.ay = tri.ay;
	t.bx = tri.bx;
	t.by = tri.by;
	t.cx = tri.cx;
	t.cy = tri.cy;
	t.mark = tri.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri.windingAdjusted;
	var tri1 = t;
	this1[this1.length] = tri1;
	return tri1;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addPair = function(this1,id,tri,colorID) {
	var tri1 = tri.t0;
	var t = Object.create(trilateral_tri_Triangle.prototype);
	t.id = id;
	t.ax = tri1.ax;
	t.ay = tri1.ay;
	t.bx = tri1.bx;
	t.by = tri1.by;
	t.cx = tri1.cx;
	t.cy = tri1.cy;
	t.mark = tri1.mark;
	t.depth = 0;
	t.alpha = 1.;
	t.colorID = colorID;
	t.colorA = colorID;
	t.colorB = colorID;
	t.colorC = colorID;
	t.windingAdjusted = tri1.windingAdjusted;
	var tri0 = t;
	this1[this1.length] = tri0;
	var tri2 = tri.t1;
	var t1 = Object.create(trilateral_tri_Triangle.prototype);
	t1.id = id;
	t1.ax = tri2.ax;
	t1.ay = tri2.ay;
	t1.bx = tri2.bx;
	t1.by = tri2.by;
	t1.cx = tri2.cx;
	t1.cy = tri2.cy;
	t1.mark = tri2.mark;
	t1.depth = 0;
	t1.alpha = 1.;
	t1.colorID = colorID;
	t1.colorA = colorID;
	t1.colorB = colorID;
	t1.colorC = colorID;
	t1.windingAdjusted = tri2.windingAdjusted;
	var tri11 = t1;
	this1[this1.length] = tri11;
	return tri;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.addArray = function(this1,id,triArr,colorID) {
	var tri;
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		if(t != null) {
			var t1 = Object.create(trilateral_tri_Triangle.prototype);
			t1.id = id;
			t1.ax = t.ax;
			t1.ay = t.ay;
			t1.bx = t.bx;
			t1.by = t.by;
			t1.cx = t.cx;
			t1.cy = t.cy;
			t1.mark = t.mark;
			t1.depth = 0;
			t1.alpha = 1.;
			t1.colorID = colorID;
			t1.colorA = colorID;
			t1.colorB = colorID;
			t1.colorC = colorID;
			t1.windingAdjusted = t.windingAdjusted;
			tri = t1;
			this1[this1.length] = tri;
		}
	}
	return triArr;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getTriangles = function(this1,id) {
	var t = [];
	var this2 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	var this3 = this2;
	var out = this3;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(this1[i].id == id) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.getHitTriangles = function(this1,p) {
	var t = [];
	var this2 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	var this3 = this2;
	var out = this3;
	var _g = 0;
	var _g1 = this1.length;
	while(_g < _g1) {
		var i = _g++;
		if(this1[i].hitTest(p)) {
			out[out.length] = this1[i];
		}
	}
	return out;
};
var trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$ = {};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.__name__ = true;
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new = function(t) {
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.reversed = function(this1) {
	this1.reverse();
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.getEmpty = function() {
	var t = [];
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	return this1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.clear = function(this1) {
	var t = [];
	var this2 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	var this3 = this2;
	this1 = this3;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.add = function(this1,tri) {
	this1[this1.length] = tri;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addPair = function(this1,tp) {
	this1[this1.length] = tp.t0;
	this1[this1.length] = tp.t1;
};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.addArray = function(this1,triArr) {
	var _g = 0;
	while(_g < triArr.length) {
		var t = triArr[_g];
		++_g;
		this1[this1.length] = t;
	}
	return triArr;
};
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.stageRadius = 600;
htmlHelper_tools_AnimateTimer.counter = 0;
khaMath_Matrix4.width = 4;
khaMath_Matrix4.height = 4;
shaders_Shaders.vertex = "attribute vec3 pos;" + "attribute vec4 color;" + "varying vec4 vcol;" + "uniform mat4 modelViewProjection;" + "void main(void) {" + " gl_Position = modelViewProjection * vec4(pos, 1.0);" + " vcol = color;" + "}";
shaders_Shaders.fragment = "precision mediump float;" + "varying vec4 vcol;" + "void main(void) {" + " gl_FragColor = vcol;" + "}";
trilateral_geom_Algebra.quadStep = 0.03;
trilateral_geom_Algebra.cubicStep = 0.03;
trilateral_geom_Contour.smallDotScale = 0.07;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);

//# sourceMappingURL=test.js.map